// -----------------------------------------------------------------------------
// Auto-Generated by:        __   _ __      _  __
//                          / /  (_) /____ | |/_/
//                         / /__/ / __/ -_)>  <
//                        /____/_/\__/\__/_/|_|
//                     Build your hardware, easily!
//                   https://github.com/enjoy-digital/litex
//
// Filename   : vc707.v
// Device     : xc7vx485tffg1761-2
// LiteX sha1 : a1ea5a2f6
// Date       : 2025-01-14 16:53:06
//------------------------------------------------------------------------------

`timescale 1ns / 1ps

//------------------------------------------------------------------------------
// Module
//------------------------------------------------------------------------------

module vc707 (
    input  wire          clk200_n,
    (* dont_touch = "true" *)
    input  wire          clk200_p,
    input  wire          cpu_reset,
    output wire   [15:0] ddram_a,
    output wire    [2:0] ddram_ba,
    output wire          ddram_cas_n,
    output wire          ddram_cke,
    output wire          ddram_clk_n,
    output wire          ddram_clk_p,
    output wire          ddram_cs_n,
    output wire    [3:0] ddram_dm,
    inout  wire   [31:0] ddram_dq,
    inout  wire    [3:0] ddram_dqs_n,
    inout  wire    [3:0] ddram_dqs_p,
    output wire          ddram_odt,
    output wire          ddram_ras_n,
    output wire          ddram_reset_n,
    output wire          ddram_we_n,
    output wire          sdcard_clk,
    inout  wire          sdcard_cmd,
    inout  wire    [3:0] sdcard_data,
    input  wire          sdcard_det,
    input  wire          sdcard_wp,
    input  wire          serial_rx,
    output reg           serial_tx,
    output wire          user_led0,
    output wire          user_led1,
    output wire          user_led2,
    output wire          user_led3,
    output wire          user_led4,
    output wire          user_led5,
    output wire          user_led6,
    output wire          user_led7
);


//------------------------------------------------------------------------------
// Hierarchy
//------------------------------------------------------------------------------

/*
_SoCLinux
└─── crg (_CRG)
│    └─── pll (S7MMCM)
│    │    └─── [FDCE]
│    │    └─── [FDCE]
│    │    └─── [FDCE]
│    │    └─── [FDCE]
│    │    └─── [FDCE]
│    │    └─── [FDCE]
│    │    └─── [FDCE]
│    │    └─── [FDCE]
│    │    └─── [MMCME2_ADV]
│    │    └─── [BUFG]
│    │    └─── [BUFG]
│    │    └─── [BUFG]
│    └─── idelayctrl (S7IDELAYCTRL)
│    │    └─── [IDELAYCTRL]
└─── bus (SoCBusHandler)
│    └─── _interconnect (InterconnectShared)
│    │    └─── arbiter (Arbiter)
│    │    │    └─── rr (RoundRobin)
│    │    └─── decoder (Decoder)
│    │    └─── timeout (Timeout)
│    │    │    └─── waittimer_0* (WaitTimer)
└─── csr (SoCCSRHandler)
└─── irq (SoCIRQHandler)
└─── ctrl (SoCController)
└─── cpu (VexRiscvSMP)
│    └─── [VexRiscvLitexSmpCluster_Cc1_Iw32Is4096Iy1_Dw32Ds4096Dy1_ITs4DTs4_Ldw256_Ood_Hb1]
└─── rom (SRAM)
└─── sram (SRAM)
└─── identifier (Identifier)
└─── uart_phy (RS232PHY)
│    └─── tx (RS232PHYTX)
│    │    └─── clk_phase_accum (RS232ClkPhaseAccum)
│    │    └─── fsm (FSM)
│    └─── rx (RS232PHYRX)
│    │    └─── clk_phase_accum (RS232ClkPhaseAccum)
│    │    └─── fsm (FSM)
└─── uart (UART)
│    └─── ev (EventManager)
│    │    └─── eventsourceprocess_0* (EventSourceProcess)
│    │    └─── eventsourceprocess_1* (EventSourceProcess)
│    └─── tx_fifo (SyncFIFO)
│    │    └─── fifo (SyncFIFOBuffered)
│    │    │    └─── fifo (SyncFIFO)
│    └─── rx_fifo (SyncFIFO)
│    │    └─── fifo (SyncFIFOBuffered)
│    │    │    └─── fifo (SyncFIFO)
└─── timer0 (Timer)
│    └─── ev (EventManager)
│    │    └─── eventsourceprocess_0* (EventSourceProcess)
└─── ddrphy (V7DDRPHY)
│    └─── tappeddelayline_0* (TappedDelayLine)
│    └─── dqspattern_0* (DQSPattern)
│    └─── bitslip_0* (BitSlip)
│    └─── bitslip_1* (BitSlip)
│    └─── bitslip_2* (BitSlip)
│    └─── bitslip_3* (BitSlip)
│    └─── bitslip_4* (BitSlip)
│    └─── bitslip_5* (BitSlip)
│    └─── bitslip_6* (BitSlip)
│    └─── bitslip_7* (BitSlip)
│    └─── tappeddelayline_1* (TappedDelayLine)
│    └─── bitslip_8* (BitSlip)
│    └─── bitslip_9* (BitSlip)
│    └─── bitslip_10* (BitSlip)
│    └─── bitslip_11* (BitSlip)
│    └─── bitslip_12* (BitSlip)
│    └─── bitslip_13* (BitSlip)
│    └─── bitslip_14* (BitSlip)
│    └─── bitslip_15* (BitSlip)
│    └─── bitslip_16* (BitSlip)
│    └─── bitslip_17* (BitSlip)
│    └─── bitslip_18* (BitSlip)
│    └─── bitslip_19* (BitSlip)
│    └─── bitslip_20* (BitSlip)
│    └─── bitslip_21* (BitSlip)
│    └─── bitslip_22* (BitSlip)
│    └─── bitslip_23* (BitSlip)
│    └─── bitslip_24* (BitSlip)
│    └─── bitslip_25* (BitSlip)
│    └─── bitslip_26* (BitSlip)
│    └─── bitslip_27* (BitSlip)
│    └─── bitslip_28* (BitSlip)
│    └─── bitslip_29* (BitSlip)
│    └─── bitslip_30* (BitSlip)
│    └─── bitslip_31* (BitSlip)
│    └─── bitslip_32* (BitSlip)
│    └─── bitslip_33* (BitSlip)
│    └─── bitslip_34* (BitSlip)
│    └─── bitslip_35* (BitSlip)
│    └─── bitslip_36* (BitSlip)
│    └─── bitslip_37* (BitSlip)
│    └─── bitslip_38* (BitSlip)
│    └─── bitslip_39* (BitSlip)
│    └─── bitslip_40* (BitSlip)
│    └─── bitslip_41* (BitSlip)
│    └─── bitslip_42* (BitSlip)
│    └─── bitslip_43* (BitSlip)
│    └─── bitslip_44* (BitSlip)
│    └─── bitslip_45* (BitSlip)
│    └─── bitslip_46* (BitSlip)
│    └─── bitslip_47* (BitSlip)
│    └─── bitslip_48* (BitSlip)
│    └─── bitslip_49* (BitSlip)
│    └─── bitslip_50* (BitSlip)
│    └─── bitslip_51* (BitSlip)
│    └─── bitslip_52* (BitSlip)
│    └─── bitslip_53* (BitSlip)
│    └─── bitslip_54* (BitSlip)
│    └─── bitslip_55* (BitSlip)
│    └─── bitslip_56* (BitSlip)
│    └─── bitslip_57* (BitSlip)
│    └─── bitslip_58* (BitSlip)
│    └─── bitslip_59* (BitSlip)
│    └─── bitslip_60* (BitSlip)
│    └─── bitslip_61* (BitSlip)
│    └─── bitslip_62* (BitSlip)
│    └─── bitslip_63* (BitSlip)
│    └─── bitslip_64* (BitSlip)
│    └─── bitslip_65* (BitSlip)
│    └─── bitslip_66* (BitSlip)
│    └─── bitslip_67* (BitSlip)
│    └─── bitslip_68* (BitSlip)
│    └─── bitslip_69* (BitSlip)
│    └─── bitslip_70* (BitSlip)
│    └─── bitslip_71* (BitSlip)
│    └─── tappeddelayline_2* (TappedDelayLine)
│    └─── tappeddelayline_3* (TappedDelayLine)
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [IOBUFDS]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [IOBUFDS]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [IOBUFDS]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [IOBUFDS]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [IDELAYE2]
│    └─── [IOBUF]
│    └─── [OSERDESE2]
│    └─── [ISERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OBUFDS]
│    └─── [OSERDESE2]
│    └─── [ODELAYE2]
│    └─── [OSERDESE2]
└─── sdram (LiteDRAMCore)
│    └─── dfii (DFIInjector)
│    │    └─── pi0 (PhaseInjector)
│    │    └─── pi1 (PhaseInjector)
│    │    └─── pi2 (PhaseInjector)
│    │    └─── pi3 (PhaseInjector)
│    └─── controller (LiteDRAMController)
│    │    └─── refresher (Refresher)
│    │    │    └─── timer (RefreshTimer)
│    │    │    └─── postponer (RefreshPostponer)
│    │    │    └─── sequencer (RefreshSequencer)
│    │    │    │    └─── refreshexecuter_0* (RefreshExecuter)
│    │    │    └─── zqcs_timer (RefreshTimer)
│    │    │    └─── zqs_executer (ZQCSExecuter)
│    │    │    └─── fsm (FSM)
│    │    └─── bankmachine_0* (BankMachine)
│    │    │    └─── syncfifo_0* (SyncFIFO)
│    │    │    │    └─── fifo (SyncFIFO)
│    │    │    └─── buffer_0* (Buffer)
│    │    │    │    └─── pipe_valid (PipeValid)
│    │    │    │    └─── pipeline (Pipeline)
│    │    │    └─── twtpcon (tXXDController)
│    │    │    └─── trccon (tXXDController)
│    │    │    └─── trascon (tXXDController)
│    │    │    └─── fsm (FSM)
│    │    └─── bankmachine_1* (BankMachine)
│    │    │    └─── syncfifo_0* (SyncFIFO)
│    │    │    │    └─── fifo (SyncFIFO)
│    │    │    └─── buffer_0* (Buffer)
│    │    │    │    └─── pipe_valid (PipeValid)
│    │    │    │    └─── pipeline (Pipeline)
│    │    │    └─── twtpcon (tXXDController)
│    │    │    └─── trccon (tXXDController)
│    │    │    └─── trascon (tXXDController)
│    │    │    └─── fsm (FSM)
│    │    └─── bankmachine_2* (BankMachine)
│    │    │    └─── syncfifo_0* (SyncFIFO)
│    │    │    │    └─── fifo (SyncFIFO)
│    │    │    └─── buffer_0* (Buffer)
│    │    │    │    └─── pipe_valid (PipeValid)
│    │    │    │    └─── pipeline (Pipeline)
│    │    │    └─── twtpcon (tXXDController)
│    │    │    └─── trccon (tXXDController)
│    │    │    └─── trascon (tXXDController)
│    │    │    └─── fsm (FSM)
│    │    └─── bankmachine_3* (BankMachine)
│    │    │    └─── syncfifo_0* (SyncFIFO)
│    │    │    │    └─── fifo (SyncFIFO)
│    │    │    └─── buffer_0* (Buffer)
│    │    │    │    └─── pipe_valid (PipeValid)
│    │    │    │    └─── pipeline (Pipeline)
│    │    │    └─── twtpcon (tXXDController)
│    │    │    └─── trccon (tXXDController)
│    │    │    └─── trascon (tXXDController)
│    │    │    └─── fsm (FSM)
│    │    └─── bankmachine_4* (BankMachine)
│    │    │    └─── syncfifo_0* (SyncFIFO)
│    │    │    │    └─── fifo (SyncFIFO)
│    │    │    └─── buffer_0* (Buffer)
│    │    │    │    └─── pipe_valid (PipeValid)
│    │    │    │    └─── pipeline (Pipeline)
│    │    │    └─── twtpcon (tXXDController)
│    │    │    └─── trccon (tXXDController)
│    │    │    └─── trascon (tXXDController)
│    │    │    └─── fsm (FSM)
│    │    └─── bankmachine_5* (BankMachine)
│    │    │    └─── syncfifo_0* (SyncFIFO)
│    │    │    │    └─── fifo (SyncFIFO)
│    │    │    └─── buffer_0* (Buffer)
│    │    │    │    └─── pipe_valid (PipeValid)
│    │    │    │    └─── pipeline (Pipeline)
│    │    │    └─── twtpcon (tXXDController)
│    │    │    └─── trccon (tXXDController)
│    │    │    └─── trascon (tXXDController)
│    │    │    └─── fsm (FSM)
│    │    └─── bankmachine_6* (BankMachine)
│    │    │    └─── syncfifo_0* (SyncFIFO)
│    │    │    │    └─── fifo (SyncFIFO)
│    │    │    └─── buffer_0* (Buffer)
│    │    │    │    └─── pipe_valid (PipeValid)
│    │    │    │    └─── pipeline (Pipeline)
│    │    │    └─── twtpcon (tXXDController)
│    │    │    └─── trccon (tXXDController)
│    │    │    └─── trascon (tXXDController)
│    │    │    └─── fsm (FSM)
│    │    └─── bankmachine_7* (BankMachine)
│    │    │    └─── syncfifo_0* (SyncFIFO)
│    │    │    │    └─── fifo (SyncFIFO)
│    │    │    └─── buffer_0* (Buffer)
│    │    │    │    └─── pipe_valid (PipeValid)
│    │    │    │    └─── pipeline (Pipeline)
│    │    │    └─── twtpcon (tXXDController)
│    │    │    └─── trccon (tXXDController)
│    │    │    └─── trascon (tXXDController)
│    │    │    └─── fsm (FSM)
│    │    └─── multiplexer (Multiplexer)
│    │    │    └─── choose_cmd (_CommandChooser)
│    │    │    │    └─── roundrobin_0* (RoundRobin)
│    │    │    └─── choose_req (_CommandChooser)
│    │    │    │    └─── roundrobin_0* (RoundRobin)
│    │    │    └─── _steerer_0* (_Steerer)
│    │    │    └─── trrdcon (tXXDController)
│    │    │    └─── tfawcon (tFAWController)
│    │    │    └─── tccdcon (tXXDController)
│    │    │    └─── twtrcon (tXXDController)
│    │    │    └─── fsm (FSM)
│    └─── crossbar (LiteDRAMCrossbar)
│    │    └─── roundrobin_0* (RoundRobin)
│    │    └─── roundrobin_1* (RoundRobin)
│    │    └─── roundrobin_2* (RoundRobin)
│    │    └─── roundrobin_3* (RoundRobin)
│    │    └─── roundrobin_4* (RoundRobin)
│    │    └─── roundrobin_5* (RoundRobin)
│    │    └─── roundrobin_6* (RoundRobin)
│    │    └─── roundrobin_7* (RoundRobin)
└─── converter_0* (Converter)
│    └─── upconverter_0* (UpConverter)
└─── wishbone_bridge (LiteDRAMWishbone2Native)
│    └─── fsm (FSM)
└─── leds (LedChaser)
│    └─── waittimer_0* (WaitTimer)
└─── adder (FadderIP)
│    └─── [adder]
└─── sdcard_phy (SDPHY)
│    └─── clocker (SDPHYClocker)
│    └─── init (SDPHYInit)
│    │    └─── fsm_0* (FSM)
│    └─── cmdw (SDPHYCMDW)
│    │    └─── fsm_0* (FSM)
│    └─── cmdr (SDPHYCMDR)
│    │    └─── sdphyr_0* (SDPHYR)
│    │    │    └─── converter_0* (Converter)
│    │    │    │    └─── _upconverter_0* (_UpConverter)
│    │    │    └─── buffer_0* (Buffer)
│    │    │    │    └─── pipe_valid (PipeValid)
│    │    │    │    └─── pipeline (Pipeline)
│    │    └─── fsm_0* (FSM)
│    └─── dataw (SDPHYDATAW)
│    │    └─── crc (SDPHYR)
│    │    │    └─── converter_0* (Converter)
│    │    │    │    └─── _upconverter_0* (_UpConverter)
│    │    │    └─── buffer_0* (Buffer)
│    │    │    │    └─── pipe_valid (PipeValid)
│    │    │    │    └─── pipeline (Pipeline)
│    │    └─── fsm (FSM)
│    └─── datar (SDPHYDATAR)
│    │    └─── sdphyr_0* (SDPHYR)
│    │    │    └─── converter_0* (Converter)
│    │    │    │    └─── _upconverter_0* (_UpConverter)
│    │    │    └─── buffer_0* (Buffer)
│    │    │    │    └─── pipe_valid (PipeValid)
│    │    │    │    └─── pipeline (Pipeline)
│    │    └─── fsm_0* (FSM)
│    └─── io (SDPHYIOGen)
└─── sdcard_core (SDCore)
│    └─── crc7_inserter (CRC)
│    └─── crc16_inserter (CRC16Inserter)
│    │    └─── crc_0* (CRC)
│    │    └─── crc_1* (CRC)
│    │    └─── crc_2* (CRC)
│    │    └─── crc_3* (CRC)
│    │    └─── fsm (FSM)
│    └─── crc16_checker (CRC16Checker)
│    │    └─── syncfifo_0* (SyncFIFO)
│    │    │    └─── fifo (SyncFIFO)
│    └─── fsm (FSM)
└─── sdcard_block2mem (SDBlock2MemDMA)
│    └─── syncfifo_0* (SyncFIFO)
│    │    └─── fifo (SyncFIFOBuffered)
│    │    │    └─── fifo (SyncFIFO)
│    └─── converter_0* (Converter)
│    │    └─── _upconverter_0* (_UpConverter)
│    └─── dma (WishboneDMAWriter)
│    │    └─── fsm (FSM)
└─── sdcard_mem2block (SDMem2BlockDMA)
│    └─── dma (WishboneDMAReader)
│    │    └─── fifo (SyncFIFO)
│    │    │    └─── fifo (SyncFIFO)
│    │    └─── fsm (FSM)
│    └─── converter_0* (Converter)
│    │    └─── _downconverter_0* (_DownConverter)
│    └─── syncfifo_0* (SyncFIFO)
│    │    └─── fifo (SyncFIFOBuffered)
│    │    │    └─── fifo (SyncFIFO)
└─── sdcard_irq (EventManager)
│    └─── eventsourcepulse_0* (EventSourcePulse)
│    └─── eventsourcepulse_1* (EventSourcePulse)
│    └─── eventsourcepulse_2* (EventSourcePulse)
│    └─── eventsourcelevel_0* (EventSourceLevel)
└─── csr_bridge (Wishbone2CSR)
│    └─── fsm (FSM)
└─── csr_bankarray (CSRBankArray)
│    └─── csrbank_0* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstorage_1* (CSRStorage)
│    │    └─── csrstatus_0* (CSRStatus)
│    └─── csrbank_1* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstorage_1* (CSRStorage)
│    │    └─── csrstatus_0* (CSRStatus)
│    └─── csrbank_2* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstorage_1* (CSRStorage)
│    │    └─── csrstorage_2* (CSRStorage)
│    │    └─── csrstorage_3* (CSRStorage)
│    │    └─── csrstorage_4* (CSRStorage)
│    │    └─── csrstorage_5* (CSRStorage)
│    └─── sram_0* (SRAM)
│    └─── csrbank_3* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    └─── csrbank_4* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstorage_1* (CSRStorage)
│    │    └─── csrstorage_2* (CSRStorage)
│    │    └─── csrstatus_0* (CSRStatus)
│    │    └─── csrstorage_3* (CSRStorage)
│    │    └─── csrstatus_1* (CSRStatus)
│    └─── csrbank_5* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstorage_1* (CSRStorage)
│    │    └─── csrstorage_2* (CSRStorage)
│    │    └─── csrstatus_0* (CSRStatus)
│    │    └─── csrstatus_1* (CSRStatus)
│    │    └─── csrstatus_2* (CSRStatus)
│    │    └─── csrstorage_3* (CSRStorage)
│    │    └─── csrstorage_4* (CSRStorage)
│    └─── csrbank_6* (CSRBank)
│    │    └─── csrstatus_0* (CSRStatus)
│    │    └─── csrstatus_1* (CSRStatus)
│    │    └─── csrstorage_0* (CSRStorage)
│    └─── csrbank_7* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstorage_1* (CSRStorage)
│    │    └─── csrstorage_2* (CSRStorage)
│    │    └─── csrstatus_0* (CSRStatus)
│    │    └─── csrstorage_3* (CSRStorage)
│    │    └─── csrstatus_1* (CSRStatus)
│    └─── csrbank_8* (CSRBank)
│    │    └─── csrstatus_0* (CSRStatus)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstatus_1* (CSRStatus)
│    └─── csrbank_9* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstorage_1* (CSRStorage)
│    │    └─── csrstorage_2* (CSRStorage)
│    │    └─── csrstorage_3* (CSRStorage)
│    │    └─── csrstorage_4* (CSRStorage)
│    │    └─── csrstatus_0* (CSRStatus)
│    │    └─── csrstorage_5* (CSRStorage)
│    │    └─── csrstorage_6* (CSRStorage)
│    │    └─── csrstorage_7* (CSRStorage)
│    │    └─── csrstorage_8* (CSRStorage)
│    │    └─── csrstatus_1* (CSRStatus)
│    │    └─── csrstorage_9* (CSRStorage)
│    │    └─── csrstorage_10* (CSRStorage)
│    │    └─── csrstorage_11* (CSRStorage)
│    │    └─── csrstorage_12* (CSRStorage)
│    │    └─── csrstatus_2* (CSRStatus)
│    │    └─── csrstorage_13* (CSRStorage)
│    │    └─── csrstorage_14* (CSRStorage)
│    │    └─── csrstorage_15* (CSRStorage)
│    │    └─── csrstorage_16* (CSRStorage)
│    │    └─── csrstatus_3* (CSRStatus)
│    └─── csrbank_10* (CSRBank)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstorage_1* (CSRStorage)
│    │    └─── csrstorage_2* (CSRStorage)
│    │    └─── csrstorage_3* (CSRStorage)
│    │    └─── csrstatus_0* (CSRStatus)
│    │    └─── csrstatus_1* (CSRStatus)
│    │    └─── csrstatus_2* (CSRStatus)
│    │    └─── csrstorage_4* (CSRStorage)
│    └─── csrbank_11* (CSRBank)
│    │    └─── csrstatus_0* (CSRStatus)
│    │    └─── csrstatus_1* (CSRStatus)
│    │    └─── csrstatus_2* (CSRStatus)
│    │    └─── csrstatus_3* (CSRStatus)
│    │    └─── csrstorage_0* (CSRStorage)
│    │    └─── csrstatus_4* (CSRStatus)
│    │    └─── csrstatus_5* (CSRStatus)
└─── csr_interconnect (InterconnectShared)
└─── [ODDR]
└─── [FDPE]
└─── [FDPE]
└─── [IOBUF]
└─── [IOBUF]
└─── [IOBUF]
└─── [IOBUF]
└─── [IOBUF]
└─── [ODDR]
└─── [FDPE]
└─── [FDPE]
└─── [FDPE]
└─── [FDPE]
└─── [ODDR]
└─── [IDDR]
└─── [IDDR]
└─── [ODDR]
└─── [ODDR]
└─── [IDDR]
└─── [ODDR]
└─── [IDDR]
└─── [ODDR]
└─── [ODDR]
└─── [IDDR]
└─── [ODDR]
└─── [ODDR]
└─── [ODDR]
└─── [IBUFDS]
* : Generated name.
[]: BlackBox.
*/

//------------------------------------------------------------------------------
// Signals
//------------------------------------------------------------------------------

reg     [2:0] array_muxed0 = 3'd0;
reg    [13:0] array_muxed1 = 14'd0;
reg           array_muxed10 = 1'd0;
reg           array_muxed11 = 1'd0;
reg           array_muxed12 = 1'd0;
reg           array_muxed13 = 1'd0;
reg     [2:0] array_muxed14 = 3'd0;
reg    [13:0] array_muxed15 = 14'd0;
reg           array_muxed16 = 1'd0;
reg           array_muxed17 = 1'd0;
reg           array_muxed18 = 1'd0;
reg           array_muxed19 = 1'd0;
reg           array_muxed2 = 1'd0;
reg           array_muxed20 = 1'd0;
reg     [2:0] array_muxed21 = 3'd0;
reg    [13:0] array_muxed22 = 14'd0;
reg           array_muxed23 = 1'd0;
reg           array_muxed24 = 1'd0;
reg           array_muxed25 = 1'd0;
reg           array_muxed26 = 1'd0;
reg           array_muxed27 = 1'd0;
reg           array_muxed3 = 1'd0;
reg           array_muxed4 = 1'd0;
reg           array_muxed5 = 1'd0;
reg           array_muxed6 = 1'd0;
reg     [2:0] array_muxed7 = 3'd0;
reg    [13:0] array_muxed8 = 14'd0;
reg           array_muxed9 = 1'd0;
reg     [3:0] bankmachine0_next_state = 4'd0;
reg     [3:0] bankmachine0_state = 4'd0;
reg     [3:0] bankmachine1_next_state = 4'd0;
reg     [3:0] bankmachine1_state = 4'd0;
reg     [3:0] bankmachine2_next_state = 4'd0;
reg     [3:0] bankmachine2_state = 4'd0;
reg     [3:0] bankmachine3_next_state = 4'd0;
reg     [3:0] bankmachine3_state = 4'd0;
reg     [3:0] bankmachine4_next_state = 4'd0;
reg     [3:0] bankmachine4_state = 4'd0;
reg     [3:0] bankmachine5_next_state = 4'd0;
reg     [3:0] bankmachine5_state = 4'd0;
reg     [3:0] bankmachine6_next_state = 4'd0;
reg     [3:0] bankmachine6_state = 4'd0;
reg     [3:0] bankmachine7_next_state = 4'd0;
reg     [3:0] bankmachine7_state = 4'd0;
reg           block2mem_dma_clear = 1'd0;
reg           block2mem_dma_pending = 1'd0;
wire          block2mem_dma_status;
wire          block2mem_dma_trigger;
reg           card_detect_clear = 1'd0;
reg           card_detect_d = 1'd0;
reg           card_detect_irq = 1'd0;
reg           card_detect_pending = 1'd0;
reg           card_detect_re = 1'd0;
wire          card_detect_status0;
wire          card_detect_status1;
wire          card_detect_trigger;
wire          card_detect_we;
wire          clk_i;
reg           clk_i_d = 1'd0;
wire          clocker_ce;
reg           clocker_ce_delayed = 1'd0;
reg           clocker_ce_latched = 1'd0;
wire          clocker_clk0;
reg           clocker_clk1 = 1'd0;
reg           clocker_clk_d = 1'd0;
wire          clocker_clk_en;
reg     [9:0] clocker_count = 10'd0;
reg           clocker_re = 1'd0;
wire          clocker_stop;
reg     [8:0] clocker_storage = 9'd256;
reg           cmd_done_clear = 1'd0;
wire          cmd_done_pending;
wire          cmd_done_status;
wire          cmd_done_trigger;
reg           cmdr_busy = 1'd0;
reg           cmdr_busy_sdphycmdr_next_value2 = 1'd0;
reg           cmdr_busy_sdphycmdr_next_value_ce2 = 1'd0;
wire          cmdr_cmdr_buf_pipe_valid_sink_first;
wire          cmdr_cmdr_buf_pipe_valid_sink_last;
wire    [7:0] cmdr_cmdr_buf_pipe_valid_sink_payload_data;
wire          cmdr_cmdr_buf_pipe_valid_sink_ready;
wire          cmdr_cmdr_buf_pipe_valid_sink_valid;
reg           cmdr_cmdr_buf_pipe_valid_source_first = 1'd0;
reg           cmdr_cmdr_buf_pipe_valid_source_last = 1'd0;
reg     [7:0] cmdr_cmdr_buf_pipe_valid_source_payload_data = 8'd0;
wire          cmdr_cmdr_buf_pipe_valid_source_ready;
reg           cmdr_cmdr_buf_pipe_valid_source_valid = 1'd0;
wire          cmdr_cmdr_buf_sink_sink_first;
wire          cmdr_cmdr_buf_sink_sink_last;
wire    [7:0] cmdr_cmdr_buf_sink_sink_payload_data;
wire          cmdr_cmdr_buf_sink_sink_ready;
wire          cmdr_cmdr_buf_sink_sink_valid;
wire          cmdr_cmdr_buf_source_source_first;
wire          cmdr_cmdr_buf_source_source_last;
wire    [7:0] cmdr_cmdr_buf_source_source_payload_data;
wire          cmdr_cmdr_buf_source_source_ready;
wire          cmdr_cmdr_buf_source_source_valid;
reg     [2:0] cmdr_cmdr_converter_converter_demux = 3'd0;
wire          cmdr_cmdr_converter_converter_load_part;
reg           cmdr_cmdr_converter_converter_sink_first = 1'd0;
reg           cmdr_cmdr_converter_converter_sink_last = 1'd0;
wire          cmdr_cmdr_converter_converter_sink_payload_data;
wire          cmdr_cmdr_converter_converter_sink_ready;
wire          cmdr_cmdr_converter_converter_sink_valid;
reg           cmdr_cmdr_converter_converter_source_first = 1'd0;
reg           cmdr_cmdr_converter_converter_source_last = 1'd0;
reg     [7:0] cmdr_cmdr_converter_converter_source_payload_data = 8'd0;
reg     [3:0] cmdr_cmdr_converter_converter_source_payload_valid_token_count = 4'd0;
wire          cmdr_cmdr_converter_converter_source_ready;
wire          cmdr_cmdr_converter_converter_source_valid;
reg           cmdr_cmdr_converter_converter_strobe_all = 1'd0;
wire          cmdr_cmdr_converter_source_source_first;
wire          cmdr_cmdr_converter_source_source_last;
wire    [7:0] cmdr_cmdr_converter_source_source_payload_data;
wire          cmdr_cmdr_converter_source_source_ready;
wire          cmdr_cmdr_converter_source_source_valid;
wire          cmdr_cmdr_pads_in_first;
wire          cmdr_cmdr_pads_in_last;
wire          cmdr_cmdr_pads_in_payload_clk;
wire          cmdr_cmdr_pads_in_payload_cmd_i;
wire          cmdr_cmdr_pads_in_payload_cmd_o;
wire          cmdr_cmdr_pads_in_payload_cmd_oe;
wire    [3:0] cmdr_cmdr_pads_in_payload_data_i;
wire          cmdr_cmdr_pads_in_payload_data_i_ce;
wire    [3:0] cmdr_cmdr_pads_in_payload_data_o;
wire          cmdr_cmdr_pads_in_payload_data_oe;
reg           cmdr_cmdr_pads_in_ready = 1'd0;
wire          cmdr_cmdr_pads_in_valid;
reg           cmdr_cmdr_reset = 1'd0;
reg           cmdr_cmdr_reset_sdphycmdr_next_value3 = 1'd0;
reg           cmdr_cmdr_reset_sdphycmdr_next_value_ce3 = 1'd0;
reg           cmdr_cmdr_run = 1'd0;
wire          cmdr_cmdr_source_first;
wire          cmdr_cmdr_source_last;
wire    [7:0] cmdr_cmdr_source_payload_data;
reg           cmdr_cmdr_source_ready = 1'd0;
wire          cmdr_cmdr_source_valid;
wire          cmdr_cmdr_start;
reg     [7:0] cmdr_count = 8'd0;
reg     [7:0] cmdr_count_sdphycmdr_next_value1 = 8'd0;
reg           cmdr_count_sdphycmdr_next_value_ce1 = 1'd0;
reg           cmdr_pads_in_pads_in_first = 1'd0;
reg           cmdr_pads_in_pads_in_last = 1'd0;
reg           cmdr_pads_in_pads_in_payload_clk = 1'd0;
wire          cmdr_pads_in_pads_in_payload_cmd_i;
reg           cmdr_pads_in_pads_in_payload_cmd_o = 1'd0;
reg           cmdr_pads_in_pads_in_payload_cmd_oe = 1'd0;
wire    [3:0] cmdr_pads_in_pads_in_payload_data_i;
reg           cmdr_pads_in_pads_in_payload_data_i_ce = 1'd0;
reg     [3:0] cmdr_pads_in_pads_in_payload_data_o = 4'd0;
reg           cmdr_pads_in_pads_in_payload_data_oe = 1'd0;
wire          cmdr_pads_in_pads_in_ready;
wire          cmdr_pads_in_pads_in_valid;
reg           cmdr_pads_out_payload_clk = 1'd0;
reg           cmdr_pads_out_payload_cmd_o = 1'd0;
reg           cmdr_pads_out_payload_cmd_oe = 1'd0;
reg     [3:0] cmdr_pads_out_payload_data_o = 4'd0;
reg           cmdr_pads_out_payload_data_oe = 1'd0;
wire          cmdr_pads_out_ready;
reg     [1:0] cmdr_sink_payload_cmd_type = 2'd0;
reg     [1:0] cmdr_sink_payload_data_type = 2'd0;
reg     [7:0] cmdr_sink_payload_length = 8'd0;
reg           cmdr_sink_ready = 1'd0;
reg           cmdr_sink_valid = 1'd0;
reg           cmdr_source_source_last = 1'd0;
reg     [7:0] cmdr_source_source_payload_data = 8'd0;
reg     [2:0] cmdr_source_source_payload_status = 3'd0;
reg           cmdr_source_source_ready = 1'd0;
reg           cmdr_source_source_valid = 1'd0;
reg    [31:0] cmdr_timeout = 32'd125000000;
reg    [31:0] cmdr_timeout_sdphycmdr_next_value0 = 32'd0;
reg           cmdr_timeout_sdphycmdr_next_value_ce0 = 1'd0;
reg     [7:0] cmdw_count = 8'd0;
reg     [7:0] cmdw_count_sdphycmdw_next_value = 8'd0;
reg           cmdw_count_sdphycmdw_next_value_ce = 1'd0;
reg           cmdw_done = 1'd0;
wire          cmdw_pads_in_payload_cmd_i;
wire    [3:0] cmdw_pads_in_payload_data_i;
wire          cmdw_pads_in_valid;
reg           cmdw_pads_out_payload_clk = 1'd0;
reg           cmdw_pads_out_payload_cmd_o = 1'd0;
reg           cmdw_pads_out_payload_cmd_oe = 1'd0;
reg     [3:0] cmdw_pads_out_payload_data_o = 4'd0;
reg           cmdw_pads_out_payload_data_oe = 1'd0;
wire          cmdw_pads_out_ready;
reg           cmdw_sink_last = 1'd0;
reg     [1:0] cmdw_sink_payload_cmd_type = 2'd0;
reg     [7:0] cmdw_sink_payload_data = 8'd0;
reg           cmdw_sink_ready = 1'd0;
reg           cmdw_sink_valid = 1'd0;
reg    [19:0] count = 20'd1000000;
reg           crc16inserter_next_state = 1'd0;
reg           crc16inserter_state = 1'd0;
(* dont_touch = "true" *)
wire          crg_clkin;
wire          crg_clkout0;
wire          crg_clkout1;
wire          crg_clkout2;
wire          crg_clkout_buf0;
wire          crg_clkout_buf1;
wire          crg_clkout_buf2;
reg           crg_ic_reset = 1'd1;
wire          crg_locked;
reg           crg_power_down = 1'd0;
wire          crg_reset;
reg     [3:0] crg_reset_counter = 4'd15;
reg           crg_rst = 1'd0;
wire    [4:0] csr_bankarray_adr;
wire   [31:0] csr_bankarray_csrbank0_in10_r;
reg           csr_bankarray_csrbank0_in10_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank0_in10_w;
reg           csr_bankarray_csrbank0_in10_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank0_in20_r;
reg           csr_bankarray_csrbank0_in20_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank0_in20_w;
reg           csr_bankarray_csrbank0_in20_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank0_result_r;
reg           csr_bankarray_csrbank0_result_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank0_result_w;
reg           csr_bankarray_csrbank0_result_we = 1'd0;
wire          csr_bankarray_csrbank0_sel;
wire          csr_bankarray_csrbank10_en0_r;
reg           csr_bankarray_csrbank10_en0_re = 1'd0;
wire          csr_bankarray_csrbank10_en0_w;
reg           csr_bankarray_csrbank10_en0_we = 1'd0;
wire          csr_bankarray_csrbank10_ev_enable0_r;
reg           csr_bankarray_csrbank10_ev_enable0_re = 1'd0;
wire          csr_bankarray_csrbank10_ev_enable0_w;
reg           csr_bankarray_csrbank10_ev_enable0_we = 1'd0;
wire          csr_bankarray_csrbank10_ev_pending_r;
reg           csr_bankarray_csrbank10_ev_pending_re = 1'd0;
wire          csr_bankarray_csrbank10_ev_pending_w;
reg           csr_bankarray_csrbank10_ev_pending_we = 1'd0;
wire          csr_bankarray_csrbank10_ev_status_r;
reg           csr_bankarray_csrbank10_ev_status_re = 1'd0;
wire          csr_bankarray_csrbank10_ev_status_w;
reg           csr_bankarray_csrbank10_ev_status_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_load0_r;
reg           csr_bankarray_csrbank10_load0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_load0_w;
reg           csr_bankarray_csrbank10_load0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_reload0_r;
reg           csr_bankarray_csrbank10_reload0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_reload0_w;
reg           csr_bankarray_csrbank10_reload0_we = 1'd0;
wire          csr_bankarray_csrbank10_sel;
wire          csr_bankarray_csrbank10_update_value0_r;
reg           csr_bankarray_csrbank10_update_value0_re = 1'd0;
wire          csr_bankarray_csrbank10_update_value0_w;
reg           csr_bankarray_csrbank10_update_value0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_value_r;
reg           csr_bankarray_csrbank10_value_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank10_value_w;
reg           csr_bankarray_csrbank10_value_we = 1'd0;
wire    [1:0] csr_bankarray_csrbank11_ev_enable0_r;
reg           csr_bankarray_csrbank11_ev_enable0_re = 1'd0;
wire    [1:0] csr_bankarray_csrbank11_ev_enable0_w;
reg           csr_bankarray_csrbank11_ev_enable0_we = 1'd0;
wire    [1:0] csr_bankarray_csrbank11_ev_pending_r;
reg           csr_bankarray_csrbank11_ev_pending_re = 1'd0;
wire    [1:0] csr_bankarray_csrbank11_ev_pending_w;
reg           csr_bankarray_csrbank11_ev_pending_we = 1'd0;
wire    [1:0] csr_bankarray_csrbank11_ev_status_r;
reg           csr_bankarray_csrbank11_ev_status_re = 1'd0;
wire    [1:0] csr_bankarray_csrbank11_ev_status_w;
reg           csr_bankarray_csrbank11_ev_status_we = 1'd0;
wire          csr_bankarray_csrbank11_rxempty_r;
reg           csr_bankarray_csrbank11_rxempty_re = 1'd0;
wire          csr_bankarray_csrbank11_rxempty_w;
reg           csr_bankarray_csrbank11_rxempty_we = 1'd0;
wire          csr_bankarray_csrbank11_rxfull_r;
reg           csr_bankarray_csrbank11_rxfull_re = 1'd0;
wire          csr_bankarray_csrbank11_rxfull_w;
reg           csr_bankarray_csrbank11_rxfull_we = 1'd0;
wire          csr_bankarray_csrbank11_sel;
wire          csr_bankarray_csrbank11_txempty_r;
reg           csr_bankarray_csrbank11_txempty_re = 1'd0;
wire          csr_bankarray_csrbank11_txempty_w;
reg           csr_bankarray_csrbank11_txempty_we = 1'd0;
wire          csr_bankarray_csrbank11_txfull_r;
reg           csr_bankarray_csrbank11_txfull_re = 1'd0;
wire          csr_bankarray_csrbank11_txfull_w;
reg           csr_bankarray_csrbank11_txfull_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank1_bus_errors_r;
reg           csr_bankarray_csrbank1_bus_errors_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank1_bus_errors_w;
reg           csr_bankarray_csrbank1_bus_errors_we = 1'd0;
wire    [1:0] csr_bankarray_csrbank1_reset0_r;
reg           csr_bankarray_csrbank1_reset0_re = 1'd0;
wire    [1:0] csr_bankarray_csrbank1_reset0_w;
reg           csr_bankarray_csrbank1_reset0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank1_scratch0_r;
reg           csr_bankarray_csrbank1_scratch0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank1_scratch0_w;
reg           csr_bankarray_csrbank1_scratch0_we = 1'd0;
wire          csr_bankarray_csrbank1_sel;
wire    [3:0] csr_bankarray_csrbank2_dly_sel0_r;
reg           csr_bankarray_csrbank2_dly_sel0_re = 1'd0;
wire    [3:0] csr_bankarray_csrbank2_dly_sel0_w;
reg           csr_bankarray_csrbank2_dly_sel0_we = 1'd0;
wire    [4:0] csr_bankarray_csrbank2_half_sys8x_taps0_r;
reg           csr_bankarray_csrbank2_half_sys8x_taps0_re = 1'd0;
wire    [4:0] csr_bankarray_csrbank2_half_sys8x_taps0_w;
reg           csr_bankarray_csrbank2_half_sys8x_taps0_we = 1'd0;
wire    [1:0] csr_bankarray_csrbank2_rdphase0_r;
reg           csr_bankarray_csrbank2_rdphase0_re = 1'd0;
wire    [1:0] csr_bankarray_csrbank2_rdphase0_w;
reg           csr_bankarray_csrbank2_rdphase0_we = 1'd0;
wire          csr_bankarray_csrbank2_rst0_r;
reg           csr_bankarray_csrbank2_rst0_re = 1'd0;
wire          csr_bankarray_csrbank2_rst0_w;
reg           csr_bankarray_csrbank2_rst0_we = 1'd0;
wire          csr_bankarray_csrbank2_sel;
wire          csr_bankarray_csrbank2_wlevel_en0_r;
reg           csr_bankarray_csrbank2_wlevel_en0_re = 1'd0;
wire          csr_bankarray_csrbank2_wlevel_en0_w;
reg           csr_bankarray_csrbank2_wlevel_en0_we = 1'd0;
wire    [1:0] csr_bankarray_csrbank2_wrphase0_r;
reg           csr_bankarray_csrbank2_wrphase0_re = 1'd0;
wire    [1:0] csr_bankarray_csrbank2_wrphase0_w;
reg           csr_bankarray_csrbank2_wrphase0_we = 1'd0;
wire    [7:0] csr_bankarray_csrbank3_out0_r;
reg           csr_bankarray_csrbank3_out0_re = 1'd0;
wire    [7:0] csr_bankarray_csrbank3_out0_w;
reg           csr_bankarray_csrbank3_out0_we = 1'd0;
wire          csr_bankarray_csrbank3_sel;
wire   [31:0] csr_bankarray_csrbank4_dma_base0_r;
reg           csr_bankarray_csrbank4_dma_base0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank4_dma_base0_w;
reg           csr_bankarray_csrbank4_dma_base0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank4_dma_base1_r;
reg           csr_bankarray_csrbank4_dma_base1_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank4_dma_base1_w;
reg           csr_bankarray_csrbank4_dma_base1_we = 1'd0;
wire          csr_bankarray_csrbank4_dma_done_r;
reg           csr_bankarray_csrbank4_dma_done_re = 1'd0;
wire          csr_bankarray_csrbank4_dma_done_w;
reg           csr_bankarray_csrbank4_dma_done_we = 1'd0;
wire          csr_bankarray_csrbank4_dma_enable0_r;
reg           csr_bankarray_csrbank4_dma_enable0_re = 1'd0;
wire          csr_bankarray_csrbank4_dma_enable0_w;
reg           csr_bankarray_csrbank4_dma_enable0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank4_dma_length0_r;
reg           csr_bankarray_csrbank4_dma_length0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank4_dma_length0_w;
reg           csr_bankarray_csrbank4_dma_length0_we = 1'd0;
wire          csr_bankarray_csrbank4_dma_loop0_r;
reg           csr_bankarray_csrbank4_dma_loop0_re = 1'd0;
wire          csr_bankarray_csrbank4_dma_loop0_w;
reg           csr_bankarray_csrbank4_dma_loop0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank4_dma_offset_r;
reg           csr_bankarray_csrbank4_dma_offset_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank4_dma_offset_w;
reg           csr_bankarray_csrbank4_dma_offset_we = 1'd0;
wire          csr_bankarray_csrbank4_sel;
wire   [31:0] csr_bankarray_csrbank5_block_count0_r;
reg           csr_bankarray_csrbank5_block_count0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank5_block_count0_w;
reg           csr_bankarray_csrbank5_block_count0_we = 1'd0;
wire    [9:0] csr_bankarray_csrbank5_block_length0_r;
reg           csr_bankarray_csrbank5_block_length0_re = 1'd0;
wire    [9:0] csr_bankarray_csrbank5_block_length0_w;
reg           csr_bankarray_csrbank5_block_length0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank5_cmd_argument0_r;
reg           csr_bankarray_csrbank5_cmd_argument0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank5_cmd_argument0_w;
reg           csr_bankarray_csrbank5_cmd_argument0_we = 1'd0;
wire   [13:0] csr_bankarray_csrbank5_cmd_command0_r;
reg           csr_bankarray_csrbank5_cmd_command0_re = 1'd0;
wire   [13:0] csr_bankarray_csrbank5_cmd_command0_w;
reg           csr_bankarray_csrbank5_cmd_command0_we = 1'd0;
wire    [3:0] csr_bankarray_csrbank5_cmd_event_r;
reg           csr_bankarray_csrbank5_cmd_event_re = 1'd0;
wire    [3:0] csr_bankarray_csrbank5_cmd_event_w;
reg           csr_bankarray_csrbank5_cmd_event_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank5_cmd_response0_r;
reg           csr_bankarray_csrbank5_cmd_response0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank5_cmd_response0_w;
reg           csr_bankarray_csrbank5_cmd_response0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank5_cmd_response1_r;
reg           csr_bankarray_csrbank5_cmd_response1_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank5_cmd_response1_w;
reg           csr_bankarray_csrbank5_cmd_response1_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank5_cmd_response2_r;
reg           csr_bankarray_csrbank5_cmd_response2_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank5_cmd_response2_w;
reg           csr_bankarray_csrbank5_cmd_response2_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank5_cmd_response3_r;
reg           csr_bankarray_csrbank5_cmd_response3_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank5_cmd_response3_w;
reg           csr_bankarray_csrbank5_cmd_response3_we = 1'd0;
wire          csr_bankarray_csrbank5_cmd_send0_r;
reg           csr_bankarray_csrbank5_cmd_send0_re = 1'd0;
wire          csr_bankarray_csrbank5_cmd_send0_w;
reg           csr_bankarray_csrbank5_cmd_send0_we = 1'd0;
wire    [3:0] csr_bankarray_csrbank5_data_event_r;
reg           csr_bankarray_csrbank5_data_event_re = 1'd0;
wire    [3:0] csr_bankarray_csrbank5_data_event_w;
reg           csr_bankarray_csrbank5_data_event_we = 1'd0;
wire          csr_bankarray_csrbank5_sel;
wire    [3:0] csr_bankarray_csrbank6_enable0_r;
reg           csr_bankarray_csrbank6_enable0_re = 1'd0;
wire    [3:0] csr_bankarray_csrbank6_enable0_w;
reg           csr_bankarray_csrbank6_enable0_we = 1'd0;
wire    [3:0] csr_bankarray_csrbank6_pending_r;
reg           csr_bankarray_csrbank6_pending_re = 1'd0;
wire    [3:0] csr_bankarray_csrbank6_pending_w;
reg           csr_bankarray_csrbank6_pending_we = 1'd0;
wire          csr_bankarray_csrbank6_sel;
wire    [3:0] csr_bankarray_csrbank6_status_r;
reg           csr_bankarray_csrbank6_status_re = 1'd0;
wire    [3:0] csr_bankarray_csrbank6_status_w;
reg           csr_bankarray_csrbank6_status_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank7_dma_base0_r;
reg           csr_bankarray_csrbank7_dma_base0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank7_dma_base0_w;
reg           csr_bankarray_csrbank7_dma_base0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank7_dma_base1_r;
reg           csr_bankarray_csrbank7_dma_base1_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank7_dma_base1_w;
reg           csr_bankarray_csrbank7_dma_base1_we = 1'd0;
wire          csr_bankarray_csrbank7_dma_done_r;
reg           csr_bankarray_csrbank7_dma_done_re = 1'd0;
wire          csr_bankarray_csrbank7_dma_done_w;
reg           csr_bankarray_csrbank7_dma_done_we = 1'd0;
wire          csr_bankarray_csrbank7_dma_enable0_r;
reg           csr_bankarray_csrbank7_dma_enable0_re = 1'd0;
wire          csr_bankarray_csrbank7_dma_enable0_w;
reg           csr_bankarray_csrbank7_dma_enable0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank7_dma_length0_r;
reg           csr_bankarray_csrbank7_dma_length0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank7_dma_length0_w;
reg           csr_bankarray_csrbank7_dma_length0_we = 1'd0;
wire          csr_bankarray_csrbank7_dma_loop0_r;
reg           csr_bankarray_csrbank7_dma_loop0_re = 1'd0;
wire          csr_bankarray_csrbank7_dma_loop0_w;
reg           csr_bankarray_csrbank7_dma_loop0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank7_dma_offset_r;
reg           csr_bankarray_csrbank7_dma_offset_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank7_dma_offset_w;
reg           csr_bankarray_csrbank7_dma_offset_we = 1'd0;
wire          csr_bankarray_csrbank7_sel;
wire          csr_bankarray_csrbank8_card_detect_r;
reg           csr_bankarray_csrbank8_card_detect_re = 1'd0;
wire          csr_bankarray_csrbank8_card_detect_w;
reg           csr_bankarray_csrbank8_card_detect_we = 1'd0;
wire    [8:0] csr_bankarray_csrbank8_clocker_divider0_r;
reg           csr_bankarray_csrbank8_clocker_divider0_re = 1'd0;
wire    [8:0] csr_bankarray_csrbank8_clocker_divider0_w;
reg           csr_bankarray_csrbank8_clocker_divider0_we = 1'd0;
wire    [2:0] csr_bankarray_csrbank8_dataw_status_r;
reg           csr_bankarray_csrbank8_dataw_status_re = 1'd0;
wire    [2:0] csr_bankarray_csrbank8_dataw_status_w;
reg           csr_bankarray_csrbank8_dataw_status_we = 1'd0;
wire          csr_bankarray_csrbank8_sel;
wire    [3:0] csr_bankarray_csrbank9_dfii_control0_r;
reg           csr_bankarray_csrbank9_dfii_control0_re = 1'd0;
wire    [3:0] csr_bankarray_csrbank9_dfii_control0_w;
reg           csr_bankarray_csrbank9_dfii_control0_we = 1'd0;
wire   [13:0] csr_bankarray_csrbank9_dfii_pi0_address0_r;
reg           csr_bankarray_csrbank9_dfii_pi0_address0_re = 1'd0;
wire   [13:0] csr_bankarray_csrbank9_dfii_pi0_address0_w;
reg           csr_bankarray_csrbank9_dfii_pi0_address0_we = 1'd0;
wire    [2:0] csr_bankarray_csrbank9_dfii_pi0_baddress0_r;
reg           csr_bankarray_csrbank9_dfii_pi0_baddress0_re = 1'd0;
wire    [2:0] csr_bankarray_csrbank9_dfii_pi0_baddress0_w;
reg           csr_bankarray_csrbank9_dfii_pi0_baddress0_we = 1'd0;
wire    [7:0] csr_bankarray_csrbank9_dfii_pi0_command0_r;
reg           csr_bankarray_csrbank9_dfii_pi0_command0_re = 1'd0;
wire    [7:0] csr_bankarray_csrbank9_dfii_pi0_command0_w;
reg           csr_bankarray_csrbank9_dfii_pi0_command0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank9_dfii_pi0_rddata0_r;
reg           csr_bankarray_csrbank9_dfii_pi0_rddata0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank9_dfii_pi0_rddata0_w;
reg           csr_bankarray_csrbank9_dfii_pi0_rddata0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank9_dfii_pi0_rddata1_r;
reg           csr_bankarray_csrbank9_dfii_pi0_rddata1_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank9_dfii_pi0_rddata1_w;
reg           csr_bankarray_csrbank9_dfii_pi0_rddata1_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank9_dfii_pi0_wrdata0_r;
reg           csr_bankarray_csrbank9_dfii_pi0_wrdata0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank9_dfii_pi0_wrdata0_w;
reg           csr_bankarray_csrbank9_dfii_pi0_wrdata0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank9_dfii_pi0_wrdata1_r;
reg           csr_bankarray_csrbank9_dfii_pi0_wrdata1_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank9_dfii_pi0_wrdata1_w;
reg           csr_bankarray_csrbank9_dfii_pi0_wrdata1_we = 1'd0;
wire   [13:0] csr_bankarray_csrbank9_dfii_pi1_address0_r;
reg           csr_bankarray_csrbank9_dfii_pi1_address0_re = 1'd0;
wire   [13:0] csr_bankarray_csrbank9_dfii_pi1_address0_w;
reg           csr_bankarray_csrbank9_dfii_pi1_address0_we = 1'd0;
wire    [2:0] csr_bankarray_csrbank9_dfii_pi1_baddress0_r;
reg           csr_bankarray_csrbank9_dfii_pi1_baddress0_re = 1'd0;
wire    [2:0] csr_bankarray_csrbank9_dfii_pi1_baddress0_w;
reg           csr_bankarray_csrbank9_dfii_pi1_baddress0_we = 1'd0;
wire    [7:0] csr_bankarray_csrbank9_dfii_pi1_command0_r;
reg           csr_bankarray_csrbank9_dfii_pi1_command0_re = 1'd0;
wire    [7:0] csr_bankarray_csrbank9_dfii_pi1_command0_w;
reg           csr_bankarray_csrbank9_dfii_pi1_command0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank9_dfii_pi1_rddata0_r;
reg           csr_bankarray_csrbank9_dfii_pi1_rddata0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank9_dfii_pi1_rddata0_w;
reg           csr_bankarray_csrbank9_dfii_pi1_rddata0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank9_dfii_pi1_rddata1_r;
reg           csr_bankarray_csrbank9_dfii_pi1_rddata1_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank9_dfii_pi1_rddata1_w;
reg           csr_bankarray_csrbank9_dfii_pi1_rddata1_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank9_dfii_pi1_wrdata0_r;
reg           csr_bankarray_csrbank9_dfii_pi1_wrdata0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank9_dfii_pi1_wrdata0_w;
reg           csr_bankarray_csrbank9_dfii_pi1_wrdata0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank9_dfii_pi1_wrdata1_r;
reg           csr_bankarray_csrbank9_dfii_pi1_wrdata1_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank9_dfii_pi1_wrdata1_w;
reg           csr_bankarray_csrbank9_dfii_pi1_wrdata1_we = 1'd0;
wire   [13:0] csr_bankarray_csrbank9_dfii_pi2_address0_r;
reg           csr_bankarray_csrbank9_dfii_pi2_address0_re = 1'd0;
wire   [13:0] csr_bankarray_csrbank9_dfii_pi2_address0_w;
reg           csr_bankarray_csrbank9_dfii_pi2_address0_we = 1'd0;
wire    [2:0] csr_bankarray_csrbank9_dfii_pi2_baddress0_r;
reg           csr_bankarray_csrbank9_dfii_pi2_baddress0_re = 1'd0;
wire    [2:0] csr_bankarray_csrbank9_dfii_pi2_baddress0_w;
reg           csr_bankarray_csrbank9_dfii_pi2_baddress0_we = 1'd0;
wire    [7:0] csr_bankarray_csrbank9_dfii_pi2_command0_r;
reg           csr_bankarray_csrbank9_dfii_pi2_command0_re = 1'd0;
wire    [7:0] csr_bankarray_csrbank9_dfii_pi2_command0_w;
reg           csr_bankarray_csrbank9_dfii_pi2_command0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank9_dfii_pi2_rddata0_r;
reg           csr_bankarray_csrbank9_dfii_pi2_rddata0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank9_dfii_pi2_rddata0_w;
reg           csr_bankarray_csrbank9_dfii_pi2_rddata0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank9_dfii_pi2_rddata1_r;
reg           csr_bankarray_csrbank9_dfii_pi2_rddata1_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank9_dfii_pi2_rddata1_w;
reg           csr_bankarray_csrbank9_dfii_pi2_rddata1_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank9_dfii_pi2_wrdata0_r;
reg           csr_bankarray_csrbank9_dfii_pi2_wrdata0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank9_dfii_pi2_wrdata0_w;
reg           csr_bankarray_csrbank9_dfii_pi2_wrdata0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank9_dfii_pi2_wrdata1_r;
reg           csr_bankarray_csrbank9_dfii_pi2_wrdata1_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank9_dfii_pi2_wrdata1_w;
reg           csr_bankarray_csrbank9_dfii_pi2_wrdata1_we = 1'd0;
wire   [13:0] csr_bankarray_csrbank9_dfii_pi3_address0_r;
reg           csr_bankarray_csrbank9_dfii_pi3_address0_re = 1'd0;
wire   [13:0] csr_bankarray_csrbank9_dfii_pi3_address0_w;
reg           csr_bankarray_csrbank9_dfii_pi3_address0_we = 1'd0;
wire    [2:0] csr_bankarray_csrbank9_dfii_pi3_baddress0_r;
reg           csr_bankarray_csrbank9_dfii_pi3_baddress0_re = 1'd0;
wire    [2:0] csr_bankarray_csrbank9_dfii_pi3_baddress0_w;
reg           csr_bankarray_csrbank9_dfii_pi3_baddress0_we = 1'd0;
wire    [7:0] csr_bankarray_csrbank9_dfii_pi3_command0_r;
reg           csr_bankarray_csrbank9_dfii_pi3_command0_re = 1'd0;
wire    [7:0] csr_bankarray_csrbank9_dfii_pi3_command0_w;
reg           csr_bankarray_csrbank9_dfii_pi3_command0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank9_dfii_pi3_rddata0_r;
reg           csr_bankarray_csrbank9_dfii_pi3_rddata0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank9_dfii_pi3_rddata0_w;
reg           csr_bankarray_csrbank9_dfii_pi3_rddata0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank9_dfii_pi3_rddata1_r;
reg           csr_bankarray_csrbank9_dfii_pi3_rddata1_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank9_dfii_pi3_rddata1_w;
reg           csr_bankarray_csrbank9_dfii_pi3_rddata1_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank9_dfii_pi3_wrdata0_r;
reg           csr_bankarray_csrbank9_dfii_pi3_wrdata0_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank9_dfii_pi3_wrdata0_w;
reg           csr_bankarray_csrbank9_dfii_pi3_wrdata0_we = 1'd0;
wire   [31:0] csr_bankarray_csrbank9_dfii_pi3_wrdata1_r;
reg           csr_bankarray_csrbank9_dfii_pi3_wrdata1_re = 1'd0;
wire   [31:0] csr_bankarray_csrbank9_dfii_pi3_wrdata1_w;
reg           csr_bankarray_csrbank9_dfii_pi3_wrdata1_we = 1'd0;
wire          csr_bankarray_csrbank9_sel;
wire    [7:0] csr_bankarray_dat_r;
wire   [13:0] csr_bankarray_interface0_bank_bus_adr;
reg    [31:0] csr_bankarray_interface0_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface0_bank_bus_dat_w;
wire          csr_bankarray_interface0_bank_bus_re;
wire          csr_bankarray_interface0_bank_bus_we;
wire   [13:0] csr_bankarray_interface10_bank_bus_adr;
reg    [31:0] csr_bankarray_interface10_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface10_bank_bus_dat_w;
wire          csr_bankarray_interface10_bank_bus_re;
wire          csr_bankarray_interface10_bank_bus_we;
wire   [13:0] csr_bankarray_interface11_bank_bus_adr;
reg    [31:0] csr_bankarray_interface11_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface11_bank_bus_dat_w;
wire          csr_bankarray_interface11_bank_bus_re;
wire          csr_bankarray_interface11_bank_bus_we;
wire   [13:0] csr_bankarray_interface1_bank_bus_adr;
reg    [31:0] csr_bankarray_interface1_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface1_bank_bus_dat_w;
wire          csr_bankarray_interface1_bank_bus_re;
wire          csr_bankarray_interface1_bank_bus_we;
wire   [13:0] csr_bankarray_interface2_bank_bus_adr;
reg    [31:0] csr_bankarray_interface2_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface2_bank_bus_dat_w;
wire          csr_bankarray_interface2_bank_bus_re;
wire          csr_bankarray_interface2_bank_bus_we;
wire   [13:0] csr_bankarray_interface3_bank_bus_adr;
reg    [31:0] csr_bankarray_interface3_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface3_bank_bus_dat_w;
wire          csr_bankarray_interface3_bank_bus_re;
wire          csr_bankarray_interface3_bank_bus_we;
wire   [13:0] csr_bankarray_interface4_bank_bus_adr;
reg    [31:0] csr_bankarray_interface4_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface4_bank_bus_dat_w;
wire          csr_bankarray_interface4_bank_bus_re;
wire          csr_bankarray_interface4_bank_bus_we;
wire   [13:0] csr_bankarray_interface5_bank_bus_adr;
reg    [31:0] csr_bankarray_interface5_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface5_bank_bus_dat_w;
wire          csr_bankarray_interface5_bank_bus_re;
wire          csr_bankarray_interface5_bank_bus_we;
wire   [13:0] csr_bankarray_interface6_bank_bus_adr;
reg    [31:0] csr_bankarray_interface6_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface6_bank_bus_dat_w;
wire          csr_bankarray_interface6_bank_bus_re;
wire          csr_bankarray_interface6_bank_bus_we;
wire   [13:0] csr_bankarray_interface7_bank_bus_adr;
reg    [31:0] csr_bankarray_interface7_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface7_bank_bus_dat_w;
wire          csr_bankarray_interface7_bank_bus_re;
wire          csr_bankarray_interface7_bank_bus_we;
wire   [13:0] csr_bankarray_interface8_bank_bus_adr;
reg    [31:0] csr_bankarray_interface8_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface8_bank_bus_dat_w;
wire          csr_bankarray_interface8_bank_bus_re;
wire          csr_bankarray_interface8_bank_bus_we;
wire   [13:0] csr_bankarray_interface9_bank_bus_adr;
reg    [31:0] csr_bankarray_interface9_bank_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_interface9_bank_bus_dat_w;
wire          csr_bankarray_interface9_bank_bus_re;
wire          csr_bankarray_interface9_bank_bus_we;
wire          csr_bankarray_sel;
reg           csr_bankarray_sel_r = 1'd0;
wire   [13:0] csr_bankarray_sram_bus_adr;
reg    [31:0] csr_bankarray_sram_bus_dat_r = 32'd0;
wire   [31:0] csr_bankarray_sram_bus_dat_w;
wire          csr_bankarray_sram_bus_re;
wire          csr_bankarray_sram_bus_we;
wire   [13:0] csr_interconnect_adr;
wire   [31:0] csr_interconnect_dat_r;
wire   [31:0] csr_interconnect_dat_w;
wire          csr_interconnect_re;
wire          csr_interconnect_we;
reg     [9:0] datar_count = 10'd0;
reg     [9:0] datar_count_sdphydatar_next_value0 = 10'd0;
reg           datar_count_sdphydatar_next_value_ce0 = 1'd0;
wire          datar_datar_buf_pipe_valid_sink_first;
wire          datar_datar_buf_pipe_valid_sink_last;
wire    [7:0] datar_datar_buf_pipe_valid_sink_payload_data;
wire          datar_datar_buf_pipe_valid_sink_ready;
wire          datar_datar_buf_pipe_valid_sink_valid;
reg           datar_datar_buf_pipe_valid_source_first = 1'd0;
reg           datar_datar_buf_pipe_valid_source_last = 1'd0;
reg     [7:0] datar_datar_buf_pipe_valid_source_payload_data = 8'd0;
wire          datar_datar_buf_pipe_valid_source_ready;
reg           datar_datar_buf_pipe_valid_source_valid = 1'd0;
wire          datar_datar_buf_sink_sink_first;
wire          datar_datar_buf_sink_sink_last;
wire    [7:0] datar_datar_buf_sink_sink_payload_data;
wire          datar_datar_buf_sink_sink_ready;
wire          datar_datar_buf_sink_sink_valid;
wire          datar_datar_buf_source_source_first;
wire          datar_datar_buf_source_source_last;
wire    [7:0] datar_datar_buf_source_source_payload_data;
wire          datar_datar_buf_source_source_ready;
wire          datar_datar_buf_source_source_valid;
reg           datar_datar_converter_converter_demux = 1'd0;
wire          datar_datar_converter_converter_load_part;
reg           datar_datar_converter_converter_sink_first = 1'd0;
reg           datar_datar_converter_converter_sink_last = 1'd0;
wire    [3:0] datar_datar_converter_converter_sink_payload_data;
wire          datar_datar_converter_converter_sink_ready;
wire          datar_datar_converter_converter_sink_valid;
reg           datar_datar_converter_converter_source_first = 1'd0;
reg           datar_datar_converter_converter_source_last = 1'd0;
reg     [7:0] datar_datar_converter_converter_source_payload_data = 8'd0;
reg     [1:0] datar_datar_converter_converter_source_payload_valid_token_count = 2'd0;
wire          datar_datar_converter_converter_source_ready;
wire          datar_datar_converter_converter_source_valid;
reg           datar_datar_converter_converter_strobe_all = 1'd0;
wire          datar_datar_converter_source_source_first;
wire          datar_datar_converter_source_source_last;
wire    [7:0] datar_datar_converter_source_source_payload_data;
wire          datar_datar_converter_source_source_ready;
wire          datar_datar_converter_source_source_valid;
wire          datar_datar_pads_in_first;
wire          datar_datar_pads_in_last;
wire          datar_datar_pads_in_payload_clk;
wire          datar_datar_pads_in_payload_cmd_i;
wire          datar_datar_pads_in_payload_cmd_o;
wire          datar_datar_pads_in_payload_cmd_oe;
wire    [3:0] datar_datar_pads_in_payload_data_i;
wire          datar_datar_pads_in_payload_data_i_ce;
wire    [3:0] datar_datar_pads_in_payload_data_o;
wire          datar_datar_pads_in_payload_data_oe;
reg           datar_datar_pads_in_ready = 1'd0;
wire          datar_datar_pads_in_valid;
reg           datar_datar_reset = 1'd0;
reg           datar_datar_reset_sdphydatar_next_value2 = 1'd0;
reg           datar_datar_reset_sdphydatar_next_value_ce2 = 1'd0;
reg           datar_datar_run = 1'd0;
wire          datar_datar_source_first;
wire          datar_datar_source_last;
wire    [7:0] datar_datar_source_payload_data;
reg           datar_datar_source_ready = 1'd0;
wire          datar_datar_source_valid;
wire          datar_datar_start;
reg           datar_pads_in_pads_in_first = 1'd0;
reg           datar_pads_in_pads_in_last = 1'd0;
reg           datar_pads_in_pads_in_payload_clk = 1'd0;
wire          datar_pads_in_pads_in_payload_cmd_i;
reg           datar_pads_in_pads_in_payload_cmd_o = 1'd0;
reg           datar_pads_in_pads_in_payload_cmd_oe = 1'd0;
wire    [3:0] datar_pads_in_pads_in_payload_data_i;
reg           datar_pads_in_pads_in_payload_data_i_ce = 1'd0;
reg     [3:0] datar_pads_in_pads_in_payload_data_o = 4'd0;
reg           datar_pads_in_pads_in_payload_data_oe = 1'd0;
wire          datar_pads_in_pads_in_ready;
wire          datar_pads_in_pads_in_valid;
reg           datar_pads_out_payload_clk = 1'd0;
reg           datar_pads_out_payload_cmd_o = 1'd0;
reg           datar_pads_out_payload_cmd_oe = 1'd0;
reg     [3:0] datar_pads_out_payload_data_o = 4'd0;
reg           datar_pads_out_payload_data_oe = 1'd0;
wire          datar_pads_out_ready;
reg           datar_sink_last = 1'd0;
reg     [9:0] datar_sink_payload_block_length = 10'd0;
reg           datar_sink_ready = 1'd0;
reg           datar_sink_valid = 1'd0;
reg           datar_source_source_first = 1'd0;
reg           datar_source_source_last = 1'd0;
reg     [7:0] datar_source_source_payload_data = 8'd0;
reg     [2:0] datar_source_source_payload_status = 3'd0;
reg           datar_source_source_ready = 1'd0;
reg           datar_source_source_valid = 1'd0;
reg           datar_stop = 1'd0;
reg    [31:0] datar_timeout = 32'd125000000;
reg    [31:0] datar_timeout_sdphydatar_next_value1 = 32'd0;
reg           datar_timeout_sdphydatar_next_value_ce1 = 1'd0;
wire          dataw_accepted0;
reg           dataw_accepted1 = 1'd0;
reg           dataw_accepted1_sdphydataw_next_value0 = 1'd0;
reg           dataw_accepted1_sdphydataw_next_value_ce0 = 1'd0;
reg     [7:0] dataw_count = 8'd0;
reg     [7:0] dataw_count_sdphydataw_next_value3 = 8'd0;
reg           dataw_count_sdphydataw_next_value_ce3 = 1'd0;
wire          dataw_crc_buf_pipe_valid_sink_first;
wire          dataw_crc_buf_pipe_valid_sink_last;
wire    [7:0] dataw_crc_buf_pipe_valid_sink_payload_data;
wire          dataw_crc_buf_pipe_valid_sink_ready;
wire          dataw_crc_buf_pipe_valid_sink_valid;
reg           dataw_crc_buf_pipe_valid_source_first = 1'd0;
reg           dataw_crc_buf_pipe_valid_source_last = 1'd0;
reg     [7:0] dataw_crc_buf_pipe_valid_source_payload_data = 8'd0;
wire          dataw_crc_buf_pipe_valid_source_ready;
reg           dataw_crc_buf_pipe_valid_source_valid = 1'd0;
wire          dataw_crc_buf_sink_sink_first;
wire          dataw_crc_buf_sink_sink_last;
wire    [7:0] dataw_crc_buf_sink_sink_payload_data;
wire          dataw_crc_buf_sink_sink_ready;
wire          dataw_crc_buf_sink_sink_valid;
wire          dataw_crc_buf_source_source_first;
wire          dataw_crc_buf_source_source_last;
wire    [7:0] dataw_crc_buf_source_source_payload_data;
wire          dataw_crc_buf_source_source_ready;
wire          dataw_crc_buf_source_source_valid;
reg     [2:0] dataw_crc_converter_converter_demux = 3'd0;
wire          dataw_crc_converter_converter_load_part;
reg           dataw_crc_converter_converter_sink_first = 1'd0;
reg           dataw_crc_converter_converter_sink_last = 1'd0;
wire          dataw_crc_converter_converter_sink_payload_data;
wire          dataw_crc_converter_converter_sink_ready;
wire          dataw_crc_converter_converter_sink_valid;
reg           dataw_crc_converter_converter_source_first = 1'd0;
reg           dataw_crc_converter_converter_source_last = 1'd0;
reg     [7:0] dataw_crc_converter_converter_source_payload_data = 8'd0;
reg     [3:0] dataw_crc_converter_converter_source_payload_valid_token_count = 4'd0;
wire          dataw_crc_converter_converter_source_ready;
wire          dataw_crc_converter_converter_source_valid;
reg           dataw_crc_converter_converter_strobe_all = 1'd0;
wire          dataw_crc_converter_source_source_first;
wire          dataw_crc_converter_source_source_last;
wire    [7:0] dataw_crc_converter_source_source_payload_data;
wire          dataw_crc_converter_source_source_ready;
wire          dataw_crc_converter_source_source_valid;
wire          dataw_crc_error0;
reg           dataw_crc_error1 = 1'd0;
reg           dataw_crc_error1_sdphydataw_next_value1 = 1'd0;
reg           dataw_crc_error1_sdphydataw_next_value_ce1 = 1'd0;
wire          dataw_crc_pads_in_first;
wire          dataw_crc_pads_in_last;
wire          dataw_crc_pads_in_payload_clk;
wire          dataw_crc_pads_in_payload_cmd_i;
wire          dataw_crc_pads_in_payload_cmd_o;
wire          dataw_crc_pads_in_payload_cmd_oe;
wire    [3:0] dataw_crc_pads_in_payload_data_i;
wire          dataw_crc_pads_in_payload_data_i_ce;
wire    [3:0] dataw_crc_pads_in_payload_data_o;
wire          dataw_crc_pads_in_payload_data_oe;
wire          dataw_crc_pads_in_ready;
wire          dataw_crc_pads_in_valid;
reg           dataw_crc_reset = 1'd0;
reg           dataw_crc_run = 1'd0;
wire          dataw_crc_source_first;
wire          dataw_crc_source_last;
wire    [7:0] dataw_crc_source_payload_data;
reg           dataw_crc_source_ready = 1'd0;
wire          dataw_crc_source_valid;
wire          dataw_crc_start;
reg           dataw_pads_in_pads_in_first = 1'd0;
reg           dataw_pads_in_pads_in_last = 1'd0;
reg           dataw_pads_in_pads_in_payload_clk = 1'd0;
wire          dataw_pads_in_pads_in_payload_cmd_i;
reg           dataw_pads_in_pads_in_payload_cmd_o = 1'd0;
reg           dataw_pads_in_pads_in_payload_cmd_oe = 1'd0;
wire    [3:0] dataw_pads_in_pads_in_payload_data_i;
reg           dataw_pads_in_pads_in_payload_data_i_ce = 1'd0;
reg     [3:0] dataw_pads_in_pads_in_payload_data_o = 4'd0;
reg           dataw_pads_in_pads_in_payload_data_oe = 1'd0;
reg           dataw_pads_in_pads_in_ready = 1'd0;
wire          dataw_pads_in_pads_in_valid;
reg           dataw_pads_out_payload_clk = 1'd0;
reg           dataw_pads_out_payload_cmd_o = 1'd0;
reg           dataw_pads_out_payload_cmd_oe = 1'd0;
reg     [3:0] dataw_pads_out_payload_data_o = 4'd0;
reg           dataw_pads_out_payload_data_oe = 1'd0;
wire          dataw_pads_out_ready;
reg           dataw_re = 1'd0;
reg           dataw_sink_first = 1'd0;
reg           dataw_sink_last = 1'd0;
reg     [7:0] dataw_sink_payload_data = 8'd0;
reg           dataw_sink_ready = 1'd0;
reg           dataw_sink_valid = 1'd0;
reg     [2:0] dataw_status = 3'd0;
reg           dataw_stop = 1'd0;
wire          dataw_we;
wire          dataw_write_error0;
reg           dataw_write_error1 = 1'd0;
reg           dataw_write_error1_sdphydataw_next_value2 = 1'd0;
reg           dataw_write_error1_sdphydataw_next_value_ce2 = 1'd0;
wire          done;
reg           error = 1'd0;
wire          eventmanager_block2mem_dma0;
wire          eventmanager_block2mem_dma1;
wire          eventmanager_block2mem_dma2;
wire          eventmanager_card_detect0;
wire          eventmanager_card_detect1;
wire          eventmanager_card_detect2;
wire          eventmanager_cmd_done0;
wire          eventmanager_cmd_done1;
wire          eventmanager_cmd_done2;
reg           eventmanager_enable_re = 1'd0;
reg     [3:0] eventmanager_enable_storage = 4'd0;
wire          eventmanager_mem2block_dma0;
wire          eventmanager_mem2block_dma1;
wire          eventmanager_mem2block_dma2;
reg     [3:0] eventmanager_pending_r = 4'd0;
reg           eventmanager_pending_re = 1'd0;
reg     [3:0] eventmanager_pending_status = 4'd0;
wire          eventmanager_pending_we;
reg           eventmanager_status_re = 1'd0;
reg     [3:0] eventmanager_status_status = 4'd0;
wire          eventmanager_status_we;
reg     [2:0] fsm_next_state = 3'd0;
reg     [2:0] fsm_state = 3'd0;
reg     [1:0] grant = 2'd0;
wire          idelay_clk;
wire          idelay_rst;
wire          impl0;
wire          impl1;
wire          impl2;
wire          impl3;
wire          impl4;
wire          impl_xilinxasyncresetsynchronizerimpl0;
wire          impl_xilinxasyncresetsynchronizerimpl0_rst_meta;
wire          impl_xilinxasyncresetsynchronizerimpl1;
wire          impl_xilinxasyncresetsynchronizerimpl1_rst_meta;
wire          impl_xilinxasyncresetsynchronizerimpl2;
wire          impl_xilinxasyncresetsynchronizerimpl2_rst_meta;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *)
reg           impl_xilinxmultiregimpl0_regs0 = 1'd0;
(* async_reg = "true", dont_touch = "true" *)
reg           impl_xilinxmultiregimpl0_regs1 = 1'd0;
wire          impl_xilinxmultiregimpl1;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *)
reg           impl_xilinxmultiregimpl1_regs = 1'd0;
wire          impl_xilinxsdrtristateimpl0__i;
wire          impl_xilinxsdrtristateimpl0__o;
wire          impl_xilinxsdrtristateimpl0_oe_n;
wire          impl_xilinxsdrtristateimpl1__i;
wire          impl_xilinxsdrtristateimpl1__o;
wire          impl_xilinxsdrtristateimpl1_oe_n;
wire          impl_xilinxsdrtristateimpl2__i;
wire          impl_xilinxsdrtristateimpl2__o;
wire          impl_xilinxsdrtristateimpl2_oe_n;
wire          impl_xilinxsdrtristateimpl3__i;
wire          impl_xilinxsdrtristateimpl3__o;
wire          impl_xilinxsdrtristateimpl3_oe_n;
wire          impl_xilinxsdrtristateimpl4__i;
wire          impl_xilinxsdrtristateimpl4__o;
wire          impl_xilinxsdrtristateimpl4_oe_n;
reg           in1_re = 1'd0;
reg    [31:0] in1_storage = 32'd0;
reg           in2_re = 1'd0;
reg    [31:0] in2_storage = 32'd0;
reg     [7:0] init_count = 8'd0;
reg     [7:0] init_count_sdphyinit_next_value = 8'd0;
reg           init_count_sdphyinit_next_value_ce = 1'd0;
wire          init_initialize_r;
reg           init_initialize_re = 1'd0;
reg           init_initialize_w = 1'd0;
reg           init_initialize_we = 1'd0;
wire          init_pads_in_payload_cmd_i;
wire    [3:0] init_pads_in_payload_data_i;
wire          init_pads_in_valid;
reg           init_pads_out_payload_clk = 1'd0;
reg           init_pads_out_payload_cmd_o = 1'd0;
reg           init_pads_out_payload_cmd_oe = 1'd0;
reg     [3:0] init_pads_out_payload_data_o = 4'd0;
reg           init_pads_out_payload_data_oe = 1'd0;
wire          init_pads_out_ready;
reg           interface0_ack = 1'd0;
wire   [29:0] interface0_adr;
wire    [1:0] interface0_bte;
wire          interface0_bus_ack;
wire   [31:0] interface0_bus_adr;
reg     [1:0] interface0_bus_bte = 2'd0;
reg     [2:0] interface0_bus_cti = 3'd0;
wire          interface0_bus_cyc;
wire   [31:0] interface0_bus_dat_r;
wire   [31:0] interface0_bus_dat_w;
wire          interface0_bus_err;
wire    [3:0] interface0_bus_sel;
wire          interface0_bus_stb;
wire          interface0_bus_we;
wire    [2:0] interface0_cti;
wire          interface0_cyc;
reg    [31:0] interface0_dat_r = 32'd0;
wire   [31:0] interface0_dat_w;
reg           interface0_err = 1'd0;
wire    [3:0] interface0_sel;
wire          interface0_stb;
wire          interface0_we;
reg    [13:0] interface1_adr = 14'd0;
reg    [13:0] interface1_adr_wishbone2csr_next_value1 = 14'd0;
reg           interface1_adr_wishbone2csr_next_value_ce1 = 1'd0;
wire          interface1_bus_ack;
wire   [31:0] interface1_bus_adr;
reg     [1:0] interface1_bus_bte = 2'd0;
reg     [2:0] interface1_bus_cti = 3'd0;
wire          interface1_bus_cyc;
wire   [31:0] interface1_bus_dat_r;
reg    [31:0] interface1_bus_dat_w = 32'd0;
wire          interface1_bus_err;
wire    [3:0] interface1_bus_sel;
wire          interface1_bus_stb;
wire          interface1_bus_we;
wire   [31:0] interface1_dat_r;
reg    [31:0] interface1_dat_w = 32'd0;
reg    [31:0] interface1_dat_w_wishbone2csr_next_value0 = 32'd0;
reg           interface1_dat_w_wishbone2csr_next_value_ce0 = 1'd0;
reg           interface1_re = 1'd0;
reg           interface1_re_wishbone2csr_next_value2 = 1'd0;
reg           interface1_re_wishbone2csr_next_value_ce2 = 1'd0;
reg           interface1_we = 1'd0;
reg           interface1_we_wishbone2csr_next_value3 = 1'd0;
reg           interface1_we_wishbone2csr_next_value_ce3 = 1'd0;
reg     [7:0] leds_chaser = 8'd0;
reg    [22:0] leds_count = 23'd7812500;
wire          leds_done;
reg     [7:0] leds_leds = 8'd0;
reg           leds_mode = 1'd0;
reg           leds_re = 1'd0;
reg     [7:0] leds_storage = 8'd0;
wire          leds_wait;
reg     [1:0] litedramwishbone2native_next_state = 2'd0;
reg     [1:0] litedramwishbone2native_state = 2'd0;
reg           locked0 = 1'd0;
reg           locked1 = 1'd0;
reg           locked10 = 1'd0;
reg           locked11 = 1'd0;
reg           locked12 = 1'd0;
reg           locked13 = 1'd0;
reg           locked14 = 1'd0;
reg           locked15 = 1'd0;
reg           locked16 = 1'd0;
reg           locked17 = 1'd0;
reg           locked18 = 1'd0;
reg           locked19 = 1'd0;
reg           locked2 = 1'd0;
reg           locked20 = 1'd0;
reg           locked21 = 1'd0;
reg           locked22 = 1'd0;
reg           locked23 = 1'd0;
reg           locked3 = 1'd0;
reg           locked4 = 1'd0;
reg           locked5 = 1'd0;
reg           locked6 = 1'd0;
reg           locked7 = 1'd0;
reg           locked8 = 1'd0;
reg           locked9 = 1'd0;
reg           mem2block_dma_clear = 1'd0;
reg           mem2block_dma_pending = 1'd0;
wire          mem2block_dma_status;
wire          mem2block_dma_trigger;
wire          mmcm_fb;
reg     [3:0] multiplexer_next_state = 4'd0;
reg     [3:0] multiplexer_state = 4'd0;
reg           new_master_rdata_valid0 = 1'd0;
reg           new_master_rdata_valid1 = 1'd0;
reg           new_master_rdata_valid10 = 1'd0;
reg           new_master_rdata_valid11 = 1'd0;
reg           new_master_rdata_valid12 = 1'd0;
reg           new_master_rdata_valid13 = 1'd0;
reg           new_master_rdata_valid14 = 1'd0;
reg           new_master_rdata_valid15 = 1'd0;
reg           new_master_rdata_valid16 = 1'd0;
reg           new_master_rdata_valid17 = 1'd0;
reg           new_master_rdata_valid18 = 1'd0;
reg           new_master_rdata_valid19 = 1'd0;
reg           new_master_rdata_valid2 = 1'd0;
reg           new_master_rdata_valid20 = 1'd0;
reg           new_master_rdata_valid21 = 1'd0;
reg           new_master_rdata_valid22 = 1'd0;
reg           new_master_rdata_valid23 = 1'd0;
reg           new_master_rdata_valid24 = 1'd0;
reg           new_master_rdata_valid25 = 1'd0;
reg           new_master_rdata_valid26 = 1'd0;
reg           new_master_rdata_valid3 = 1'd0;
reg           new_master_rdata_valid4 = 1'd0;
reg           new_master_rdata_valid5 = 1'd0;
reg           new_master_rdata_valid6 = 1'd0;
reg           new_master_rdata_valid7 = 1'd0;
reg           new_master_rdata_valid8 = 1'd0;
reg           new_master_rdata_valid9 = 1'd0;
reg           new_master_wdata_ready0 = 1'd0;
reg           new_master_wdata_ready1 = 1'd0;
reg           new_master_wdata_ready2 = 1'd0;
reg           new_master_wdata_ready3 = 1'd0;
reg           new_master_wdata_ready4 = 1'd0;
reg           new_master_wdata_ready5 = 1'd0;
reg     [1:0] refresher_next_state = 2'd0;
reg     [1:0] refresher_state = 2'd0;
wire    [2:0] request;
wire          reset0;
wire          reset1;
wire          reset2;
wire          reset3;
wire          reset4;
wire          reset5;
wire          reset6;
wire          reset7;
reg           result_re = 1'd0;
wire   [31:0] result_status;
wire          result_we;
reg    [31:0] rhs_array_muxed0 = 32'd0;
reg    [31:0] rhs_array_muxed1 = 32'd0;
reg     [2:0] rhs_array_muxed10 = 3'd0;
reg           rhs_array_muxed11 = 1'd0;
reg           rhs_array_muxed12 = 1'd0;
reg           rhs_array_muxed13 = 1'd0;
reg           rhs_array_muxed14 = 1'd0;
reg    [13:0] rhs_array_muxed15 = 14'd0;
reg     [2:0] rhs_array_muxed16 = 3'd0;
reg           rhs_array_muxed17 = 1'd0;
reg           rhs_array_muxed18 = 1'd0;
reg           rhs_array_muxed19 = 1'd0;
reg     [3:0] rhs_array_muxed2 = 4'd0;
reg    [20:0] rhs_array_muxed20 = 21'd0;
reg           rhs_array_muxed21 = 1'd0;
reg           rhs_array_muxed22 = 1'd0;
reg    [20:0] rhs_array_muxed23 = 21'd0;
reg           rhs_array_muxed24 = 1'd0;
reg           rhs_array_muxed25 = 1'd0;
reg    [20:0] rhs_array_muxed26 = 21'd0;
reg           rhs_array_muxed27 = 1'd0;
reg           rhs_array_muxed28 = 1'd0;
reg    [20:0] rhs_array_muxed29 = 21'd0;
reg           rhs_array_muxed3 = 1'd0;
reg           rhs_array_muxed30 = 1'd0;
reg           rhs_array_muxed31 = 1'd0;
reg    [20:0] rhs_array_muxed32 = 21'd0;
reg           rhs_array_muxed33 = 1'd0;
reg           rhs_array_muxed34 = 1'd0;
reg    [20:0] rhs_array_muxed35 = 21'd0;
reg           rhs_array_muxed36 = 1'd0;
reg           rhs_array_muxed37 = 1'd0;
reg    [20:0] rhs_array_muxed38 = 21'd0;
reg           rhs_array_muxed39 = 1'd0;
reg           rhs_array_muxed4 = 1'd0;
reg           rhs_array_muxed40 = 1'd0;
reg    [20:0] rhs_array_muxed41 = 21'd0;
reg           rhs_array_muxed42 = 1'd0;
reg           rhs_array_muxed43 = 1'd0;
reg           rhs_array_muxed5 = 1'd0;
reg     [2:0] rhs_array_muxed6 = 3'd0;
reg     [1:0] rhs_array_muxed7 = 2'd0;
reg           rhs_array_muxed8 = 1'd0;
reg    [13:0] rhs_array_muxed9 = 14'd0;
wire          roundrobin0_ce;
reg     [1:0] roundrobin0_grant = 2'd0;
wire    [2:0] roundrobin0_request;
wire          roundrobin1_ce;
reg     [1:0] roundrobin1_grant = 2'd0;
wire    [2:0] roundrobin1_request;
wire          roundrobin2_ce;
reg     [1:0] roundrobin2_grant = 2'd0;
wire    [2:0] roundrobin2_request;
wire          roundrobin3_ce;
reg     [1:0] roundrobin3_grant = 2'd0;
wire    [2:0] roundrobin3_request;
wire          roundrobin4_ce;
reg     [1:0] roundrobin4_grant = 2'd0;
wire    [2:0] roundrobin4_request;
wire          roundrobin5_ce;
reg     [1:0] roundrobin5_grant = 2'd0;
wire    [2:0] roundrobin5_request;
wire          roundrobin6_ce;
reg     [1:0] roundrobin6_grant = 2'd0;
wire    [2:0] roundrobin6_request;
wire          roundrobin7_ce;
reg     [1:0] roundrobin7_grant = 2'd0;
wire    [2:0] roundrobin7_request;
reg           rs232phyrx_next_state = 1'd0;
reg           rs232phyrx_state = 1'd0;
reg           rs232phytx_next_state = 1'd0;
reg           rs232phytx_state = 1'd0;
reg     [1:0] sdblock2memdma_next_state = 2'd0;
reg     [1:0] sdblock2memdma_state = 2'd0;
reg           sdcard_block2mem_connect = 1'd0;
reg     [1:0] sdcard_block2mem_converter_demux = 2'd0;
wire          sdcard_block2mem_converter_load_part;
wire          sdcard_block2mem_converter_sink_first;
wire          sdcard_block2mem_converter_sink_last;
wire    [7:0] sdcard_block2mem_converter_sink_payload_data;
wire          sdcard_block2mem_converter_sink_ready;
wire          sdcard_block2mem_converter_sink_valid;
reg           sdcard_block2mem_converter_source_first = 1'd0;
reg           sdcard_block2mem_converter_source_last = 1'd0;
reg    [31:0] sdcard_block2mem_converter_source_payload_data = 32'd0;
reg     [2:0] sdcard_block2mem_converter_source_payload_valid_token_count = 3'd0;
wire          sdcard_block2mem_converter_source_ready;
wire          sdcard_block2mem_converter_source_valid;
reg           sdcard_block2mem_converter_strobe_all = 1'd0;
reg           sdcard_block2mem_done_d = 1'd0;
reg     [8:0] sdcard_block2mem_fifo_consume = 9'd0;
wire          sdcard_block2mem_fifo_do_read;
wire          sdcard_block2mem_fifo_fifo_in_first;
wire          sdcard_block2mem_fifo_fifo_in_last;
wire    [7:0] sdcard_block2mem_fifo_fifo_in_payload_data;
wire          sdcard_block2mem_fifo_fifo_out_first;
wire          sdcard_block2mem_fifo_fifo_out_last;
wire    [7:0] sdcard_block2mem_fifo_fifo_out_payload_data;
reg     [9:0] sdcard_block2mem_fifo_level0 = 10'd0;
wire    [9:0] sdcard_block2mem_fifo_level1;
reg     [8:0] sdcard_block2mem_fifo_produce = 9'd0;
wire    [8:0] sdcard_block2mem_fifo_rdport_adr;
wire    [9:0] sdcard_block2mem_fifo_rdport_dat_r;
wire          sdcard_block2mem_fifo_rdport_re;
wire          sdcard_block2mem_fifo_re;
reg           sdcard_block2mem_fifo_readable = 1'd0;
reg           sdcard_block2mem_fifo_replace = 1'd0;
reg           sdcard_block2mem_fifo_sink_first = 1'd0;
reg           sdcard_block2mem_fifo_sink_last = 1'd0;
reg     [7:0] sdcard_block2mem_fifo_sink_payload_data = 8'd0;
wire          sdcard_block2mem_fifo_sink_ready;
reg           sdcard_block2mem_fifo_sink_valid = 1'd0;
wire          sdcard_block2mem_fifo_source_first;
wire          sdcard_block2mem_fifo_source_last;
wire    [7:0] sdcard_block2mem_fifo_source_payload_data;
wire          sdcard_block2mem_fifo_source_ready;
wire          sdcard_block2mem_fifo_source_valid;
wire    [9:0] sdcard_block2mem_fifo_syncfifo_din;
wire    [9:0] sdcard_block2mem_fifo_syncfifo_dout;
wire          sdcard_block2mem_fifo_syncfifo_re;
wire          sdcard_block2mem_fifo_syncfifo_readable;
wire          sdcard_block2mem_fifo_syncfifo_we;
wire          sdcard_block2mem_fifo_syncfifo_writable;
reg     [8:0] sdcard_block2mem_fifo_wrport_adr = 9'd0;
wire    [9:0] sdcard_block2mem_fifo_wrport_dat_r;
wire    [9:0] sdcard_block2mem_fifo_wrport_dat_w;
wire          sdcard_block2mem_fifo_wrport_we;
reg           sdcard_block2mem_irq = 1'd0;
wire          sdcard_block2mem_sink_sink_first;
wire          sdcard_block2mem_sink_sink_last0;
reg           sdcard_block2mem_sink_sink_last1 = 1'd0;
reg    [31:0] sdcard_block2mem_sink_sink_payload_address = 32'd0;
wire    [7:0] sdcard_block2mem_sink_sink_payload_data0;
reg    [31:0] sdcard_block2mem_sink_sink_payload_data1 = 32'd0;
reg           sdcard_block2mem_sink_sink_ready0 = 1'd0;
wire          sdcard_block2mem_sink_sink_ready1;
wire          sdcard_block2mem_sink_sink_valid0;
reg           sdcard_block2mem_sink_sink_valid1 = 1'd0;
wire          sdcard_block2mem_source_source_first;
wire          sdcard_block2mem_source_source_last;
wire   [31:0] sdcard_block2mem_source_source_payload_data;
wire          sdcard_block2mem_source_source_ready;
wire          sdcard_block2mem_source_source_valid;
wire          sdcard_block2mem_start;
wire   [63:0] sdcard_block2mem_wishbonedmawriter_base0;
wire   [31:0] sdcard_block2mem_wishbonedmawriter_base1;
reg           sdcard_block2mem_wishbonedmawriter_base_re = 1'd0;
reg    [63:0] sdcard_block2mem_wishbonedmawriter_base_storage = 64'd0;
reg           sdcard_block2mem_wishbonedmawriter_done = 1'd0;
reg           sdcard_block2mem_wishbonedmawriter_done_re = 1'd0;
wire          sdcard_block2mem_wishbonedmawriter_done_status;
wire          sdcard_block2mem_wishbonedmawriter_done_we;
wire          sdcard_block2mem_wishbonedmawriter_enable;
reg           sdcard_block2mem_wishbonedmawriter_enable_re = 1'd0;
reg           sdcard_block2mem_wishbonedmawriter_enable_storage = 1'd0;
wire   [31:0] sdcard_block2mem_wishbonedmawriter_length0;
wire   [31:0] sdcard_block2mem_wishbonedmawriter_length1;
reg           sdcard_block2mem_wishbonedmawriter_length_re = 1'd0;
reg    [31:0] sdcard_block2mem_wishbonedmawriter_length_storage = 32'd0;
wire          sdcard_block2mem_wishbonedmawriter_loop;
reg           sdcard_block2mem_wishbonedmawriter_loop_re = 1'd0;
reg           sdcard_block2mem_wishbonedmawriter_loop_storage = 1'd0;
wire   [31:0] sdcard_block2mem_wishbonedmawriter_offset0;
reg    [31:0] sdcard_block2mem_wishbonedmawriter_offset1 = 32'd0;
reg    [31:0] sdcard_block2mem_wishbonedmawriter_offset1_sdblock2memdma_next_value = 32'd0;
reg           sdcard_block2mem_wishbonedmawriter_offset1_sdblock2memdma_next_value_ce = 1'd0;
reg           sdcard_block2mem_wishbonedmawriter_offset_re = 1'd0;
wire   [31:0] sdcard_block2mem_wishbonedmawriter_offset_status;
wire          sdcard_block2mem_wishbonedmawriter_offset_we;
wire          sdcard_block2mem_wishbonedmawriter_reset;
wire          sdcard_block2mem_wishbonedmawriter_sink_first;
wire          sdcard_block2mem_wishbonedmawriter_sink_last;
wire   [31:0] sdcard_block2mem_wishbonedmawriter_sink_payload_data;
reg           sdcard_block2mem_wishbonedmawriter_sink_ready = 1'd0;
wire          sdcard_block2mem_wishbonedmawriter_sink_valid;
reg           sdcard_core_block_count_re = 1'd0;
reg    [31:0] sdcard_core_block_count_storage = 32'd0;
reg           sdcard_core_block_length_re = 1'd0;
reg     [9:0] sdcard_core_block_length_storage = 10'd0;
wire    [5:0] sdcard_core_cmd;
reg           sdcard_core_cmd_argument_re = 1'd0;
reg    [31:0] sdcard_core_cmd_argument_storage = 32'd0;
reg           sdcard_core_cmd_command_re = 1'd0;
reg    [13:0] sdcard_core_cmd_command_storage = 14'd0;
reg     [2:0] sdcard_core_cmd_count = 3'd0;
reg     [2:0] sdcard_core_cmd_count_fsm_next_value2 = 3'd0;
reg           sdcard_core_cmd_count_fsm_next_value_ce2 = 1'd0;
reg           sdcard_core_cmd_done = 1'd0;
reg           sdcard_core_cmd_done_fsm_next_value0 = 1'd0;
reg           sdcard_core_cmd_done_fsm_next_value_ce0 = 1'd0;
reg           sdcard_core_cmd_error = 1'd0;
reg           sdcard_core_cmd_error_fsm_next_value4 = 1'd0;
reg           sdcard_core_cmd_error_fsm_next_value_ce4 = 1'd0;
reg           sdcard_core_cmd_event_re = 1'd0;
reg     [3:0] sdcard_core_cmd_event_status = 4'd0;
wire          sdcard_core_cmd_event_we;
reg           sdcard_core_cmd_response_re = 1'd0;
reg   [127:0] sdcard_core_cmd_response_status = 128'd0;
reg   [127:0] sdcard_core_cmd_response_status_fsm_next_value8 = 128'd0;
reg           sdcard_core_cmd_response_status_fsm_next_value_ce8 = 1'd0;
wire          sdcard_core_cmd_response_we;
reg           sdcard_core_cmd_send_re = 1'd0;
reg           sdcard_core_cmd_send_storage = 1'd0;
reg           sdcard_core_cmd_timeout = 1'd0;
reg           sdcard_core_cmd_timeout_fsm_next_value5 = 1'd0;
reg           sdcard_core_cmd_timeout_fsm_next_value_ce5 = 1'd0;
wire    [1:0] sdcard_core_cmd_type;
reg     [2:0] sdcard_core_crc16_inserter_count = 3'd0;
reg     [2:0] sdcard_core_crc16_inserter_count_crc16inserter_next_value = 3'd0;
reg           sdcard_core_crc16_inserter_count_crc16inserter_next_value_ce = 1'd0;
reg    [15:0] sdcard_core_crc16_inserter_crc0_crc = 16'd0;
reg     [1:0] sdcard_core_crc16_inserter_crc0_din = 2'd0;
wire          sdcard_core_crc16_inserter_crc0_enable;
reg    [15:0] sdcard_core_crc16_inserter_crc0_reg0 = 16'd0;
wire   [15:0] sdcard_core_crc16_inserter_crc0_reg1;
wire   [15:0] sdcard_core_crc16_inserter_crc0_reg2;
wire          sdcard_core_crc16_inserter_crc0_reset;
reg    [15:0] sdcard_core_crc16_inserter_crc1_crc = 16'd0;
reg     [1:0] sdcard_core_crc16_inserter_crc1_din = 2'd0;
wire          sdcard_core_crc16_inserter_crc1_enable;
reg    [15:0] sdcard_core_crc16_inserter_crc1_reg0 = 16'd0;
wire   [15:0] sdcard_core_crc16_inserter_crc1_reg1;
wire   [15:0] sdcard_core_crc16_inserter_crc1_reg2;
wire          sdcard_core_crc16_inserter_crc1_reset;
reg    [15:0] sdcard_core_crc16_inserter_crc2_crc = 16'd0;
reg     [1:0] sdcard_core_crc16_inserter_crc2_din = 2'd0;
wire          sdcard_core_crc16_inserter_crc2_enable;
reg    [15:0] sdcard_core_crc16_inserter_crc2_reg0 = 16'd0;
wire   [15:0] sdcard_core_crc16_inserter_crc2_reg1;
wire   [15:0] sdcard_core_crc16_inserter_crc2_reg2;
wire          sdcard_core_crc16_inserter_crc2_reset;
reg    [15:0] sdcard_core_crc16_inserter_crc3_crc = 16'd0;
reg     [1:0] sdcard_core_crc16_inserter_crc3_din = 2'd0;
wire          sdcard_core_crc16_inserter_crc3_enable;
reg    [15:0] sdcard_core_crc16_inserter_crc3_reg0 = 16'd0;
wire   [15:0] sdcard_core_crc16_inserter_crc3_reg1;
wire   [15:0] sdcard_core_crc16_inserter_crc3_reg2;
wire          sdcard_core_crc16_inserter_crc3_reset;
wire          sdcard_core_crc16_inserter_sink_first;
wire          sdcard_core_crc16_inserter_sink_last;
wire    [7:0] sdcard_core_crc16_inserter_sink_payload_data;
reg           sdcard_core_crc16_inserter_sink_ready = 1'd0;
wire          sdcard_core_crc16_inserter_sink_valid;
reg           sdcard_core_crc16_inserter_source_first = 1'd0;
reg           sdcard_core_crc16_inserter_source_last = 1'd0;
reg     [7:0] sdcard_core_crc16_inserter_source_payload_data = 8'd0;
reg           sdcard_core_crc16_inserter_source_ready = 1'd0;
reg           sdcard_core_crc16_inserter_source_valid = 1'd0;
reg     [6:0] sdcard_core_crc7_inserter_crc = 7'd0;
wire   [39:0] sdcard_core_crc7_inserter_din;
wire          sdcard_core_crc7_inserter_enable;
reg     [6:0] sdcard_core_crc7_inserter_reg0 = 7'd0;
wire    [6:0] sdcard_core_crc7_inserter_reg1;
wire    [6:0] sdcard_core_crc7_inserter_reg10;
wire    [6:0] sdcard_core_crc7_inserter_reg11;
wire    [6:0] sdcard_core_crc7_inserter_reg12;
wire    [6:0] sdcard_core_crc7_inserter_reg13;
wire    [6:0] sdcard_core_crc7_inserter_reg14;
wire    [6:0] sdcard_core_crc7_inserter_reg15;
wire    [6:0] sdcard_core_crc7_inserter_reg16;
wire    [6:0] sdcard_core_crc7_inserter_reg17;
wire    [6:0] sdcard_core_crc7_inserter_reg18;
wire    [6:0] sdcard_core_crc7_inserter_reg19;
wire    [6:0] sdcard_core_crc7_inserter_reg2;
wire    [6:0] sdcard_core_crc7_inserter_reg20;
wire    [6:0] sdcard_core_crc7_inserter_reg21;
wire    [6:0] sdcard_core_crc7_inserter_reg22;
wire    [6:0] sdcard_core_crc7_inserter_reg23;
wire    [6:0] sdcard_core_crc7_inserter_reg24;
wire    [6:0] sdcard_core_crc7_inserter_reg25;
wire    [6:0] sdcard_core_crc7_inserter_reg26;
wire    [6:0] sdcard_core_crc7_inserter_reg27;
wire    [6:0] sdcard_core_crc7_inserter_reg28;
wire    [6:0] sdcard_core_crc7_inserter_reg29;
wire    [6:0] sdcard_core_crc7_inserter_reg3;
wire    [6:0] sdcard_core_crc7_inserter_reg30;
wire    [6:0] sdcard_core_crc7_inserter_reg31;
wire    [6:0] sdcard_core_crc7_inserter_reg32;
wire    [6:0] sdcard_core_crc7_inserter_reg33;
wire    [6:0] sdcard_core_crc7_inserter_reg34;
wire    [6:0] sdcard_core_crc7_inserter_reg35;
wire    [6:0] sdcard_core_crc7_inserter_reg36;
wire    [6:0] sdcard_core_crc7_inserter_reg37;
wire    [6:0] sdcard_core_crc7_inserter_reg38;
wire    [6:0] sdcard_core_crc7_inserter_reg39;
wire    [6:0] sdcard_core_crc7_inserter_reg4;
wire    [6:0] sdcard_core_crc7_inserter_reg40;
wire    [6:0] sdcard_core_crc7_inserter_reg5;
wire    [6:0] sdcard_core_crc7_inserter_reg6;
wire    [6:0] sdcard_core_crc7_inserter_reg7;
wire    [6:0] sdcard_core_crc7_inserter_reg8;
wire    [6:0] sdcard_core_crc7_inserter_reg9;
wire          sdcard_core_crc7_inserter_reset;
wire    [5:0] sdcard_core_csrfield_cmd;
wire    [1:0] sdcard_core_csrfield_cmd_type;
wire          sdcard_core_csrfield_crc0;
wire          sdcard_core_csrfield_crc1;
wire    [1:0] sdcard_core_csrfield_data_type;
wire          sdcard_core_csrfield_done0;
wire          sdcard_core_csrfield_done1;
wire          sdcard_core_csrfield_error0;
wire          sdcard_core_csrfield_error1;
wire          sdcard_core_csrfield_timeout0;
wire          sdcard_core_csrfield_timeout1;
reg    [31:0] sdcard_core_data_count = 32'd0;
reg    [31:0] sdcard_core_data_count_fsm_next_value3 = 32'd0;
reg           sdcard_core_data_count_fsm_next_value_ce3 = 1'd0;
reg           sdcard_core_data_done = 1'd0;
reg           sdcard_core_data_done_fsm_next_value1 = 1'd0;
reg           sdcard_core_data_done_fsm_next_value_ce1 = 1'd0;
reg           sdcard_core_data_error = 1'd0;
reg           sdcard_core_data_error_fsm_next_value6 = 1'd0;
reg           sdcard_core_data_error_fsm_next_value_ce6 = 1'd0;
reg           sdcard_core_data_event_re = 1'd0;
reg     [3:0] sdcard_core_data_event_status = 4'd0;
wire          sdcard_core_data_event_we;
reg           sdcard_core_data_timeout = 1'd0;
reg           sdcard_core_data_timeout_fsm_next_value7 = 1'd0;
reg           sdcard_core_data_timeout_fsm_next_value_ce7 = 1'd0;
wire    [1:0] sdcard_core_data_type;
reg           sdcard_core_done_d = 1'd0;
reg     [2:0] sdcard_core_fifo_consume = 3'd0;
wire          sdcard_core_fifo_do_read;
wire          sdcard_core_fifo_fifo_in_first;
wire          sdcard_core_fifo_fifo_in_last;
wire    [7:0] sdcard_core_fifo_fifo_in_payload_data;
wire          sdcard_core_fifo_fifo_out_first;
wire          sdcard_core_fifo_fifo_out_last;
wire    [7:0] sdcard_core_fifo_fifo_out_payload_data;
reg     [3:0] sdcard_core_fifo_level = 4'd0;
reg     [2:0] sdcard_core_fifo_produce = 3'd0;
wire    [2:0] sdcard_core_fifo_rdport_adr;
wire    [9:0] sdcard_core_fifo_rdport_dat_r;
reg           sdcard_core_fifo_replace = 1'd0;
wire          sdcard_core_fifo_reset;
wire          sdcard_core_fifo_sink_first;
wire          sdcard_core_fifo_sink_last;
wire    [7:0] sdcard_core_fifo_sink_payload_data;
wire          sdcard_core_fifo_sink_ready;
wire          sdcard_core_fifo_sink_valid;
wire          sdcard_core_fifo_source_first;
wire          sdcard_core_fifo_source_last;
wire    [7:0] sdcard_core_fifo_source_payload_data;
wire          sdcard_core_fifo_source_ready;
wire          sdcard_core_fifo_source_valid;
wire    [9:0] sdcard_core_fifo_syncfifo_din;
wire    [9:0] sdcard_core_fifo_syncfifo_dout;
wire          sdcard_core_fifo_syncfifo_re;
wire          sdcard_core_fifo_syncfifo_readable;
wire          sdcard_core_fifo_syncfifo_we;
wire          sdcard_core_fifo_syncfifo_writable;
reg     [2:0] sdcard_core_fifo_wrport_adr = 3'd0;
wire    [9:0] sdcard_core_fifo_wrport_dat_r;
wire    [9:0] sdcard_core_fifo_wrport_dat_w;
wire          sdcard_core_fifo_wrport_we;
reg           sdcard_core_irq = 1'd0;
wire          sdcard_core_sink_sink_first0;
reg           sdcard_core_sink_sink_first1 = 1'd0;
wire          sdcard_core_sink_sink_last0;
reg           sdcard_core_sink_sink_last1 = 1'd0;
wire    [7:0] sdcard_core_sink_sink_payload_data0;
reg     [7:0] sdcard_core_sink_sink_payload_data1 = 8'd0;
wire          sdcard_core_sink_sink_ready0;
wire          sdcard_core_sink_sink_ready1;
wire          sdcard_core_sink_sink_valid0;
reg           sdcard_core_sink_sink_valid1 = 1'd0;
wire          sdcard_core_source_source_first0;
wire          sdcard_core_source_source_first1;
wire          sdcard_core_source_source_last0;
wire          sdcard_core_source_source_last1;
wire    [7:0] sdcard_core_source_source_payload_data0;
wire    [7:0] sdcard_core_source_source_payload_data1;
wire          sdcard_core_source_source_ready0;
wire          sdcard_core_source_source_ready1;
wire          sdcard_core_source_source_valid0;
wire          sdcard_core_source_source_valid1;
wire          sdcard_irq_irq;
wire          sdcard_mem2block_converter_converter_first;
wire          sdcard_mem2block_converter_converter_last;
reg     [1:0] sdcard_mem2block_converter_converter_mux = 2'd0;
wire          sdcard_mem2block_converter_converter_sink_first;
wire          sdcard_mem2block_converter_converter_sink_last;
wire   [31:0] sdcard_mem2block_converter_converter_sink_payload_data;
wire          sdcard_mem2block_converter_converter_sink_ready;
wire          sdcard_mem2block_converter_converter_sink_valid;
wire          sdcard_mem2block_converter_converter_source_first;
wire          sdcard_mem2block_converter_converter_source_last;
reg     [7:0] sdcard_mem2block_converter_converter_source_payload_data = 8'd0;
wire          sdcard_mem2block_converter_converter_source_payload_valid_token_count;
wire          sdcard_mem2block_converter_converter_source_ready;
wire          sdcard_mem2block_converter_converter_source_valid;
wire          sdcard_mem2block_converter_source_source_first;
wire          sdcard_mem2block_converter_source_source_last;
wire    [7:0] sdcard_mem2block_converter_source_source_payload_data;
wire          sdcard_mem2block_converter_source_source_ready;
wire          sdcard_mem2block_converter_source_source_valid;
reg     [8:0] sdcard_mem2block_count = 9'd0;
wire   [63:0] sdcard_mem2block_dma_base0;
wire   [31:0] sdcard_mem2block_dma_base1;
reg           sdcard_mem2block_dma_base_re = 1'd0;
reg    [63:0] sdcard_mem2block_dma_base_storage = 64'd0;
reg           sdcard_mem2block_dma_done = 1'd0;
reg           sdcard_mem2block_dma_done_re = 1'd0;
wire          sdcard_mem2block_dma_done_status;
wire          sdcard_mem2block_dma_done_we;
wire          sdcard_mem2block_dma_enable;
reg           sdcard_mem2block_dma_enable_re = 1'd0;
reg           sdcard_mem2block_dma_enable_storage = 1'd0;
reg     [3:0] sdcard_mem2block_dma_fifo_consume = 4'd0;
wire          sdcard_mem2block_dma_fifo_do_read;
wire          sdcard_mem2block_dma_fifo_fifo_in_first;
wire          sdcard_mem2block_dma_fifo_fifo_in_last;
wire   [31:0] sdcard_mem2block_dma_fifo_fifo_in_payload_data;
wire          sdcard_mem2block_dma_fifo_fifo_out_first;
wire          sdcard_mem2block_dma_fifo_fifo_out_last;
wire   [31:0] sdcard_mem2block_dma_fifo_fifo_out_payload_data;
reg     [4:0] sdcard_mem2block_dma_fifo_level = 5'd0;
reg     [3:0] sdcard_mem2block_dma_fifo_produce = 4'd0;
wire    [3:0] sdcard_mem2block_dma_fifo_rdport_adr;
wire   [33:0] sdcard_mem2block_dma_fifo_rdport_dat_r;
reg           sdcard_mem2block_dma_fifo_replace = 1'd0;
reg           sdcard_mem2block_dma_fifo_sink_first = 1'd0;
wire          sdcard_mem2block_dma_fifo_sink_last;
wire   [31:0] sdcard_mem2block_dma_fifo_sink_payload_data;
wire          sdcard_mem2block_dma_fifo_sink_ready;
reg           sdcard_mem2block_dma_fifo_sink_valid = 1'd0;
wire          sdcard_mem2block_dma_fifo_source_first;
wire          sdcard_mem2block_dma_fifo_source_last;
wire   [31:0] sdcard_mem2block_dma_fifo_source_payload_data;
wire          sdcard_mem2block_dma_fifo_source_ready;
wire          sdcard_mem2block_dma_fifo_source_valid;
wire   [33:0] sdcard_mem2block_dma_fifo_syncfifo_din;
wire   [33:0] sdcard_mem2block_dma_fifo_syncfifo_dout;
wire          sdcard_mem2block_dma_fifo_syncfifo_re;
wire          sdcard_mem2block_dma_fifo_syncfifo_readable;
wire          sdcard_mem2block_dma_fifo_syncfifo_we;
wire          sdcard_mem2block_dma_fifo_syncfifo_writable;
reg     [3:0] sdcard_mem2block_dma_fifo_wrport_adr = 4'd0;
wire   [33:0] sdcard_mem2block_dma_fifo_wrport_dat_r;
wire   [33:0] sdcard_mem2block_dma_fifo_wrport_dat_w;
wire          sdcard_mem2block_dma_fifo_wrport_we;
wire   [31:0] sdcard_mem2block_dma_length0;
wire   [31:0] sdcard_mem2block_dma_length1;
reg           sdcard_mem2block_dma_length_re = 1'd0;
reg    [31:0] sdcard_mem2block_dma_length_storage = 32'd0;
wire          sdcard_mem2block_dma_loop;
reg           sdcard_mem2block_dma_loop_re = 1'd0;
reg           sdcard_mem2block_dma_loop_storage = 1'd0;
wire   [31:0] sdcard_mem2block_dma_offset0;
reg    [31:0] sdcard_mem2block_dma_offset1 = 32'd0;
reg    [31:0] sdcard_mem2block_dma_offset1_sdmem2blockdma_next_value = 32'd0;
reg           sdcard_mem2block_dma_offset1_sdmem2blockdma_next_value_ce = 1'd0;
reg           sdcard_mem2block_dma_offset_re = 1'd0;
wire   [31:0] sdcard_mem2block_dma_offset_status;
wire          sdcard_mem2block_dma_offset_we;
wire          sdcard_mem2block_dma_reset;
reg           sdcard_mem2block_dma_sink_sink_last = 1'd0;
reg    [31:0] sdcard_mem2block_dma_sink_sink_payload_address = 32'd0;
reg           sdcard_mem2block_dma_sink_sink_ready = 1'd0;
reg           sdcard_mem2block_dma_sink_sink_valid = 1'd0;
wire          sdcard_mem2block_dma_source_source_first;
wire          sdcard_mem2block_dma_source_source_last;
wire   [31:0] sdcard_mem2block_dma_source_source_payload_data;
wire          sdcard_mem2block_dma_source_source_ready;
wire          sdcard_mem2block_dma_source_source_valid;
reg           sdcard_mem2block_done_d = 1'd0;
reg     [8:0] sdcard_mem2block_fifo_consume = 9'd0;
wire          sdcard_mem2block_fifo_do_read;
wire          sdcard_mem2block_fifo_fifo_in_first;
wire          sdcard_mem2block_fifo_fifo_in_last;
wire    [7:0] sdcard_mem2block_fifo_fifo_in_payload_data;
wire          sdcard_mem2block_fifo_fifo_out_first;
wire          sdcard_mem2block_fifo_fifo_out_last;
wire    [7:0] sdcard_mem2block_fifo_fifo_out_payload_data;
reg     [9:0] sdcard_mem2block_fifo_level0 = 10'd0;
wire    [9:0] sdcard_mem2block_fifo_level1;
reg     [8:0] sdcard_mem2block_fifo_produce = 9'd0;
wire    [8:0] sdcard_mem2block_fifo_rdport_adr;
wire    [9:0] sdcard_mem2block_fifo_rdport_dat_r;
wire          sdcard_mem2block_fifo_rdport_re;
wire          sdcard_mem2block_fifo_re;
reg           sdcard_mem2block_fifo_readable = 1'd0;
reg           sdcard_mem2block_fifo_replace = 1'd0;
wire          sdcard_mem2block_fifo_sink_first;
wire          sdcard_mem2block_fifo_sink_last;
wire    [7:0] sdcard_mem2block_fifo_sink_payload_data;
wire          sdcard_mem2block_fifo_sink_ready;
wire          sdcard_mem2block_fifo_sink_valid;
wire          sdcard_mem2block_fifo_source_first;
wire          sdcard_mem2block_fifo_source_last;
wire    [7:0] sdcard_mem2block_fifo_source_payload_data;
wire          sdcard_mem2block_fifo_source_ready;
wire          sdcard_mem2block_fifo_source_valid;
wire    [9:0] sdcard_mem2block_fifo_syncfifo_din;
wire    [9:0] sdcard_mem2block_fifo_syncfifo_dout;
wire          sdcard_mem2block_fifo_syncfifo_re;
wire          sdcard_mem2block_fifo_syncfifo_readable;
wire          sdcard_mem2block_fifo_syncfifo_we;
wire          sdcard_mem2block_fifo_syncfifo_writable;
reg     [8:0] sdcard_mem2block_fifo_wrport_adr = 9'd0;
wire    [9:0] sdcard_mem2block_fifo_wrport_dat_r;
wire    [9:0] sdcard_mem2block_fifo_wrport_dat_w;
wire          sdcard_mem2block_fifo_wrport_we;
reg           sdcard_mem2block_irq = 1'd0;
wire          sdcard_mem2block_source_source_first;
reg           sdcard_mem2block_source_source_last = 1'd0;
wire    [7:0] sdcard_mem2block_source_source_payload_data;
wire          sdcard_mem2block_source_source_ready;
wire          sdcard_mem2block_source_source_valid;
reg     [1:0] sdmem2blockdma_next_state = 2'd0;
reg     [1:0] sdmem2blockdma_state = 2'd0;
wire          sdpads_clk;
wire          sdpads_cmd_i;
wire          sdpads_cmd_o;
wire          sdpads_cmd_oe;
wire    [3:0] sdpads_data_i;
wire          sdpads_data_i_ce;
wire    [3:0] sdpads_data_o;
wire          sdpads_data_oe;
reg     [2:0] sdphycmdr_next_state = 3'd0;
reg     [2:0] sdphycmdr_state = 3'd0;
reg     [1:0] sdphycmdw_next_state = 2'd0;
reg     [1:0] sdphycmdw_state = 2'd0;
reg     [2:0] sdphydatar_next_state = 3'd0;
reg     [2:0] sdphydatar_state = 3'd0;
reg     [2:0] sdphydataw_next_state = 3'd0;
reg     [2:0] sdphydataw_state = 3'd0;
reg           sdphyinit_next_state = 1'd0;
reg           sdphyinit_state = 1'd0;
reg           shared_ack = 1'd0;
wire   [31:0] shared_adr;
wire    [1:0] shared_bte;
wire    [2:0] shared_cti;
wire          shared_cyc;
reg    [31:0] shared_dat_r = 32'd0;
wire   [31:0] shared_dat_w;
wire          shared_err;
wire    [3:0] shared_sel;
wire          shared_stb;
wire          shared_we;
reg     [5:0] slave_sel = 6'd0;
reg     [5:0] slave_sel_r = 6'd0;
reg           soclinux_aborted = 1'd0;
reg           soclinux_aborted_litedramwishbone2native_next_value = 1'd0;
reg           soclinux_aborted_litedramwishbone2native_next_value_ce = 1'd0;
reg           soclinux_bankmachine0_auto_precharge = 1'd0;
reg    [13:0] soclinux_bankmachine0_cmd_payload_a = 14'd0;
wire    [2:0] soclinux_bankmachine0_cmd_payload_ba;
reg           soclinux_bankmachine0_cmd_payload_cas = 1'd0;
reg           soclinux_bankmachine0_cmd_payload_is_cmd = 1'd0;
reg           soclinux_bankmachine0_cmd_payload_is_read = 1'd0;
reg           soclinux_bankmachine0_cmd_payload_is_write = 1'd0;
reg           soclinux_bankmachine0_cmd_payload_ras = 1'd0;
reg           soclinux_bankmachine0_cmd_payload_we = 1'd0;
reg           soclinux_bankmachine0_cmd_ready = 1'd0;
reg           soclinux_bankmachine0_cmd_valid = 1'd0;
reg     [2:0] soclinux_bankmachine0_consume = 3'd0;
wire          soclinux_bankmachine0_do_read;
wire          soclinux_bankmachine0_fifo_in_first;
wire          soclinux_bankmachine0_fifo_in_last;
wire   [20:0] soclinux_bankmachine0_fifo_in_payload_addr;
wire          soclinux_bankmachine0_fifo_in_payload_we;
wire          soclinux_bankmachine0_fifo_out_first;
wire          soclinux_bankmachine0_fifo_out_last;
wire   [20:0] soclinux_bankmachine0_fifo_out_payload_addr;
wire          soclinux_bankmachine0_fifo_out_payload_we;
reg     [3:0] soclinux_bankmachine0_level = 4'd0;
wire          soclinux_bankmachine0_pipe_valid_sink_first;
wire          soclinux_bankmachine0_pipe_valid_sink_last;
wire   [20:0] soclinux_bankmachine0_pipe_valid_sink_payload_addr;
wire          soclinux_bankmachine0_pipe_valid_sink_payload_we;
wire          soclinux_bankmachine0_pipe_valid_sink_ready;
wire          soclinux_bankmachine0_pipe_valid_sink_valid;
reg           soclinux_bankmachine0_pipe_valid_source_first = 1'd0;
reg           soclinux_bankmachine0_pipe_valid_source_last = 1'd0;
reg    [20:0] soclinux_bankmachine0_pipe_valid_source_payload_addr = 21'd0;
reg           soclinux_bankmachine0_pipe_valid_source_payload_we = 1'd0;
wire          soclinux_bankmachine0_pipe_valid_source_ready;
reg           soclinux_bankmachine0_pipe_valid_source_valid = 1'd0;
reg     [2:0] soclinux_bankmachine0_produce = 3'd0;
wire    [2:0] soclinux_bankmachine0_rdport_adr;
wire   [23:0] soclinux_bankmachine0_rdport_dat_r;
reg           soclinux_bankmachine0_refresh_gnt = 1'd0;
wire          soclinux_bankmachine0_refresh_req;
reg           soclinux_bankmachine0_replace = 1'd0;
wire   [20:0] soclinux_bankmachine0_req_addr;
wire          soclinux_bankmachine0_req_lock;
reg           soclinux_bankmachine0_req_rdata_valid = 1'd0;
wire          soclinux_bankmachine0_req_ready;
wire          soclinux_bankmachine0_req_valid;
reg           soclinux_bankmachine0_req_wdata_ready = 1'd0;
wire          soclinux_bankmachine0_req_we;
reg    [13:0] soclinux_bankmachine0_row = 14'd0;
reg           soclinux_bankmachine0_row_close = 1'd0;
reg           soclinux_bankmachine0_row_col_n_addr_sel = 1'd0;
wire          soclinux_bankmachine0_row_hit;
reg           soclinux_bankmachine0_row_open = 1'd0;
reg           soclinux_bankmachine0_row_opened = 1'd0;
reg           soclinux_bankmachine0_sink_first = 1'd0;
reg           soclinux_bankmachine0_sink_last = 1'd0;
wire   [20:0] soclinux_bankmachine0_sink_payload_addr;
wire          soclinux_bankmachine0_sink_payload_we;
wire          soclinux_bankmachine0_sink_ready;
wire          soclinux_bankmachine0_sink_sink_first;
wire          soclinux_bankmachine0_sink_sink_last;
wire   [20:0] soclinux_bankmachine0_sink_sink_payload_addr;
wire          soclinux_bankmachine0_sink_sink_payload_we;
wire          soclinux_bankmachine0_sink_sink_ready;
wire          soclinux_bankmachine0_sink_sink_valid;
wire          soclinux_bankmachine0_sink_valid;
wire          soclinux_bankmachine0_source_first;
wire          soclinux_bankmachine0_source_last;
wire   [20:0] soclinux_bankmachine0_source_payload_addr;
wire          soclinux_bankmachine0_source_payload_we;
wire          soclinux_bankmachine0_source_ready;
wire          soclinux_bankmachine0_source_source_first;
wire          soclinux_bankmachine0_source_source_last;
wire   [20:0] soclinux_bankmachine0_source_source_payload_addr;
wire          soclinux_bankmachine0_source_source_payload_we;
wire          soclinux_bankmachine0_source_source_ready;
wire          soclinux_bankmachine0_source_source_valid;
wire          soclinux_bankmachine0_source_valid;
wire   [23:0] soclinux_bankmachine0_syncfifo0_din;
wire   [23:0] soclinux_bankmachine0_syncfifo0_dout;
wire          soclinux_bankmachine0_syncfifo0_re;
wire          soclinux_bankmachine0_syncfifo0_readable;
wire          soclinux_bankmachine0_syncfifo0_we;
wire          soclinux_bankmachine0_syncfifo0_writable;
reg     [2:0] soclinux_bankmachine0_trascon_count = 3'd0;
(* dont_touch = "true" *)
reg           soclinux_bankmachine0_trascon_ready = 1'd0;
wire          soclinux_bankmachine0_trascon_valid;
reg     [2:0] soclinux_bankmachine0_trccon_count = 3'd0;
(* dont_touch = "true" *)
reg           soclinux_bankmachine0_trccon_ready = 1'd0;
wire          soclinux_bankmachine0_trccon_valid;
reg     [2:0] soclinux_bankmachine0_twtpcon_count = 3'd0;
(* dont_touch = "true" *)
reg           soclinux_bankmachine0_twtpcon_ready = 1'd0;
wire          soclinux_bankmachine0_twtpcon_valid;
reg     [2:0] soclinux_bankmachine0_wrport_adr = 3'd0;
wire   [23:0] soclinux_bankmachine0_wrport_dat_r;
wire   [23:0] soclinux_bankmachine0_wrport_dat_w;
wire          soclinux_bankmachine0_wrport_we;
reg           soclinux_bankmachine1_auto_precharge = 1'd0;
reg    [13:0] soclinux_bankmachine1_cmd_payload_a = 14'd0;
wire    [2:0] soclinux_bankmachine1_cmd_payload_ba;
reg           soclinux_bankmachine1_cmd_payload_cas = 1'd0;
reg           soclinux_bankmachine1_cmd_payload_is_cmd = 1'd0;
reg           soclinux_bankmachine1_cmd_payload_is_read = 1'd0;
reg           soclinux_bankmachine1_cmd_payload_is_write = 1'd0;
reg           soclinux_bankmachine1_cmd_payload_ras = 1'd0;
reg           soclinux_bankmachine1_cmd_payload_we = 1'd0;
reg           soclinux_bankmachine1_cmd_ready = 1'd0;
reg           soclinux_bankmachine1_cmd_valid = 1'd0;
reg     [2:0] soclinux_bankmachine1_consume = 3'd0;
wire          soclinux_bankmachine1_do_read;
wire          soclinux_bankmachine1_fifo_in_first;
wire          soclinux_bankmachine1_fifo_in_last;
wire   [20:0] soclinux_bankmachine1_fifo_in_payload_addr;
wire          soclinux_bankmachine1_fifo_in_payload_we;
wire          soclinux_bankmachine1_fifo_out_first;
wire          soclinux_bankmachine1_fifo_out_last;
wire   [20:0] soclinux_bankmachine1_fifo_out_payload_addr;
wire          soclinux_bankmachine1_fifo_out_payload_we;
reg     [3:0] soclinux_bankmachine1_level = 4'd0;
wire          soclinux_bankmachine1_pipe_valid_sink_first;
wire          soclinux_bankmachine1_pipe_valid_sink_last;
wire   [20:0] soclinux_bankmachine1_pipe_valid_sink_payload_addr;
wire          soclinux_bankmachine1_pipe_valid_sink_payload_we;
wire          soclinux_bankmachine1_pipe_valid_sink_ready;
wire          soclinux_bankmachine1_pipe_valid_sink_valid;
reg           soclinux_bankmachine1_pipe_valid_source_first = 1'd0;
reg           soclinux_bankmachine1_pipe_valid_source_last = 1'd0;
reg    [20:0] soclinux_bankmachine1_pipe_valid_source_payload_addr = 21'd0;
reg           soclinux_bankmachine1_pipe_valid_source_payload_we = 1'd0;
wire          soclinux_bankmachine1_pipe_valid_source_ready;
reg           soclinux_bankmachine1_pipe_valid_source_valid = 1'd0;
reg     [2:0] soclinux_bankmachine1_produce = 3'd0;
wire    [2:0] soclinux_bankmachine1_rdport_adr;
wire   [23:0] soclinux_bankmachine1_rdport_dat_r;
reg           soclinux_bankmachine1_refresh_gnt = 1'd0;
wire          soclinux_bankmachine1_refresh_req;
reg           soclinux_bankmachine1_replace = 1'd0;
wire   [20:0] soclinux_bankmachine1_req_addr;
wire          soclinux_bankmachine1_req_lock;
reg           soclinux_bankmachine1_req_rdata_valid = 1'd0;
wire          soclinux_bankmachine1_req_ready;
wire          soclinux_bankmachine1_req_valid;
reg           soclinux_bankmachine1_req_wdata_ready = 1'd0;
wire          soclinux_bankmachine1_req_we;
reg    [13:0] soclinux_bankmachine1_row = 14'd0;
reg           soclinux_bankmachine1_row_close = 1'd0;
reg           soclinux_bankmachine1_row_col_n_addr_sel = 1'd0;
wire          soclinux_bankmachine1_row_hit;
reg           soclinux_bankmachine1_row_open = 1'd0;
reg           soclinux_bankmachine1_row_opened = 1'd0;
reg           soclinux_bankmachine1_sink_first = 1'd0;
reg           soclinux_bankmachine1_sink_last = 1'd0;
wire   [20:0] soclinux_bankmachine1_sink_payload_addr;
wire          soclinux_bankmachine1_sink_payload_we;
wire          soclinux_bankmachine1_sink_ready;
wire          soclinux_bankmachine1_sink_sink_first;
wire          soclinux_bankmachine1_sink_sink_last;
wire   [20:0] soclinux_bankmachine1_sink_sink_payload_addr;
wire          soclinux_bankmachine1_sink_sink_payload_we;
wire          soclinux_bankmachine1_sink_sink_ready;
wire          soclinux_bankmachine1_sink_sink_valid;
wire          soclinux_bankmachine1_sink_valid;
wire          soclinux_bankmachine1_source_first;
wire          soclinux_bankmachine1_source_last;
wire   [20:0] soclinux_bankmachine1_source_payload_addr;
wire          soclinux_bankmachine1_source_payload_we;
wire          soclinux_bankmachine1_source_ready;
wire          soclinux_bankmachine1_source_source_first;
wire          soclinux_bankmachine1_source_source_last;
wire   [20:0] soclinux_bankmachine1_source_source_payload_addr;
wire          soclinux_bankmachine1_source_source_payload_we;
wire          soclinux_bankmachine1_source_source_ready;
wire          soclinux_bankmachine1_source_source_valid;
wire          soclinux_bankmachine1_source_valid;
wire   [23:0] soclinux_bankmachine1_syncfifo1_din;
wire   [23:0] soclinux_bankmachine1_syncfifo1_dout;
wire          soclinux_bankmachine1_syncfifo1_re;
wire          soclinux_bankmachine1_syncfifo1_readable;
wire          soclinux_bankmachine1_syncfifo1_we;
wire          soclinux_bankmachine1_syncfifo1_writable;
reg     [2:0] soclinux_bankmachine1_trascon_count = 3'd0;
(* dont_touch = "true" *)
reg           soclinux_bankmachine1_trascon_ready = 1'd0;
wire          soclinux_bankmachine1_trascon_valid;
reg     [2:0] soclinux_bankmachine1_trccon_count = 3'd0;
(* dont_touch = "true" *)
reg           soclinux_bankmachine1_trccon_ready = 1'd0;
wire          soclinux_bankmachine1_trccon_valid;
reg     [2:0] soclinux_bankmachine1_twtpcon_count = 3'd0;
(* dont_touch = "true" *)
reg           soclinux_bankmachine1_twtpcon_ready = 1'd0;
wire          soclinux_bankmachine1_twtpcon_valid;
reg     [2:0] soclinux_bankmachine1_wrport_adr = 3'd0;
wire   [23:0] soclinux_bankmachine1_wrport_dat_r;
wire   [23:0] soclinux_bankmachine1_wrport_dat_w;
wire          soclinux_bankmachine1_wrport_we;
reg           soclinux_bankmachine2_auto_precharge = 1'd0;
reg    [13:0] soclinux_bankmachine2_cmd_payload_a = 14'd0;
wire    [2:0] soclinux_bankmachine2_cmd_payload_ba;
reg           soclinux_bankmachine2_cmd_payload_cas = 1'd0;
reg           soclinux_bankmachine2_cmd_payload_is_cmd = 1'd0;
reg           soclinux_bankmachine2_cmd_payload_is_read = 1'd0;
reg           soclinux_bankmachine2_cmd_payload_is_write = 1'd0;
reg           soclinux_bankmachine2_cmd_payload_ras = 1'd0;
reg           soclinux_bankmachine2_cmd_payload_we = 1'd0;
reg           soclinux_bankmachine2_cmd_ready = 1'd0;
reg           soclinux_bankmachine2_cmd_valid = 1'd0;
reg     [2:0] soclinux_bankmachine2_consume = 3'd0;
wire          soclinux_bankmachine2_do_read;
wire          soclinux_bankmachine2_fifo_in_first;
wire          soclinux_bankmachine2_fifo_in_last;
wire   [20:0] soclinux_bankmachine2_fifo_in_payload_addr;
wire          soclinux_bankmachine2_fifo_in_payload_we;
wire          soclinux_bankmachine2_fifo_out_first;
wire          soclinux_bankmachine2_fifo_out_last;
wire   [20:0] soclinux_bankmachine2_fifo_out_payload_addr;
wire          soclinux_bankmachine2_fifo_out_payload_we;
reg     [3:0] soclinux_bankmachine2_level = 4'd0;
wire          soclinux_bankmachine2_pipe_valid_sink_first;
wire          soclinux_bankmachine2_pipe_valid_sink_last;
wire   [20:0] soclinux_bankmachine2_pipe_valid_sink_payload_addr;
wire          soclinux_bankmachine2_pipe_valid_sink_payload_we;
wire          soclinux_bankmachine2_pipe_valid_sink_ready;
wire          soclinux_bankmachine2_pipe_valid_sink_valid;
reg           soclinux_bankmachine2_pipe_valid_source_first = 1'd0;
reg           soclinux_bankmachine2_pipe_valid_source_last = 1'd0;
reg    [20:0] soclinux_bankmachine2_pipe_valid_source_payload_addr = 21'd0;
reg           soclinux_bankmachine2_pipe_valid_source_payload_we = 1'd0;
wire          soclinux_bankmachine2_pipe_valid_source_ready;
reg           soclinux_bankmachine2_pipe_valid_source_valid = 1'd0;
reg     [2:0] soclinux_bankmachine2_produce = 3'd0;
wire    [2:0] soclinux_bankmachine2_rdport_adr;
wire   [23:0] soclinux_bankmachine2_rdport_dat_r;
reg           soclinux_bankmachine2_refresh_gnt = 1'd0;
wire          soclinux_bankmachine2_refresh_req;
reg           soclinux_bankmachine2_replace = 1'd0;
wire   [20:0] soclinux_bankmachine2_req_addr;
wire          soclinux_bankmachine2_req_lock;
reg           soclinux_bankmachine2_req_rdata_valid = 1'd0;
wire          soclinux_bankmachine2_req_ready;
wire          soclinux_bankmachine2_req_valid;
reg           soclinux_bankmachine2_req_wdata_ready = 1'd0;
wire          soclinux_bankmachine2_req_we;
reg    [13:0] soclinux_bankmachine2_row = 14'd0;
reg           soclinux_bankmachine2_row_close = 1'd0;
reg           soclinux_bankmachine2_row_col_n_addr_sel = 1'd0;
wire          soclinux_bankmachine2_row_hit;
reg           soclinux_bankmachine2_row_open = 1'd0;
reg           soclinux_bankmachine2_row_opened = 1'd0;
reg           soclinux_bankmachine2_sink_first = 1'd0;
reg           soclinux_bankmachine2_sink_last = 1'd0;
wire   [20:0] soclinux_bankmachine2_sink_payload_addr;
wire          soclinux_bankmachine2_sink_payload_we;
wire          soclinux_bankmachine2_sink_ready;
wire          soclinux_bankmachine2_sink_sink_first;
wire          soclinux_bankmachine2_sink_sink_last;
wire   [20:0] soclinux_bankmachine2_sink_sink_payload_addr;
wire          soclinux_bankmachine2_sink_sink_payload_we;
wire          soclinux_bankmachine2_sink_sink_ready;
wire          soclinux_bankmachine2_sink_sink_valid;
wire          soclinux_bankmachine2_sink_valid;
wire          soclinux_bankmachine2_source_first;
wire          soclinux_bankmachine2_source_last;
wire   [20:0] soclinux_bankmachine2_source_payload_addr;
wire          soclinux_bankmachine2_source_payload_we;
wire          soclinux_bankmachine2_source_ready;
wire          soclinux_bankmachine2_source_source_first;
wire          soclinux_bankmachine2_source_source_last;
wire   [20:0] soclinux_bankmachine2_source_source_payload_addr;
wire          soclinux_bankmachine2_source_source_payload_we;
wire          soclinux_bankmachine2_source_source_ready;
wire          soclinux_bankmachine2_source_source_valid;
wire          soclinux_bankmachine2_source_valid;
wire   [23:0] soclinux_bankmachine2_syncfifo2_din;
wire   [23:0] soclinux_bankmachine2_syncfifo2_dout;
wire          soclinux_bankmachine2_syncfifo2_re;
wire          soclinux_bankmachine2_syncfifo2_readable;
wire          soclinux_bankmachine2_syncfifo2_we;
wire          soclinux_bankmachine2_syncfifo2_writable;
reg     [2:0] soclinux_bankmachine2_trascon_count = 3'd0;
(* dont_touch = "true" *)
reg           soclinux_bankmachine2_trascon_ready = 1'd0;
wire          soclinux_bankmachine2_trascon_valid;
reg     [2:0] soclinux_bankmachine2_trccon_count = 3'd0;
(* dont_touch = "true" *)
reg           soclinux_bankmachine2_trccon_ready = 1'd0;
wire          soclinux_bankmachine2_trccon_valid;
reg     [2:0] soclinux_bankmachine2_twtpcon_count = 3'd0;
(* dont_touch = "true" *)
reg           soclinux_bankmachine2_twtpcon_ready = 1'd0;
wire          soclinux_bankmachine2_twtpcon_valid;
reg     [2:0] soclinux_bankmachine2_wrport_adr = 3'd0;
wire   [23:0] soclinux_bankmachine2_wrport_dat_r;
wire   [23:0] soclinux_bankmachine2_wrport_dat_w;
wire          soclinux_bankmachine2_wrport_we;
reg           soclinux_bankmachine3_auto_precharge = 1'd0;
reg    [13:0] soclinux_bankmachine3_cmd_payload_a = 14'd0;
wire    [2:0] soclinux_bankmachine3_cmd_payload_ba;
reg           soclinux_bankmachine3_cmd_payload_cas = 1'd0;
reg           soclinux_bankmachine3_cmd_payload_is_cmd = 1'd0;
reg           soclinux_bankmachine3_cmd_payload_is_read = 1'd0;
reg           soclinux_bankmachine3_cmd_payload_is_write = 1'd0;
reg           soclinux_bankmachine3_cmd_payload_ras = 1'd0;
reg           soclinux_bankmachine3_cmd_payload_we = 1'd0;
reg           soclinux_bankmachine3_cmd_ready = 1'd0;
reg           soclinux_bankmachine3_cmd_valid = 1'd0;
reg     [2:0] soclinux_bankmachine3_consume = 3'd0;
wire          soclinux_bankmachine3_do_read;
wire          soclinux_bankmachine3_fifo_in_first;
wire          soclinux_bankmachine3_fifo_in_last;
wire   [20:0] soclinux_bankmachine3_fifo_in_payload_addr;
wire          soclinux_bankmachine3_fifo_in_payload_we;
wire          soclinux_bankmachine3_fifo_out_first;
wire          soclinux_bankmachine3_fifo_out_last;
wire   [20:0] soclinux_bankmachine3_fifo_out_payload_addr;
wire          soclinux_bankmachine3_fifo_out_payload_we;
reg     [3:0] soclinux_bankmachine3_level = 4'd0;
wire          soclinux_bankmachine3_pipe_valid_sink_first;
wire          soclinux_bankmachine3_pipe_valid_sink_last;
wire   [20:0] soclinux_bankmachine3_pipe_valid_sink_payload_addr;
wire          soclinux_bankmachine3_pipe_valid_sink_payload_we;
wire          soclinux_bankmachine3_pipe_valid_sink_ready;
wire          soclinux_bankmachine3_pipe_valid_sink_valid;
reg           soclinux_bankmachine3_pipe_valid_source_first = 1'd0;
reg           soclinux_bankmachine3_pipe_valid_source_last = 1'd0;
reg    [20:0] soclinux_bankmachine3_pipe_valid_source_payload_addr = 21'd0;
reg           soclinux_bankmachine3_pipe_valid_source_payload_we = 1'd0;
wire          soclinux_bankmachine3_pipe_valid_source_ready;
reg           soclinux_bankmachine3_pipe_valid_source_valid = 1'd0;
reg     [2:0] soclinux_bankmachine3_produce = 3'd0;
wire    [2:0] soclinux_bankmachine3_rdport_adr;
wire   [23:0] soclinux_bankmachine3_rdport_dat_r;
reg           soclinux_bankmachine3_refresh_gnt = 1'd0;
wire          soclinux_bankmachine3_refresh_req;
reg           soclinux_bankmachine3_replace = 1'd0;
wire   [20:0] soclinux_bankmachine3_req_addr;
wire          soclinux_bankmachine3_req_lock;
reg           soclinux_bankmachine3_req_rdata_valid = 1'd0;
wire          soclinux_bankmachine3_req_ready;
wire          soclinux_bankmachine3_req_valid;
reg           soclinux_bankmachine3_req_wdata_ready = 1'd0;
wire          soclinux_bankmachine3_req_we;
reg    [13:0] soclinux_bankmachine3_row = 14'd0;
reg           soclinux_bankmachine3_row_close = 1'd0;
reg           soclinux_bankmachine3_row_col_n_addr_sel = 1'd0;
wire          soclinux_bankmachine3_row_hit;
reg           soclinux_bankmachine3_row_open = 1'd0;
reg           soclinux_bankmachine3_row_opened = 1'd0;
reg           soclinux_bankmachine3_sink_first = 1'd0;
reg           soclinux_bankmachine3_sink_last = 1'd0;
wire   [20:0] soclinux_bankmachine3_sink_payload_addr;
wire          soclinux_bankmachine3_sink_payload_we;
wire          soclinux_bankmachine3_sink_ready;
wire          soclinux_bankmachine3_sink_sink_first;
wire          soclinux_bankmachine3_sink_sink_last;
wire   [20:0] soclinux_bankmachine3_sink_sink_payload_addr;
wire          soclinux_bankmachine3_sink_sink_payload_we;
wire          soclinux_bankmachine3_sink_sink_ready;
wire          soclinux_bankmachine3_sink_sink_valid;
wire          soclinux_bankmachine3_sink_valid;
wire          soclinux_bankmachine3_source_first;
wire          soclinux_bankmachine3_source_last;
wire   [20:0] soclinux_bankmachine3_source_payload_addr;
wire          soclinux_bankmachine3_source_payload_we;
wire          soclinux_bankmachine3_source_ready;
wire          soclinux_bankmachine3_source_source_first;
wire          soclinux_bankmachine3_source_source_last;
wire   [20:0] soclinux_bankmachine3_source_source_payload_addr;
wire          soclinux_bankmachine3_source_source_payload_we;
wire          soclinux_bankmachine3_source_source_ready;
wire          soclinux_bankmachine3_source_source_valid;
wire          soclinux_bankmachine3_source_valid;
wire   [23:0] soclinux_bankmachine3_syncfifo3_din;
wire   [23:0] soclinux_bankmachine3_syncfifo3_dout;
wire          soclinux_bankmachine3_syncfifo3_re;
wire          soclinux_bankmachine3_syncfifo3_readable;
wire          soclinux_bankmachine3_syncfifo3_we;
wire          soclinux_bankmachine3_syncfifo3_writable;
reg     [2:0] soclinux_bankmachine3_trascon_count = 3'd0;
(* dont_touch = "true" *)
reg           soclinux_bankmachine3_trascon_ready = 1'd0;
wire          soclinux_bankmachine3_trascon_valid;
reg     [2:0] soclinux_bankmachine3_trccon_count = 3'd0;
(* dont_touch = "true" *)
reg           soclinux_bankmachine3_trccon_ready = 1'd0;
wire          soclinux_bankmachine3_trccon_valid;
reg     [2:0] soclinux_bankmachine3_twtpcon_count = 3'd0;
(* dont_touch = "true" *)
reg           soclinux_bankmachine3_twtpcon_ready = 1'd0;
wire          soclinux_bankmachine3_twtpcon_valid;
reg     [2:0] soclinux_bankmachine3_wrport_adr = 3'd0;
wire   [23:0] soclinux_bankmachine3_wrport_dat_r;
wire   [23:0] soclinux_bankmachine3_wrport_dat_w;
wire          soclinux_bankmachine3_wrport_we;
reg           soclinux_bankmachine4_auto_precharge = 1'd0;
reg    [13:0] soclinux_bankmachine4_cmd_payload_a = 14'd0;
wire    [2:0] soclinux_bankmachine4_cmd_payload_ba;
reg           soclinux_bankmachine4_cmd_payload_cas = 1'd0;
reg           soclinux_bankmachine4_cmd_payload_is_cmd = 1'd0;
reg           soclinux_bankmachine4_cmd_payload_is_read = 1'd0;
reg           soclinux_bankmachine4_cmd_payload_is_write = 1'd0;
reg           soclinux_bankmachine4_cmd_payload_ras = 1'd0;
reg           soclinux_bankmachine4_cmd_payload_we = 1'd0;
reg           soclinux_bankmachine4_cmd_ready = 1'd0;
reg           soclinux_bankmachine4_cmd_valid = 1'd0;
reg     [2:0] soclinux_bankmachine4_consume = 3'd0;
wire          soclinux_bankmachine4_do_read;
wire          soclinux_bankmachine4_fifo_in_first;
wire          soclinux_bankmachine4_fifo_in_last;
wire   [20:0] soclinux_bankmachine4_fifo_in_payload_addr;
wire          soclinux_bankmachine4_fifo_in_payload_we;
wire          soclinux_bankmachine4_fifo_out_first;
wire          soclinux_bankmachine4_fifo_out_last;
wire   [20:0] soclinux_bankmachine4_fifo_out_payload_addr;
wire          soclinux_bankmachine4_fifo_out_payload_we;
reg     [3:0] soclinux_bankmachine4_level = 4'd0;
wire          soclinux_bankmachine4_pipe_valid_sink_first;
wire          soclinux_bankmachine4_pipe_valid_sink_last;
wire   [20:0] soclinux_bankmachine4_pipe_valid_sink_payload_addr;
wire          soclinux_bankmachine4_pipe_valid_sink_payload_we;
wire          soclinux_bankmachine4_pipe_valid_sink_ready;
wire          soclinux_bankmachine4_pipe_valid_sink_valid;
reg           soclinux_bankmachine4_pipe_valid_source_first = 1'd0;
reg           soclinux_bankmachine4_pipe_valid_source_last = 1'd0;
reg    [20:0] soclinux_bankmachine4_pipe_valid_source_payload_addr = 21'd0;
reg           soclinux_bankmachine4_pipe_valid_source_payload_we = 1'd0;
wire          soclinux_bankmachine4_pipe_valid_source_ready;
reg           soclinux_bankmachine4_pipe_valid_source_valid = 1'd0;
reg     [2:0] soclinux_bankmachine4_produce = 3'd0;
wire    [2:0] soclinux_bankmachine4_rdport_adr;
wire   [23:0] soclinux_bankmachine4_rdport_dat_r;
reg           soclinux_bankmachine4_refresh_gnt = 1'd0;
wire          soclinux_bankmachine4_refresh_req;
reg           soclinux_bankmachine4_replace = 1'd0;
wire   [20:0] soclinux_bankmachine4_req_addr;
wire          soclinux_bankmachine4_req_lock;
reg           soclinux_bankmachine4_req_rdata_valid = 1'd0;
wire          soclinux_bankmachine4_req_ready;
wire          soclinux_bankmachine4_req_valid;
reg           soclinux_bankmachine4_req_wdata_ready = 1'd0;
wire          soclinux_bankmachine4_req_we;
reg    [13:0] soclinux_bankmachine4_row = 14'd0;
reg           soclinux_bankmachine4_row_close = 1'd0;
reg           soclinux_bankmachine4_row_col_n_addr_sel = 1'd0;
wire          soclinux_bankmachine4_row_hit;
reg           soclinux_bankmachine4_row_open = 1'd0;
reg           soclinux_bankmachine4_row_opened = 1'd0;
reg           soclinux_bankmachine4_sink_first = 1'd0;
reg           soclinux_bankmachine4_sink_last = 1'd0;
wire   [20:0] soclinux_bankmachine4_sink_payload_addr;
wire          soclinux_bankmachine4_sink_payload_we;
wire          soclinux_bankmachine4_sink_ready;
wire          soclinux_bankmachine4_sink_sink_first;
wire          soclinux_bankmachine4_sink_sink_last;
wire   [20:0] soclinux_bankmachine4_sink_sink_payload_addr;
wire          soclinux_bankmachine4_sink_sink_payload_we;
wire          soclinux_bankmachine4_sink_sink_ready;
wire          soclinux_bankmachine4_sink_sink_valid;
wire          soclinux_bankmachine4_sink_valid;
wire          soclinux_bankmachine4_source_first;
wire          soclinux_bankmachine4_source_last;
wire   [20:0] soclinux_bankmachine4_source_payload_addr;
wire          soclinux_bankmachine4_source_payload_we;
wire          soclinux_bankmachine4_source_ready;
wire          soclinux_bankmachine4_source_source_first;
wire          soclinux_bankmachine4_source_source_last;
wire   [20:0] soclinux_bankmachine4_source_source_payload_addr;
wire          soclinux_bankmachine4_source_source_payload_we;
wire          soclinux_bankmachine4_source_source_ready;
wire          soclinux_bankmachine4_source_source_valid;
wire          soclinux_bankmachine4_source_valid;
wire   [23:0] soclinux_bankmachine4_syncfifo4_din;
wire   [23:0] soclinux_bankmachine4_syncfifo4_dout;
wire          soclinux_bankmachine4_syncfifo4_re;
wire          soclinux_bankmachine4_syncfifo4_readable;
wire          soclinux_bankmachine4_syncfifo4_we;
wire          soclinux_bankmachine4_syncfifo4_writable;
reg     [2:0] soclinux_bankmachine4_trascon_count = 3'd0;
(* dont_touch = "true" *)
reg           soclinux_bankmachine4_trascon_ready = 1'd0;
wire          soclinux_bankmachine4_trascon_valid;
reg     [2:0] soclinux_bankmachine4_trccon_count = 3'd0;
(* dont_touch = "true" *)
reg           soclinux_bankmachine4_trccon_ready = 1'd0;
wire          soclinux_bankmachine4_trccon_valid;
reg     [2:0] soclinux_bankmachine4_twtpcon_count = 3'd0;
(* dont_touch = "true" *)
reg           soclinux_bankmachine4_twtpcon_ready = 1'd0;
wire          soclinux_bankmachine4_twtpcon_valid;
reg     [2:0] soclinux_bankmachine4_wrport_adr = 3'd0;
wire   [23:0] soclinux_bankmachine4_wrport_dat_r;
wire   [23:0] soclinux_bankmachine4_wrport_dat_w;
wire          soclinux_bankmachine4_wrport_we;
reg           soclinux_bankmachine5_auto_precharge = 1'd0;
reg    [13:0] soclinux_bankmachine5_cmd_payload_a = 14'd0;
wire    [2:0] soclinux_bankmachine5_cmd_payload_ba;
reg           soclinux_bankmachine5_cmd_payload_cas = 1'd0;
reg           soclinux_bankmachine5_cmd_payload_is_cmd = 1'd0;
reg           soclinux_bankmachine5_cmd_payload_is_read = 1'd0;
reg           soclinux_bankmachine5_cmd_payload_is_write = 1'd0;
reg           soclinux_bankmachine5_cmd_payload_ras = 1'd0;
reg           soclinux_bankmachine5_cmd_payload_we = 1'd0;
reg           soclinux_bankmachine5_cmd_ready = 1'd0;
reg           soclinux_bankmachine5_cmd_valid = 1'd0;
reg     [2:0] soclinux_bankmachine5_consume = 3'd0;
wire          soclinux_bankmachine5_do_read;
wire          soclinux_bankmachine5_fifo_in_first;
wire          soclinux_bankmachine5_fifo_in_last;
wire   [20:0] soclinux_bankmachine5_fifo_in_payload_addr;
wire          soclinux_bankmachine5_fifo_in_payload_we;
wire          soclinux_bankmachine5_fifo_out_first;
wire          soclinux_bankmachine5_fifo_out_last;
wire   [20:0] soclinux_bankmachine5_fifo_out_payload_addr;
wire          soclinux_bankmachine5_fifo_out_payload_we;
reg     [3:0] soclinux_bankmachine5_level = 4'd0;
wire          soclinux_bankmachine5_pipe_valid_sink_first;
wire          soclinux_bankmachine5_pipe_valid_sink_last;
wire   [20:0] soclinux_bankmachine5_pipe_valid_sink_payload_addr;
wire          soclinux_bankmachine5_pipe_valid_sink_payload_we;
wire          soclinux_bankmachine5_pipe_valid_sink_ready;
wire          soclinux_bankmachine5_pipe_valid_sink_valid;
reg           soclinux_bankmachine5_pipe_valid_source_first = 1'd0;
reg           soclinux_bankmachine5_pipe_valid_source_last = 1'd0;
reg    [20:0] soclinux_bankmachine5_pipe_valid_source_payload_addr = 21'd0;
reg           soclinux_bankmachine5_pipe_valid_source_payload_we = 1'd0;
wire          soclinux_bankmachine5_pipe_valid_source_ready;
reg           soclinux_bankmachine5_pipe_valid_source_valid = 1'd0;
reg     [2:0] soclinux_bankmachine5_produce = 3'd0;
wire    [2:0] soclinux_bankmachine5_rdport_adr;
wire   [23:0] soclinux_bankmachine5_rdport_dat_r;
reg           soclinux_bankmachine5_refresh_gnt = 1'd0;
wire          soclinux_bankmachine5_refresh_req;
reg           soclinux_bankmachine5_replace = 1'd0;
wire   [20:0] soclinux_bankmachine5_req_addr;
wire          soclinux_bankmachine5_req_lock;
reg           soclinux_bankmachine5_req_rdata_valid = 1'd0;
wire          soclinux_bankmachine5_req_ready;
wire          soclinux_bankmachine5_req_valid;
reg           soclinux_bankmachine5_req_wdata_ready = 1'd0;
wire          soclinux_bankmachine5_req_we;
reg    [13:0] soclinux_bankmachine5_row = 14'd0;
reg           soclinux_bankmachine5_row_close = 1'd0;
reg           soclinux_bankmachine5_row_col_n_addr_sel = 1'd0;
wire          soclinux_bankmachine5_row_hit;
reg           soclinux_bankmachine5_row_open = 1'd0;
reg           soclinux_bankmachine5_row_opened = 1'd0;
reg           soclinux_bankmachine5_sink_first = 1'd0;
reg           soclinux_bankmachine5_sink_last = 1'd0;
wire   [20:0] soclinux_bankmachine5_sink_payload_addr;
wire          soclinux_bankmachine5_sink_payload_we;
wire          soclinux_bankmachine5_sink_ready;
wire          soclinux_bankmachine5_sink_sink_first;
wire          soclinux_bankmachine5_sink_sink_last;
wire   [20:0] soclinux_bankmachine5_sink_sink_payload_addr;
wire          soclinux_bankmachine5_sink_sink_payload_we;
wire          soclinux_bankmachine5_sink_sink_ready;
wire          soclinux_bankmachine5_sink_sink_valid;
wire          soclinux_bankmachine5_sink_valid;
wire          soclinux_bankmachine5_source_first;
wire          soclinux_bankmachine5_source_last;
wire   [20:0] soclinux_bankmachine5_source_payload_addr;
wire          soclinux_bankmachine5_source_payload_we;
wire          soclinux_bankmachine5_source_ready;
wire          soclinux_bankmachine5_source_source_first;
wire          soclinux_bankmachine5_source_source_last;
wire   [20:0] soclinux_bankmachine5_source_source_payload_addr;
wire          soclinux_bankmachine5_source_source_payload_we;
wire          soclinux_bankmachine5_source_source_ready;
wire          soclinux_bankmachine5_source_source_valid;
wire          soclinux_bankmachine5_source_valid;
wire   [23:0] soclinux_bankmachine5_syncfifo5_din;
wire   [23:0] soclinux_bankmachine5_syncfifo5_dout;
wire          soclinux_bankmachine5_syncfifo5_re;
wire          soclinux_bankmachine5_syncfifo5_readable;
wire          soclinux_bankmachine5_syncfifo5_we;
wire          soclinux_bankmachine5_syncfifo5_writable;
reg     [2:0] soclinux_bankmachine5_trascon_count = 3'd0;
(* dont_touch = "true" *)
reg           soclinux_bankmachine5_trascon_ready = 1'd0;
wire          soclinux_bankmachine5_trascon_valid;
reg     [2:0] soclinux_bankmachine5_trccon_count = 3'd0;
(* dont_touch = "true" *)
reg           soclinux_bankmachine5_trccon_ready = 1'd0;
wire          soclinux_bankmachine5_trccon_valid;
reg     [2:0] soclinux_bankmachine5_twtpcon_count = 3'd0;
(* dont_touch = "true" *)
reg           soclinux_bankmachine5_twtpcon_ready = 1'd0;
wire          soclinux_bankmachine5_twtpcon_valid;
reg     [2:0] soclinux_bankmachine5_wrport_adr = 3'd0;
wire   [23:0] soclinux_bankmachine5_wrport_dat_r;
wire   [23:0] soclinux_bankmachine5_wrport_dat_w;
wire          soclinux_bankmachine5_wrport_we;
reg           soclinux_bankmachine6_auto_precharge = 1'd0;
reg    [13:0] soclinux_bankmachine6_cmd_payload_a = 14'd0;
wire    [2:0] soclinux_bankmachine6_cmd_payload_ba;
reg           soclinux_bankmachine6_cmd_payload_cas = 1'd0;
reg           soclinux_bankmachine6_cmd_payload_is_cmd = 1'd0;
reg           soclinux_bankmachine6_cmd_payload_is_read = 1'd0;
reg           soclinux_bankmachine6_cmd_payload_is_write = 1'd0;
reg           soclinux_bankmachine6_cmd_payload_ras = 1'd0;
reg           soclinux_bankmachine6_cmd_payload_we = 1'd0;
reg           soclinux_bankmachine6_cmd_ready = 1'd0;
reg           soclinux_bankmachine6_cmd_valid = 1'd0;
reg     [2:0] soclinux_bankmachine6_consume = 3'd0;
wire          soclinux_bankmachine6_do_read;
wire          soclinux_bankmachine6_fifo_in_first;
wire          soclinux_bankmachine6_fifo_in_last;
wire   [20:0] soclinux_bankmachine6_fifo_in_payload_addr;
wire          soclinux_bankmachine6_fifo_in_payload_we;
wire          soclinux_bankmachine6_fifo_out_first;
wire          soclinux_bankmachine6_fifo_out_last;
wire   [20:0] soclinux_bankmachine6_fifo_out_payload_addr;
wire          soclinux_bankmachine6_fifo_out_payload_we;
reg     [3:0] soclinux_bankmachine6_level = 4'd0;
wire          soclinux_bankmachine6_pipe_valid_sink_first;
wire          soclinux_bankmachine6_pipe_valid_sink_last;
wire   [20:0] soclinux_bankmachine6_pipe_valid_sink_payload_addr;
wire          soclinux_bankmachine6_pipe_valid_sink_payload_we;
wire          soclinux_bankmachine6_pipe_valid_sink_ready;
wire          soclinux_bankmachine6_pipe_valid_sink_valid;
reg           soclinux_bankmachine6_pipe_valid_source_first = 1'd0;
reg           soclinux_bankmachine6_pipe_valid_source_last = 1'd0;
reg    [20:0] soclinux_bankmachine6_pipe_valid_source_payload_addr = 21'd0;
reg           soclinux_bankmachine6_pipe_valid_source_payload_we = 1'd0;
wire          soclinux_bankmachine6_pipe_valid_source_ready;
reg           soclinux_bankmachine6_pipe_valid_source_valid = 1'd0;
reg     [2:0] soclinux_bankmachine6_produce = 3'd0;
wire    [2:0] soclinux_bankmachine6_rdport_adr;
wire   [23:0] soclinux_bankmachine6_rdport_dat_r;
reg           soclinux_bankmachine6_refresh_gnt = 1'd0;
wire          soclinux_bankmachine6_refresh_req;
reg           soclinux_bankmachine6_replace = 1'd0;
wire   [20:0] soclinux_bankmachine6_req_addr;
wire          soclinux_bankmachine6_req_lock;
reg           soclinux_bankmachine6_req_rdata_valid = 1'd0;
wire          soclinux_bankmachine6_req_ready;
wire          soclinux_bankmachine6_req_valid;
reg           soclinux_bankmachine6_req_wdata_ready = 1'd0;
wire          soclinux_bankmachine6_req_we;
reg    [13:0] soclinux_bankmachine6_row = 14'd0;
reg           soclinux_bankmachine6_row_close = 1'd0;
reg           soclinux_bankmachine6_row_col_n_addr_sel = 1'd0;
wire          soclinux_bankmachine6_row_hit;
reg           soclinux_bankmachine6_row_open = 1'd0;
reg           soclinux_bankmachine6_row_opened = 1'd0;
reg           soclinux_bankmachine6_sink_first = 1'd0;
reg           soclinux_bankmachine6_sink_last = 1'd0;
wire   [20:0] soclinux_bankmachine6_sink_payload_addr;
wire          soclinux_bankmachine6_sink_payload_we;
wire          soclinux_bankmachine6_sink_ready;
wire          soclinux_bankmachine6_sink_sink_first;
wire          soclinux_bankmachine6_sink_sink_last;
wire   [20:0] soclinux_bankmachine6_sink_sink_payload_addr;
wire          soclinux_bankmachine6_sink_sink_payload_we;
wire          soclinux_bankmachine6_sink_sink_ready;
wire          soclinux_bankmachine6_sink_sink_valid;
wire          soclinux_bankmachine6_sink_valid;
wire          soclinux_bankmachine6_source_first;
wire          soclinux_bankmachine6_source_last;
wire   [20:0] soclinux_bankmachine6_source_payload_addr;
wire          soclinux_bankmachine6_source_payload_we;
wire          soclinux_bankmachine6_source_ready;
wire          soclinux_bankmachine6_source_source_first;
wire          soclinux_bankmachine6_source_source_last;
wire   [20:0] soclinux_bankmachine6_source_source_payload_addr;
wire          soclinux_bankmachine6_source_source_payload_we;
wire          soclinux_bankmachine6_source_source_ready;
wire          soclinux_bankmachine6_source_source_valid;
wire          soclinux_bankmachine6_source_valid;
wire   [23:0] soclinux_bankmachine6_syncfifo6_din;
wire   [23:0] soclinux_bankmachine6_syncfifo6_dout;
wire          soclinux_bankmachine6_syncfifo6_re;
wire          soclinux_bankmachine6_syncfifo6_readable;
wire          soclinux_bankmachine6_syncfifo6_we;
wire          soclinux_bankmachine6_syncfifo6_writable;
reg     [2:0] soclinux_bankmachine6_trascon_count = 3'd0;
(* dont_touch = "true" *)
reg           soclinux_bankmachine6_trascon_ready = 1'd0;
wire          soclinux_bankmachine6_trascon_valid;
reg     [2:0] soclinux_bankmachine6_trccon_count = 3'd0;
(* dont_touch = "true" *)
reg           soclinux_bankmachine6_trccon_ready = 1'd0;
wire          soclinux_bankmachine6_trccon_valid;
reg     [2:0] soclinux_bankmachine6_twtpcon_count = 3'd0;
(* dont_touch = "true" *)
reg           soclinux_bankmachine6_twtpcon_ready = 1'd0;
wire          soclinux_bankmachine6_twtpcon_valid;
reg     [2:0] soclinux_bankmachine6_wrport_adr = 3'd0;
wire   [23:0] soclinux_bankmachine6_wrport_dat_r;
wire   [23:0] soclinux_bankmachine6_wrport_dat_w;
wire          soclinux_bankmachine6_wrport_we;
reg           soclinux_bankmachine7_auto_precharge = 1'd0;
reg    [13:0] soclinux_bankmachine7_cmd_payload_a = 14'd0;
wire    [2:0] soclinux_bankmachine7_cmd_payload_ba;
reg           soclinux_bankmachine7_cmd_payload_cas = 1'd0;
reg           soclinux_bankmachine7_cmd_payload_is_cmd = 1'd0;
reg           soclinux_bankmachine7_cmd_payload_is_read = 1'd0;
reg           soclinux_bankmachine7_cmd_payload_is_write = 1'd0;
reg           soclinux_bankmachine7_cmd_payload_ras = 1'd0;
reg           soclinux_bankmachine7_cmd_payload_we = 1'd0;
reg           soclinux_bankmachine7_cmd_ready = 1'd0;
reg           soclinux_bankmachine7_cmd_valid = 1'd0;
reg     [2:0] soclinux_bankmachine7_consume = 3'd0;
wire          soclinux_bankmachine7_do_read;
wire          soclinux_bankmachine7_fifo_in_first;
wire          soclinux_bankmachine7_fifo_in_last;
wire   [20:0] soclinux_bankmachine7_fifo_in_payload_addr;
wire          soclinux_bankmachine7_fifo_in_payload_we;
wire          soclinux_bankmachine7_fifo_out_first;
wire          soclinux_bankmachine7_fifo_out_last;
wire   [20:0] soclinux_bankmachine7_fifo_out_payload_addr;
wire          soclinux_bankmachine7_fifo_out_payload_we;
reg     [3:0] soclinux_bankmachine7_level = 4'd0;
wire          soclinux_bankmachine7_pipe_valid_sink_first;
wire          soclinux_bankmachine7_pipe_valid_sink_last;
wire   [20:0] soclinux_bankmachine7_pipe_valid_sink_payload_addr;
wire          soclinux_bankmachine7_pipe_valid_sink_payload_we;
wire          soclinux_bankmachine7_pipe_valid_sink_ready;
wire          soclinux_bankmachine7_pipe_valid_sink_valid;
reg           soclinux_bankmachine7_pipe_valid_source_first = 1'd0;
reg           soclinux_bankmachine7_pipe_valid_source_last = 1'd0;
reg    [20:0] soclinux_bankmachine7_pipe_valid_source_payload_addr = 21'd0;
reg           soclinux_bankmachine7_pipe_valid_source_payload_we = 1'd0;
wire          soclinux_bankmachine7_pipe_valid_source_ready;
reg           soclinux_bankmachine7_pipe_valid_source_valid = 1'd0;
reg     [2:0] soclinux_bankmachine7_produce = 3'd0;
wire    [2:0] soclinux_bankmachine7_rdport_adr;
wire   [23:0] soclinux_bankmachine7_rdport_dat_r;
reg           soclinux_bankmachine7_refresh_gnt = 1'd0;
wire          soclinux_bankmachine7_refresh_req;
reg           soclinux_bankmachine7_replace = 1'd0;
wire   [20:0] soclinux_bankmachine7_req_addr;
wire          soclinux_bankmachine7_req_lock;
reg           soclinux_bankmachine7_req_rdata_valid = 1'd0;
wire          soclinux_bankmachine7_req_ready;
wire          soclinux_bankmachine7_req_valid;
reg           soclinux_bankmachine7_req_wdata_ready = 1'd0;
wire          soclinux_bankmachine7_req_we;
reg    [13:0] soclinux_bankmachine7_row = 14'd0;
reg           soclinux_bankmachine7_row_close = 1'd0;
reg           soclinux_bankmachine7_row_col_n_addr_sel = 1'd0;
wire          soclinux_bankmachine7_row_hit;
reg           soclinux_bankmachine7_row_open = 1'd0;
reg           soclinux_bankmachine7_row_opened = 1'd0;
reg           soclinux_bankmachine7_sink_first = 1'd0;
reg           soclinux_bankmachine7_sink_last = 1'd0;
wire   [20:0] soclinux_bankmachine7_sink_payload_addr;
wire          soclinux_bankmachine7_sink_payload_we;
wire          soclinux_bankmachine7_sink_ready;
wire          soclinux_bankmachine7_sink_sink_first;
wire          soclinux_bankmachine7_sink_sink_last;
wire   [20:0] soclinux_bankmachine7_sink_sink_payload_addr;
wire          soclinux_bankmachine7_sink_sink_payload_we;
wire          soclinux_bankmachine7_sink_sink_ready;
wire          soclinux_bankmachine7_sink_sink_valid;
wire          soclinux_bankmachine7_sink_valid;
wire          soclinux_bankmachine7_source_first;
wire          soclinux_bankmachine7_source_last;
wire   [20:0] soclinux_bankmachine7_source_payload_addr;
wire          soclinux_bankmachine7_source_payload_we;
wire          soclinux_bankmachine7_source_ready;
wire          soclinux_bankmachine7_source_source_first;
wire          soclinux_bankmachine7_source_source_last;
wire   [20:0] soclinux_bankmachine7_source_source_payload_addr;
wire          soclinux_bankmachine7_source_source_payload_we;
wire          soclinux_bankmachine7_source_source_ready;
wire          soclinux_bankmachine7_source_source_valid;
wire          soclinux_bankmachine7_source_valid;
wire   [23:0] soclinux_bankmachine7_syncfifo7_din;
wire   [23:0] soclinux_bankmachine7_syncfifo7_dout;
wire          soclinux_bankmachine7_syncfifo7_re;
wire          soclinux_bankmachine7_syncfifo7_readable;
wire          soclinux_bankmachine7_syncfifo7_we;
wire          soclinux_bankmachine7_syncfifo7_writable;
reg     [2:0] soclinux_bankmachine7_trascon_count = 3'd0;
(* dont_touch = "true" *)
reg           soclinux_bankmachine7_trascon_ready = 1'd0;
wire          soclinux_bankmachine7_trascon_valid;
reg     [2:0] soclinux_bankmachine7_trccon_count = 3'd0;
(* dont_touch = "true" *)
reg           soclinux_bankmachine7_trccon_ready = 1'd0;
wire          soclinux_bankmachine7_trccon_valid;
reg     [2:0] soclinux_bankmachine7_twtpcon_count = 3'd0;
(* dont_touch = "true" *)
reg           soclinux_bankmachine7_twtpcon_ready = 1'd0;
wire          soclinux_bankmachine7_twtpcon_valid;
reg     [2:0] soclinux_bankmachine7_wrport_adr = 3'd0;
wire   [23:0] soclinux_bankmachine7_wrport_dat_r;
wire   [23:0] soclinux_bankmachine7_wrport_dat_w;
wire          soclinux_bankmachine7_wrport_we;
wire          soclinux_bus_error;
reg    [31:0] soclinux_bus_errors = 32'd0;
reg           soclinux_bus_errors_re = 1'd0;
wire   [31:0] soclinux_bus_errors_status;
wire          soclinux_bus_errors_we;
wire          soclinux_cas_allowed;
wire          soclinux_choose_cmd_ce;
wire   [13:0] soclinux_choose_cmd_cmd_payload_a;
wire    [2:0] soclinux_choose_cmd_cmd_payload_ba;
reg           soclinux_choose_cmd_cmd_payload_cas = 1'd0;
wire          soclinux_choose_cmd_cmd_payload_is_cmd;
wire          soclinux_choose_cmd_cmd_payload_is_read;
wire          soclinux_choose_cmd_cmd_payload_is_write;
reg           soclinux_choose_cmd_cmd_payload_ras = 1'd0;
reg           soclinux_choose_cmd_cmd_payload_we = 1'd0;
reg           soclinux_choose_cmd_cmd_ready = 1'd0;
wire          soclinux_choose_cmd_cmd_valid;
reg     [2:0] soclinux_choose_cmd_grant = 3'd0;
wire    [7:0] soclinux_choose_cmd_request;
reg     [7:0] soclinux_choose_cmd_valids = 8'd0;
reg           soclinux_choose_cmd_want_activates = 1'd0;
reg           soclinux_choose_cmd_want_cmds = 1'd0;
reg           soclinux_choose_cmd_want_reads = 1'd0;
reg           soclinux_choose_cmd_want_writes = 1'd0;
wire          soclinux_choose_req_ce;
wire   [13:0] soclinux_choose_req_cmd_payload_a;
wire    [2:0] soclinux_choose_req_cmd_payload_ba;
reg           soclinux_choose_req_cmd_payload_cas = 1'd0;
wire          soclinux_choose_req_cmd_payload_is_cmd;
wire          soclinux_choose_req_cmd_payload_is_read;
wire          soclinux_choose_req_cmd_payload_is_write;
reg           soclinux_choose_req_cmd_payload_ras = 1'd0;
reg           soclinux_choose_req_cmd_payload_we = 1'd0;
reg           soclinux_choose_req_cmd_ready = 1'd0;
wire          soclinux_choose_req_cmd_valid;
reg     [2:0] soclinux_choose_req_grant = 3'd0;
wire    [7:0] soclinux_choose_req_request;
reg     [7:0] soclinux_choose_req_valids = 8'd0;
reg           soclinux_choose_req_want_activates = 1'd0;
reg           soclinux_choose_req_want_cmds = 1'd0;
reg           soclinux_choose_req_want_reads = 1'd0;
reg           soclinux_choose_req_want_writes = 1'd0;
wire          soclinux_cke;
wire          soclinux_clintbus_ack;
wire   [29:0] soclinux_clintbus_adr;
wire    [1:0] soclinux_clintbus_bte;
wire    [2:0] soclinux_clintbus_cti;
wire          soclinux_clintbus_cyc;
wire   [31:0] soclinux_clintbus_dat_r;
wire   [31:0] soclinux_clintbus_dat_w;
reg           soclinux_clintbus_err = 1'd0;
wire    [3:0] soclinux_clintbus_sel;
wire          soclinux_clintbus_stb;
wire          soclinux_clintbus_we;
reg           soclinux_cmd_last = 1'd0;
reg    [13:0] soclinux_cmd_payload_a = 14'd0;
reg     [2:0] soclinux_cmd_payload_ba = 3'd0;
reg           soclinux_cmd_payload_cas = 1'd0;
reg           soclinux_cmd_payload_is_read = 1'd0;
reg           soclinux_cmd_payload_is_write = 1'd0;
reg           soclinux_cmd_payload_ras = 1'd0;
reg           soclinux_cmd_payload_we = 1'd0;
reg           soclinux_cmd_ready = 1'd0;
reg           soclinux_cmd_valid = 1'd0;
wire          soclinux_cpu_rst;
reg           soclinux_csr_dfi_p0_act_n = 1'd1;
wire   [13:0] soclinux_csr_dfi_p0_address;
wire    [2:0] soclinux_csr_dfi_p0_bank;
reg           soclinux_csr_dfi_p0_cas_n = 1'd1;
reg           soclinux_csr_dfi_p0_cke = 1'd0;
reg           soclinux_csr_dfi_p0_cs_n = 1'd1;
reg           soclinux_csr_dfi_p0_odt = 1'd0;
reg           soclinux_csr_dfi_p0_ras_n = 1'd1;
reg    [63:0] soclinux_csr_dfi_p0_rddata = 64'd0;
wire          soclinux_csr_dfi_p0_rddata_en;
reg           soclinux_csr_dfi_p0_rddata_valid = 1'd0;
wire          soclinux_csr_dfi_p0_reset_n;
reg           soclinux_csr_dfi_p0_we_n = 1'd1;
wire   [63:0] soclinux_csr_dfi_p0_wrdata;
wire          soclinux_csr_dfi_p0_wrdata_en;
wire    [7:0] soclinux_csr_dfi_p0_wrdata_mask;
reg           soclinux_csr_dfi_p1_act_n = 1'd1;
wire   [13:0] soclinux_csr_dfi_p1_address;
wire    [2:0] soclinux_csr_dfi_p1_bank;
reg           soclinux_csr_dfi_p1_cas_n = 1'd1;
reg           soclinux_csr_dfi_p1_cke = 1'd0;
reg           soclinux_csr_dfi_p1_cs_n = 1'd1;
reg           soclinux_csr_dfi_p1_odt = 1'd0;
reg           soclinux_csr_dfi_p1_ras_n = 1'd1;
reg    [63:0] soclinux_csr_dfi_p1_rddata = 64'd0;
wire          soclinux_csr_dfi_p1_rddata_en;
reg           soclinux_csr_dfi_p1_rddata_valid = 1'd0;
wire          soclinux_csr_dfi_p1_reset_n;
reg           soclinux_csr_dfi_p1_we_n = 1'd1;
wire   [63:0] soclinux_csr_dfi_p1_wrdata;
wire          soclinux_csr_dfi_p1_wrdata_en;
wire    [7:0] soclinux_csr_dfi_p1_wrdata_mask;
reg           soclinux_csr_dfi_p2_act_n = 1'd1;
wire   [13:0] soclinux_csr_dfi_p2_address;
wire    [2:0] soclinux_csr_dfi_p2_bank;
reg           soclinux_csr_dfi_p2_cas_n = 1'd1;
reg           soclinux_csr_dfi_p2_cke = 1'd0;
reg           soclinux_csr_dfi_p2_cs_n = 1'd1;
reg           soclinux_csr_dfi_p2_odt = 1'd0;
reg           soclinux_csr_dfi_p2_ras_n = 1'd1;
reg    [63:0] soclinux_csr_dfi_p2_rddata = 64'd0;
wire          soclinux_csr_dfi_p2_rddata_en;
reg           soclinux_csr_dfi_p2_rddata_valid = 1'd0;
wire          soclinux_csr_dfi_p2_reset_n;
reg           soclinux_csr_dfi_p2_we_n = 1'd1;
wire   [63:0] soclinux_csr_dfi_p2_wrdata;
wire          soclinux_csr_dfi_p2_wrdata_en;
wire    [7:0] soclinux_csr_dfi_p2_wrdata_mask;
reg           soclinux_csr_dfi_p3_act_n = 1'd1;
wire   [13:0] soclinux_csr_dfi_p3_address;
wire    [2:0] soclinux_csr_dfi_p3_bank;
reg           soclinux_csr_dfi_p3_cas_n = 1'd1;
reg           soclinux_csr_dfi_p3_cke = 1'd0;
reg           soclinux_csr_dfi_p3_cs_n = 1'd1;
reg           soclinux_csr_dfi_p3_odt = 1'd0;
reg           soclinux_csr_dfi_p3_ras_n = 1'd1;
reg    [63:0] soclinux_csr_dfi_p3_rddata = 64'd0;
wire          soclinux_csr_dfi_p3_rddata_en;
reg           soclinux_csr_dfi_p3_rddata_valid = 1'd0;
wire          soclinux_csr_dfi_p3_reset_n;
reg           soclinux_csr_dfi_p3_we_n = 1'd1;
wire   [63:0] soclinux_csr_dfi_p3_wrdata;
wire          soclinux_csr_dfi_p3_wrdata_en;
wire    [7:0] soclinux_csr_dfi_p3_wrdata_mask;
reg           soclinux_dbus_cmd_first = 1'd0;
reg           soclinux_dbus_cmd_last = 1'd0;
wire   [31:0] soclinux_dbus_cmd_payload_addr;
wire          soclinux_dbus_cmd_payload_we;
wire          soclinux_dbus_cmd_ready;
wire          soclinux_dbus_cmd_valid;
wire          soclinux_dbus_rdata_first;
wire          soclinux_dbus_rdata_last;
wire  [255:0] soclinux_dbus_rdata_payload_data;
wire          soclinux_dbus_rdata_ready;
wire          soclinux_dbus_rdata_valid;
reg           soclinux_dbus_wdata_first = 1'd0;
reg           soclinux_dbus_wdata_last = 1'd0;
wire  [255:0] soclinux_dbus_wdata_payload_data;
wire   [31:0] soclinux_dbus_wdata_payload_we;
wire          soclinux_dbus_wdata_ready;
wire          soclinux_dbus_wdata_valid;
reg           soclinux_dfi_p0_act_n = 1'd1;
reg    [13:0] soclinux_dfi_p0_address = 14'd0;
reg     [2:0] soclinux_dfi_p0_bank = 3'd0;
reg           soclinux_dfi_p0_cas_n = 1'd1;
wire          soclinux_dfi_p0_cke;
reg           soclinux_dfi_p0_cs_n = 1'd1;
wire          soclinux_dfi_p0_odt;
reg           soclinux_dfi_p0_ras_n = 1'd1;
wire   [63:0] soclinux_dfi_p0_rddata;
reg           soclinux_dfi_p0_rddata_en = 1'd0;
wire          soclinux_dfi_p0_rddata_valid;
wire          soclinux_dfi_p0_reset_n;
reg           soclinux_dfi_p0_we_n = 1'd1;
wire   [63:0] soclinux_dfi_p0_wrdata;
reg           soclinux_dfi_p0_wrdata_en = 1'd0;
wire    [7:0] soclinux_dfi_p0_wrdata_mask;
reg           soclinux_dfi_p1_act_n = 1'd1;
reg    [13:0] soclinux_dfi_p1_address = 14'd0;
reg     [2:0] soclinux_dfi_p1_bank = 3'd0;
reg           soclinux_dfi_p1_cas_n = 1'd1;
wire          soclinux_dfi_p1_cke;
reg           soclinux_dfi_p1_cs_n = 1'd1;
wire          soclinux_dfi_p1_odt;
reg           soclinux_dfi_p1_ras_n = 1'd1;
wire   [63:0] soclinux_dfi_p1_rddata;
reg           soclinux_dfi_p1_rddata_en = 1'd0;
wire          soclinux_dfi_p1_rddata_valid;
wire          soclinux_dfi_p1_reset_n;
reg           soclinux_dfi_p1_we_n = 1'd1;
wire   [63:0] soclinux_dfi_p1_wrdata;
reg           soclinux_dfi_p1_wrdata_en = 1'd0;
wire    [7:0] soclinux_dfi_p1_wrdata_mask;
reg           soclinux_dfi_p2_act_n = 1'd1;
reg    [13:0] soclinux_dfi_p2_address = 14'd0;
reg     [2:0] soclinux_dfi_p2_bank = 3'd0;
reg           soclinux_dfi_p2_cas_n = 1'd1;
wire          soclinux_dfi_p2_cke;
reg           soclinux_dfi_p2_cs_n = 1'd1;
wire          soclinux_dfi_p2_odt;
reg           soclinux_dfi_p2_ras_n = 1'd1;
wire   [63:0] soclinux_dfi_p2_rddata;
reg           soclinux_dfi_p2_rddata_en = 1'd0;
wire          soclinux_dfi_p2_rddata_valid;
wire          soclinux_dfi_p2_reset_n;
reg           soclinux_dfi_p2_we_n = 1'd1;
wire   [63:0] soclinux_dfi_p2_wrdata;
reg           soclinux_dfi_p2_wrdata_en = 1'd0;
wire    [7:0] soclinux_dfi_p2_wrdata_mask;
reg           soclinux_dfi_p3_act_n = 1'd1;
reg    [13:0] soclinux_dfi_p3_address = 14'd0;
reg     [2:0] soclinux_dfi_p3_bank = 3'd0;
reg           soclinux_dfi_p3_cas_n = 1'd1;
wire          soclinux_dfi_p3_cke;
reg           soclinux_dfi_p3_cs_n = 1'd1;
wire          soclinux_dfi_p3_odt;
reg           soclinux_dfi_p3_ras_n = 1'd1;
wire   [63:0] soclinux_dfi_p3_rddata;
reg           soclinux_dfi_p3_rddata_en = 1'd0;
wire          soclinux_dfi_p3_rddata_valid;
wire          soclinux_dfi_p3_reset_n;
reg           soclinux_dfi_p3_we_n = 1'd1;
wire   [63:0] soclinux_dfi_p3_wrdata;
reg           soclinux_dfi_p3_wrdata_en = 1'd0;
wire    [7:0] soclinux_dfi_p3_wrdata_mask;
reg           soclinux_en0 = 1'd0;
reg           soclinux_en1 = 1'd0;
reg           soclinux_ext_dfi_p0_act_n = 1'd1;
reg    [13:0] soclinux_ext_dfi_p0_address = 14'd0;
reg     [2:0] soclinux_ext_dfi_p0_bank = 3'd0;
reg           soclinux_ext_dfi_p0_cas_n = 1'd1;
reg           soclinux_ext_dfi_p0_cke = 1'd0;
reg           soclinux_ext_dfi_p0_cs_n = 1'd1;
reg           soclinux_ext_dfi_p0_odt = 1'd0;
reg           soclinux_ext_dfi_p0_ras_n = 1'd1;
reg    [63:0] soclinux_ext_dfi_p0_rddata = 64'd0;
reg           soclinux_ext_dfi_p0_rddata_en = 1'd0;
reg           soclinux_ext_dfi_p0_rddata_valid = 1'd0;
reg           soclinux_ext_dfi_p0_reset_n = 1'd0;
reg           soclinux_ext_dfi_p0_we_n = 1'd1;
reg    [63:0] soclinux_ext_dfi_p0_wrdata = 64'd0;
reg           soclinux_ext_dfi_p0_wrdata_en = 1'd0;
reg     [7:0] soclinux_ext_dfi_p0_wrdata_mask = 8'd0;
reg           soclinux_ext_dfi_p1_act_n = 1'd1;
reg    [13:0] soclinux_ext_dfi_p1_address = 14'd0;
reg     [2:0] soclinux_ext_dfi_p1_bank = 3'd0;
reg           soclinux_ext_dfi_p1_cas_n = 1'd1;
reg           soclinux_ext_dfi_p1_cke = 1'd0;
reg           soclinux_ext_dfi_p1_cs_n = 1'd1;
reg           soclinux_ext_dfi_p1_odt = 1'd0;
reg           soclinux_ext_dfi_p1_ras_n = 1'd1;
reg    [63:0] soclinux_ext_dfi_p1_rddata = 64'd0;
reg           soclinux_ext_dfi_p1_rddata_en = 1'd0;
reg           soclinux_ext_dfi_p1_rddata_valid = 1'd0;
reg           soclinux_ext_dfi_p1_reset_n = 1'd0;
reg           soclinux_ext_dfi_p1_we_n = 1'd1;
reg    [63:0] soclinux_ext_dfi_p1_wrdata = 64'd0;
reg           soclinux_ext_dfi_p1_wrdata_en = 1'd0;
reg     [7:0] soclinux_ext_dfi_p1_wrdata_mask = 8'd0;
reg           soclinux_ext_dfi_p2_act_n = 1'd1;
reg    [13:0] soclinux_ext_dfi_p2_address = 14'd0;
reg     [2:0] soclinux_ext_dfi_p2_bank = 3'd0;
reg           soclinux_ext_dfi_p2_cas_n = 1'd1;
reg           soclinux_ext_dfi_p2_cke = 1'd0;
reg           soclinux_ext_dfi_p2_cs_n = 1'd1;
reg           soclinux_ext_dfi_p2_odt = 1'd0;
reg           soclinux_ext_dfi_p2_ras_n = 1'd1;
reg    [63:0] soclinux_ext_dfi_p2_rddata = 64'd0;
reg           soclinux_ext_dfi_p2_rddata_en = 1'd0;
reg           soclinux_ext_dfi_p2_rddata_valid = 1'd0;
reg           soclinux_ext_dfi_p2_reset_n = 1'd0;
reg           soclinux_ext_dfi_p2_we_n = 1'd1;
reg    [63:0] soclinux_ext_dfi_p2_wrdata = 64'd0;
reg           soclinux_ext_dfi_p2_wrdata_en = 1'd0;
reg     [7:0] soclinux_ext_dfi_p2_wrdata_mask = 8'd0;
reg           soclinux_ext_dfi_p3_act_n = 1'd1;
reg    [13:0] soclinux_ext_dfi_p3_address = 14'd0;
reg     [2:0] soclinux_ext_dfi_p3_bank = 3'd0;
reg           soclinux_ext_dfi_p3_cas_n = 1'd1;
reg           soclinux_ext_dfi_p3_cke = 1'd0;
reg           soclinux_ext_dfi_p3_cs_n = 1'd1;
reg           soclinux_ext_dfi_p3_odt = 1'd0;
reg           soclinux_ext_dfi_p3_ras_n = 1'd1;
reg    [63:0] soclinux_ext_dfi_p3_rddata = 64'd0;
reg           soclinux_ext_dfi_p3_rddata_en = 1'd0;
reg           soclinux_ext_dfi_p3_rddata_valid = 1'd0;
reg           soclinux_ext_dfi_p3_reset_n = 1'd0;
reg           soclinux_ext_dfi_p3_we_n = 1'd1;
reg    [63:0] soclinux_ext_dfi_p3_wrdata = 64'd0;
reg           soclinux_ext_dfi_p3_wrdata_en = 1'd0;
reg     [7:0] soclinux_ext_dfi_p3_wrdata_mask = 8'd0;
reg           soclinux_ext_dfi_sel = 1'd0;
wire          soclinux_go_to_refresh;
reg           soclinux_ibus_cmd_first = 1'd0;
reg           soclinux_ibus_cmd_last = 1'd0;
wire   [31:0] soclinux_ibus_cmd_payload_addr;
wire          soclinux_ibus_cmd_payload_we;
wire          soclinux_ibus_cmd_ready;
wire          soclinux_ibus_cmd_valid;
wire          soclinux_ibus_rdata_first;
wire          soclinux_ibus_rdata_last;
wire  [255:0] soclinux_ibus_rdata_payload_data;
wire          soclinux_ibus_rdata_ready;
wire          soclinux_ibus_rdata_valid;
reg           soclinux_ibus_wdata_first = 1'd0;
reg           soclinux_ibus_wdata_last = 1'd0;
wire  [255:0] soclinux_ibus_wdata_payload_data;
wire   [31:0] soclinux_ibus_wdata_payload_we;
wire          soclinux_ibus_wdata_ready;
wire          soclinux_ibus_wdata_valid;
wire   [20:0] soclinux_interface_bank0_addr;
wire          soclinux_interface_bank0_lock;
wire          soclinux_interface_bank0_rdata_valid;
wire          soclinux_interface_bank0_ready;
wire          soclinux_interface_bank0_valid;
wire          soclinux_interface_bank0_wdata_ready;
wire          soclinux_interface_bank0_we;
wire   [20:0] soclinux_interface_bank1_addr;
wire          soclinux_interface_bank1_lock;
wire          soclinux_interface_bank1_rdata_valid;
wire          soclinux_interface_bank1_ready;
wire          soclinux_interface_bank1_valid;
wire          soclinux_interface_bank1_wdata_ready;
wire          soclinux_interface_bank1_we;
wire   [20:0] soclinux_interface_bank2_addr;
wire          soclinux_interface_bank2_lock;
wire          soclinux_interface_bank2_rdata_valid;
wire          soclinux_interface_bank2_ready;
wire          soclinux_interface_bank2_valid;
wire          soclinux_interface_bank2_wdata_ready;
wire          soclinux_interface_bank2_we;
wire   [20:0] soclinux_interface_bank3_addr;
wire          soclinux_interface_bank3_lock;
wire          soclinux_interface_bank3_rdata_valid;
wire          soclinux_interface_bank3_ready;
wire          soclinux_interface_bank3_valid;
wire          soclinux_interface_bank3_wdata_ready;
wire          soclinux_interface_bank3_we;
wire   [20:0] soclinux_interface_bank4_addr;
wire          soclinux_interface_bank4_lock;
wire          soclinux_interface_bank4_rdata_valid;
wire          soclinux_interface_bank4_ready;
wire          soclinux_interface_bank4_valid;
wire          soclinux_interface_bank4_wdata_ready;
wire          soclinux_interface_bank4_we;
wire   [20:0] soclinux_interface_bank5_addr;
wire          soclinux_interface_bank5_lock;
wire          soclinux_interface_bank5_rdata_valid;
wire          soclinux_interface_bank5_ready;
wire          soclinux_interface_bank5_valid;
wire          soclinux_interface_bank5_wdata_ready;
wire          soclinux_interface_bank5_we;
wire   [20:0] soclinux_interface_bank6_addr;
wire          soclinux_interface_bank6_lock;
wire          soclinux_interface_bank6_rdata_valid;
wire          soclinux_interface_bank6_ready;
wire          soclinux_interface_bank6_valid;
wire          soclinux_interface_bank6_wdata_ready;
wire          soclinux_interface_bank6_we;
wire   [20:0] soclinux_interface_bank7_addr;
wire          soclinux_interface_bank7_lock;
wire          soclinux_interface_bank7_rdata_valid;
wire          soclinux_interface_bank7_ready;
wire          soclinux_interface_bank7_valid;
wire          soclinux_interface_bank7_wdata_ready;
wire          soclinux_interface_bank7_we;
wire  [255:0] soclinux_interface_rdata;
reg   [255:0] soclinux_interface_wdata = 256'd0;
reg    [31:0] soclinux_interface_wdata_we = 32'd0;
reg    [31:0] soclinux_interrupt = 32'd0;
reg           soclinux_is_ongoing = 1'd0;
reg           soclinux_jtag_capture = 1'd0;
reg           soclinux_jtag_clk = 1'd0;
reg           soclinux_jtag_enable = 1'd0;
reg           soclinux_jtag_reset = 1'd0;
reg           soclinux_jtag_shift = 1'd0;
reg           soclinux_jtag_tdi = 1'd0;
wire          soclinux_jtag_tdo;
reg           soclinux_jtag_update = 1'd0;
reg           soclinux_litedram_wb_ack = 1'd0;
reg    [26:0] soclinux_litedram_wb_adr = 27'd0;
wire    [1:0] soclinux_litedram_wb_bte;
wire    [2:0] soclinux_litedram_wb_cti;
wire          soclinux_litedram_wb_cyc;
reg   [255:0] soclinux_litedram_wb_dat_r = 256'd0;
reg   [255:0] soclinux_litedram_wb_dat_w = 256'd0;
reg           soclinux_litedram_wb_err = 1'd0;
reg    [31:0] soclinux_litedram_wb_sel = 32'd0;
wire          soclinux_litedram_wb_stb;
wire          soclinux_litedram_wb_we;
wire          soclinux_litedramnativeport0_cmd_first;
wire          soclinux_litedramnativeport0_cmd_last;
wire   [23:0] soclinux_litedramnativeport0_cmd_payload_addr;
wire          soclinux_litedramnativeport0_cmd_payload_we;
wire          soclinux_litedramnativeport0_cmd_ready;
wire          soclinux_litedramnativeport0_cmd_valid;
reg           soclinux_litedramnativeport0_rdata_first = 1'd0;
reg           soclinux_litedramnativeport0_rdata_last = 1'd0;
wire  [255:0] soclinux_litedramnativeport0_rdata_payload_data;
wire          soclinux_litedramnativeport0_rdata_ready;
wire          soclinux_litedramnativeport0_rdata_valid;
wire          soclinux_litedramnativeport0_wdata_first;
wire          soclinux_litedramnativeport0_wdata_last;
wire  [255:0] soclinux_litedramnativeport0_wdata_payload_data;
wire   [31:0] soclinux_litedramnativeport0_wdata_payload_we;
wire          soclinux_litedramnativeport0_wdata_ready;
wire          soclinux_litedramnativeport0_wdata_valid;
wire          soclinux_litedramnativeport1_cmd_first;
wire          soclinux_litedramnativeport1_cmd_last;
wire   [23:0] soclinux_litedramnativeport1_cmd_payload_addr;
wire          soclinux_litedramnativeport1_cmd_payload_we;
wire          soclinux_litedramnativeport1_cmd_ready;
wire          soclinux_litedramnativeport1_cmd_valid;
reg           soclinux_litedramnativeport1_rdata_first = 1'd0;
reg           soclinux_litedramnativeport1_rdata_last = 1'd0;
wire  [255:0] soclinux_litedramnativeport1_rdata_payload_data;
wire          soclinux_litedramnativeport1_rdata_ready;
wire          soclinux_litedramnativeport1_rdata_valid;
wire          soclinux_litedramnativeport1_wdata_first;
wire          soclinux_litedramnativeport1_wdata_last;
wire  [255:0] soclinux_litedramnativeport1_wdata_payload_data;
wire   [31:0] soclinux_litedramnativeport1_wdata_payload_we;
wire          soclinux_litedramnativeport1_wdata_ready;
wire          soclinux_litedramnativeport1_wdata_valid;
wire          soclinux_litedramnativeport2_cmd_last;
wire   [23:0] soclinux_litedramnativeport2_cmd_payload_addr;
wire          soclinux_litedramnativeport2_cmd_payload_we;
wire          soclinux_litedramnativeport2_cmd_ready;
reg           soclinux_litedramnativeport2_cmd_valid = 1'd0;
wire          soclinux_litedramnativeport2_flush;
wire  [255:0] soclinux_litedramnativeport2_rdata_payload_data;
wire          soclinux_litedramnativeport2_rdata_ready;
wire          soclinux_litedramnativeport2_rdata_valid;
wire  [255:0] soclinux_litedramnativeport2_wdata_payload_data;
wire   [31:0] soclinux_litedramnativeport2_wdata_payload_we;
wire          soclinux_litedramnativeport2_wdata_ready;
reg           soclinux_litedramnativeport2_wdata_valid = 1'd0;
reg           soclinux_master_p0_act_n = 1'd1;
reg    [13:0] soclinux_master_p0_address = 14'd0;
reg     [2:0] soclinux_master_p0_bank = 3'd0;
reg           soclinux_master_p0_cas_n = 1'd1;
reg           soclinux_master_p0_cke = 1'd0;
reg           soclinux_master_p0_cs_n = 1'd1;
reg           soclinux_master_p0_odt = 1'd0;
reg           soclinux_master_p0_ras_n = 1'd1;
wire   [63:0] soclinux_master_p0_rddata;
reg           soclinux_master_p0_rddata_en = 1'd0;
wire          soclinux_master_p0_rddata_valid;
reg           soclinux_master_p0_reset_n = 1'd0;
reg           soclinux_master_p0_we_n = 1'd1;
reg    [63:0] soclinux_master_p0_wrdata = 64'd0;
reg           soclinux_master_p0_wrdata_en = 1'd0;
reg     [7:0] soclinux_master_p0_wrdata_mask = 8'd0;
reg           soclinux_master_p1_act_n = 1'd1;
reg    [13:0] soclinux_master_p1_address = 14'd0;
reg     [2:0] soclinux_master_p1_bank = 3'd0;
reg           soclinux_master_p1_cas_n = 1'd1;
reg           soclinux_master_p1_cke = 1'd0;
reg           soclinux_master_p1_cs_n = 1'd1;
reg           soclinux_master_p1_odt = 1'd0;
reg           soclinux_master_p1_ras_n = 1'd1;
wire   [63:0] soclinux_master_p1_rddata;
reg           soclinux_master_p1_rddata_en = 1'd0;
wire          soclinux_master_p1_rddata_valid;
reg           soclinux_master_p1_reset_n = 1'd0;
reg           soclinux_master_p1_we_n = 1'd1;
reg    [63:0] soclinux_master_p1_wrdata = 64'd0;
reg           soclinux_master_p1_wrdata_en = 1'd0;
reg     [7:0] soclinux_master_p1_wrdata_mask = 8'd0;
reg           soclinux_master_p2_act_n = 1'd1;
reg    [13:0] soclinux_master_p2_address = 14'd0;
reg     [2:0] soclinux_master_p2_bank = 3'd0;
reg           soclinux_master_p2_cas_n = 1'd1;
reg           soclinux_master_p2_cke = 1'd0;
reg           soclinux_master_p2_cs_n = 1'd1;
reg           soclinux_master_p2_odt = 1'd0;
reg           soclinux_master_p2_ras_n = 1'd1;
wire   [63:0] soclinux_master_p2_rddata;
reg           soclinux_master_p2_rddata_en = 1'd0;
wire          soclinux_master_p2_rddata_valid;
reg           soclinux_master_p2_reset_n = 1'd0;
reg           soclinux_master_p2_we_n = 1'd1;
reg    [63:0] soclinux_master_p2_wrdata = 64'd0;
reg           soclinux_master_p2_wrdata_en = 1'd0;
reg     [7:0] soclinux_master_p2_wrdata_mask = 8'd0;
reg           soclinux_master_p3_act_n = 1'd1;
reg    [13:0] soclinux_master_p3_address = 14'd0;
reg     [2:0] soclinux_master_p3_bank = 3'd0;
reg           soclinux_master_p3_cas_n = 1'd1;
reg           soclinux_master_p3_cke = 1'd0;
reg           soclinux_master_p3_cs_n = 1'd1;
reg           soclinux_master_p3_odt = 1'd0;
reg           soclinux_master_p3_ras_n = 1'd1;
wire   [63:0] soclinux_master_p3_rddata;
reg           soclinux_master_p3_rddata_en = 1'd0;
wire          soclinux_master_p3_rddata_valid;
reg           soclinux_master_p3_reset_n = 1'd0;
reg           soclinux_master_p3_we_n = 1'd1;
reg    [63:0] soclinux_master_p3_wrdata = 64'd0;
reg           soclinux_master_p3_wrdata_en = 1'd0;
reg     [7:0] soclinux_master_p3_wrdata_mask = 8'd0;
wire          soclinux_max_time0;
wire          soclinux_max_time1;
reg    [13:0] soclinux_nop_a = 14'd0;
reg     [2:0] soclinux_nop_ba = 3'd0;
wire          soclinux_odt;
wire          soclinux_pbus_ack;
wire   [29:0] soclinux_pbus_adr;
wire    [1:0] soclinux_pbus_bte;
wire    [2:0] soclinux_pbus_cti;
wire          soclinux_pbus_cyc;
wire   [31:0] soclinux_pbus_dat_r;
wire   [31:0] soclinux_pbus_dat_w;
wire          soclinux_pbus_err;
wire    [3:0] soclinux_pbus_sel;
wire          soclinux_pbus_stb;
wire          soclinux_pbus_we;
reg           soclinux_phaseinjector0_address_re = 1'd0;
reg    [13:0] soclinux_phaseinjector0_address_storage = 14'd0;
reg           soclinux_phaseinjector0_baddress_re = 1'd0;
reg     [2:0] soclinux_phaseinjector0_baddress_storage = 3'd0;
wire          soclinux_phaseinjector0_command_issue_r;
reg           soclinux_phaseinjector0_command_issue_re = 1'd0;
reg           soclinux_phaseinjector0_command_issue_w = 1'd0;
reg           soclinux_phaseinjector0_command_issue_we = 1'd0;
reg           soclinux_phaseinjector0_command_re = 1'd0;
reg     [7:0] soclinux_phaseinjector0_command_storage = 8'd0;
wire          soclinux_phaseinjector0_csrfield_cas;
wire          soclinux_phaseinjector0_csrfield_cs;
wire          soclinux_phaseinjector0_csrfield_cs_bottom;
wire          soclinux_phaseinjector0_csrfield_cs_top;
wire          soclinux_phaseinjector0_csrfield_ras;
wire          soclinux_phaseinjector0_csrfield_rden;
wire          soclinux_phaseinjector0_csrfield_we;
wire          soclinux_phaseinjector0_csrfield_wren;
reg           soclinux_phaseinjector0_rddata_re = 1'd0;
reg    [63:0] soclinux_phaseinjector0_rddata_status = 64'd0;
wire          soclinux_phaseinjector0_rddata_we;
reg           soclinux_phaseinjector0_wrdata_re = 1'd0;
reg    [63:0] soclinux_phaseinjector0_wrdata_storage = 64'd0;
reg           soclinux_phaseinjector1_address_re = 1'd0;
reg    [13:0] soclinux_phaseinjector1_address_storage = 14'd0;
reg           soclinux_phaseinjector1_baddress_re = 1'd0;
reg     [2:0] soclinux_phaseinjector1_baddress_storage = 3'd0;
wire          soclinux_phaseinjector1_command_issue_r;
reg           soclinux_phaseinjector1_command_issue_re = 1'd0;
reg           soclinux_phaseinjector1_command_issue_w = 1'd0;
reg           soclinux_phaseinjector1_command_issue_we = 1'd0;
reg           soclinux_phaseinjector1_command_re = 1'd0;
reg     [7:0] soclinux_phaseinjector1_command_storage = 8'd0;
wire          soclinux_phaseinjector1_csrfield_cas;
wire          soclinux_phaseinjector1_csrfield_cs;
wire          soclinux_phaseinjector1_csrfield_cs_bottom;
wire          soclinux_phaseinjector1_csrfield_cs_top;
wire          soclinux_phaseinjector1_csrfield_ras;
wire          soclinux_phaseinjector1_csrfield_rden;
wire          soclinux_phaseinjector1_csrfield_we;
wire          soclinux_phaseinjector1_csrfield_wren;
reg           soclinux_phaseinjector1_rddata_re = 1'd0;
reg    [63:0] soclinux_phaseinjector1_rddata_status = 64'd0;
wire          soclinux_phaseinjector1_rddata_we;
reg           soclinux_phaseinjector1_wrdata_re = 1'd0;
reg    [63:0] soclinux_phaseinjector1_wrdata_storage = 64'd0;
reg           soclinux_phaseinjector2_address_re = 1'd0;
reg    [13:0] soclinux_phaseinjector2_address_storage = 14'd0;
reg           soclinux_phaseinjector2_baddress_re = 1'd0;
reg     [2:0] soclinux_phaseinjector2_baddress_storage = 3'd0;
wire          soclinux_phaseinjector2_command_issue_r;
reg           soclinux_phaseinjector2_command_issue_re = 1'd0;
reg           soclinux_phaseinjector2_command_issue_w = 1'd0;
reg           soclinux_phaseinjector2_command_issue_we = 1'd0;
reg           soclinux_phaseinjector2_command_re = 1'd0;
reg     [7:0] soclinux_phaseinjector2_command_storage = 8'd0;
wire          soclinux_phaseinjector2_csrfield_cas;
wire          soclinux_phaseinjector2_csrfield_cs;
wire          soclinux_phaseinjector2_csrfield_cs_bottom;
wire          soclinux_phaseinjector2_csrfield_cs_top;
wire          soclinux_phaseinjector2_csrfield_ras;
wire          soclinux_phaseinjector2_csrfield_rden;
wire          soclinux_phaseinjector2_csrfield_we;
wire          soclinux_phaseinjector2_csrfield_wren;
reg           soclinux_phaseinjector2_rddata_re = 1'd0;
reg    [63:0] soclinux_phaseinjector2_rddata_status = 64'd0;
wire          soclinux_phaseinjector2_rddata_we;
reg           soclinux_phaseinjector2_wrdata_re = 1'd0;
reg    [63:0] soclinux_phaseinjector2_wrdata_storage = 64'd0;
reg           soclinux_phaseinjector3_address_re = 1'd0;
reg    [13:0] soclinux_phaseinjector3_address_storage = 14'd0;
reg           soclinux_phaseinjector3_baddress_re = 1'd0;
reg     [2:0] soclinux_phaseinjector3_baddress_storage = 3'd0;
wire          soclinux_phaseinjector3_command_issue_r;
reg           soclinux_phaseinjector3_command_issue_re = 1'd0;
reg           soclinux_phaseinjector3_command_issue_w = 1'd0;
reg           soclinux_phaseinjector3_command_issue_we = 1'd0;
reg           soclinux_phaseinjector3_command_re = 1'd0;
reg     [7:0] soclinux_phaseinjector3_command_storage = 8'd0;
wire          soclinux_phaseinjector3_csrfield_cas;
wire          soclinux_phaseinjector3_csrfield_cs;
wire          soclinux_phaseinjector3_csrfield_cs_bottom;
wire          soclinux_phaseinjector3_csrfield_cs_top;
wire          soclinux_phaseinjector3_csrfield_ras;
wire          soclinux_phaseinjector3_csrfield_rden;
wire          soclinux_phaseinjector3_csrfield_we;
wire          soclinux_phaseinjector3_csrfield_wren;
reg           soclinux_phaseinjector3_rddata_re = 1'd0;
reg    [63:0] soclinux_phaseinjector3_rddata_status = 64'd0;
wire          soclinux_phaseinjector3_rddata_we;
reg           soclinux_phaseinjector3_wrdata_re = 1'd0;
reg    [63:0] soclinux_phaseinjector3_wrdata_storage = 64'd0;
wire          soclinux_plicbus_ack;
wire   [29:0] soclinux_plicbus_adr;
wire    [1:0] soclinux_plicbus_bte;
wire    [2:0] soclinux_plicbus_cti;
wire          soclinux_plicbus_cyc;
wire   [31:0] soclinux_plicbus_dat_r;
wire   [31:0] soclinux_plicbus_dat_w;
reg           soclinux_plicbus_err = 1'd0;
wire    [3:0] soclinux_plicbus_sel;
wire          soclinux_plicbus_stb;
wire          soclinux_plicbus_we;
reg           soclinux_postponer_count = 1'd0;
wire          soclinux_postponer_req_i;
reg           soclinux_postponer_req_o = 1'd0;
wire   [10:0] soclinux_ram_adr;
reg           soclinux_ram_adr_burst = 1'd0;
reg           soclinux_ram_bus_ram_bus_ack = 1'd0;
wire   [29:0] soclinux_ram_bus_ram_bus_adr;
wire    [1:0] soclinux_ram_bus_ram_bus_bte;
wire    [2:0] soclinux_ram_bus_ram_bus_cti;
wire          soclinux_ram_bus_ram_bus_cyc;
wire   [31:0] soclinux_ram_bus_ram_bus_dat_r;
wire   [31:0] soclinux_ram_bus_ram_bus_dat_w;
reg           soclinux_ram_bus_ram_bus_err = 1'd0;
wire    [3:0] soclinux_ram_bus_ram_bus_sel;
wire          soclinux_ram_bus_ram_bus_stb;
wire          soclinux_ram_bus_ram_bus_we;
wire   [31:0] soclinux_ram_dat_r;
wire   [31:0] soclinux_ram_dat_w;
reg     [3:0] soclinux_ram_we = 4'd0;
wire          soclinux_ras_allowed;
wire    [1:0] soclinux_rdcmdphase;
reg           soclinux_re = 1'd0;
wire          soclinux_read_available;
wire          soclinux_reset;
wire          soclinux_reset_n;
reg           soclinux_reset_re = 1'd0;
reg     [1:0] soclinux_reset_storage = 2'd0;
reg     [3:0] soclinux_rx_count = 4'd0;
reg     [3:0] soclinux_rx_count_rs232phyrx_next_value0 = 4'd0;
reg           soclinux_rx_count_rs232phyrx_next_value_ce0 = 1'd0;
reg     [7:0] soclinux_rx_data = 8'd0;
reg     [7:0] soclinux_rx_data_rs232phyrx_next_value1 = 8'd0;
reg           soclinux_rx_data_rs232phyrx_next_value_ce1 = 1'd0;
reg           soclinux_rx_enable = 1'd0;
reg    [31:0] soclinux_rx_phase = 32'd0;
wire          soclinux_rx_rx;
reg           soclinux_rx_rx_d = 1'd0;
reg           soclinux_rx_source_first = 1'd0;
reg           soclinux_rx_source_last = 1'd0;
reg     [7:0] soclinux_rx_source_payload_data = 8'd0;
wire          soclinux_rx_source_ready;
reg           soclinux_rx_source_valid = 1'd0;
reg           soclinux_rx_tick = 1'd0;
reg           soclinux_scratch_re = 1'd0;
reg    [31:0] soclinux_scratch_storage = 32'd305419896;
wire          soclinux_sel;
reg           soclinux_sequencer_count = 1'd0;
reg     [4:0] soclinux_sequencer_counter = 5'd0;
wire          soclinux_sequencer_done0;
reg           soclinux_sequencer_done1 = 1'd0;
reg           soclinux_sequencer_start0 = 1'd0;
wire          soclinux_sequencer_start1;
reg           soclinux_serial_tx_rs232phytx_next_value1 = 1'd0;
reg           soclinux_serial_tx_rs232phytx_next_value_ce1 = 1'd0;
wire          soclinux_slave_p0_act_n;
wire   [13:0] soclinux_slave_p0_address;
wire    [2:0] soclinux_slave_p0_bank;
wire          soclinux_slave_p0_cas_n;
wire          soclinux_slave_p0_cke;
wire          soclinux_slave_p0_cs_n;
wire          soclinux_slave_p0_odt;
wire          soclinux_slave_p0_ras_n;
reg    [63:0] soclinux_slave_p0_rddata = 64'd0;
wire          soclinux_slave_p0_rddata_en;
reg           soclinux_slave_p0_rddata_valid = 1'd0;
wire          soclinux_slave_p0_reset_n;
wire          soclinux_slave_p0_we_n;
wire   [63:0] soclinux_slave_p0_wrdata;
wire          soclinux_slave_p0_wrdata_en;
wire    [7:0] soclinux_slave_p0_wrdata_mask;
wire          soclinux_slave_p1_act_n;
wire   [13:0] soclinux_slave_p1_address;
wire    [2:0] soclinux_slave_p1_bank;
wire          soclinux_slave_p1_cas_n;
wire          soclinux_slave_p1_cke;
wire          soclinux_slave_p1_cs_n;
wire          soclinux_slave_p1_odt;
wire          soclinux_slave_p1_ras_n;
reg    [63:0] soclinux_slave_p1_rddata = 64'd0;
wire          soclinux_slave_p1_rddata_en;
reg           soclinux_slave_p1_rddata_valid = 1'd0;
wire          soclinux_slave_p1_reset_n;
wire          soclinux_slave_p1_we_n;
wire   [63:0] soclinux_slave_p1_wrdata;
wire          soclinux_slave_p1_wrdata_en;
wire    [7:0] soclinux_slave_p1_wrdata_mask;
wire          soclinux_slave_p2_act_n;
wire   [13:0] soclinux_slave_p2_address;
wire    [2:0] soclinux_slave_p2_bank;
wire          soclinux_slave_p2_cas_n;
wire          soclinux_slave_p2_cke;
wire          soclinux_slave_p2_cs_n;
wire          soclinux_slave_p2_odt;
wire          soclinux_slave_p2_ras_n;
reg    [63:0] soclinux_slave_p2_rddata = 64'd0;
wire          soclinux_slave_p2_rddata_en;
reg           soclinux_slave_p2_rddata_valid = 1'd0;
wire          soclinux_slave_p2_reset_n;
wire          soclinux_slave_p2_we_n;
wire   [63:0] soclinux_slave_p2_wrdata;
wire          soclinux_slave_p2_wrdata_en;
wire    [7:0] soclinux_slave_p2_wrdata_mask;
wire          soclinux_slave_p3_act_n;
wire   [13:0] soclinux_slave_p3_address;
wire    [2:0] soclinux_slave_p3_bank;
wire          soclinux_slave_p3_cas_n;
wire          soclinux_slave_p3_cke;
wire          soclinux_slave_p3_cs_n;
wire          soclinux_slave_p3_odt;
wire          soclinux_slave_p3_ras_n;
reg    [63:0] soclinux_slave_p3_rddata = 64'd0;
wire          soclinux_slave_p3_rddata_en;
reg           soclinux_slave_p3_rddata_valid = 1'd0;
wire          soclinux_slave_p3_reset_n;
wire          soclinux_slave_p3_we_n;
wire   [63:0] soclinux_slave_p3_wrdata;
wire          soclinux_slave_p3_wrdata_en;
wire    [7:0] soclinux_slave_p3_wrdata_mask;
reg           soclinux_soc_rst = 1'd0;
wire   [13:0] soclinux_soclinux_adr;
reg           soclinux_soclinux_adr_burst = 1'd0;
wire   [31:0] soclinux_soclinux_dat_r;
reg           soclinux_soclinux_ram_bus_ack = 1'd0;
wire   [29:0] soclinux_soclinux_ram_bus_adr;
wire    [1:0] soclinux_soclinux_ram_bus_bte;
wire    [2:0] soclinux_soclinux_ram_bus_cti;
wire          soclinux_soclinux_ram_bus_cyc;
wire   [31:0] soclinux_soclinux_ram_bus_dat_r;
wire   [31:0] soclinux_soclinux_ram_bus_dat_w;
reg           soclinux_soclinux_ram_bus_err = 1'd0;
wire    [3:0] soclinux_soclinux_ram_bus_sel;
wire          soclinux_soclinux_ram_bus_stb;
wire          soclinux_soclinux_ram_bus_we;
reg           soclinux_steerer0 = 1'd1;
reg           soclinux_steerer1 = 1'd1;
reg           soclinux_steerer2 = 1'd1;
reg           soclinux_steerer3 = 1'd1;
reg           soclinux_steerer4 = 1'd1;
reg           soclinux_steerer5 = 1'd1;
reg           soclinux_steerer6 = 1'd1;
reg           soclinux_steerer7 = 1'd1;
reg     [1:0] soclinux_steerer_sel0 = 2'd0;
reg     [1:0] soclinux_steerer_sel1 = 2'd0;
reg     [1:0] soclinux_steerer_sel2 = 2'd0;
reg     [1:0] soclinux_steerer_sel3 = 2'd0;
reg     [3:0] soclinux_storage = 4'd1;
reg           soclinux_tccdcon_count = 1'd0;
(* dont_touch = "true" *)
reg           soclinux_tccdcon_ready = 1'd0;
wire          soclinux_tccdcon_valid;
wire    [2:0] soclinux_tfawcon_count;
(* dont_touch = "true" *)
reg           soclinux_tfawcon_ready = 1'd1;
wire          soclinux_tfawcon_valid;
reg     [4:0] soclinux_tfawcon_window = 5'd0;
reg     [4:0] soclinux_time0 = 5'd0;
reg     [3:0] soclinux_time1 = 4'd0;
wire    [9:0] soclinux_timer_count0;
reg     [9:0] soclinux_timer_count1 = 10'd976;
wire          soclinux_timer_done0;
wire          soclinux_timer_done1;
reg           soclinux_timer_en_re = 1'd0;
reg           soclinux_timer_en_storage = 1'd0;
reg           soclinux_timer_enable_re = 1'd0;
reg           soclinux_timer_enable_storage = 1'd0;
wire          soclinux_timer_irq;
reg           soclinux_timer_load_re = 1'd0;
reg    [31:0] soclinux_timer_load_storage = 32'd0;
reg           soclinux_timer_pending_r = 1'd0;
reg           soclinux_timer_pending_re = 1'd0;
reg           soclinux_timer_pending_status = 1'd0;
wire          soclinux_timer_pending_we;
reg           soclinux_timer_reload_re = 1'd0;
reg    [31:0] soclinux_timer_reload_storage = 32'd0;
reg           soclinux_timer_status_re = 1'd0;
reg           soclinux_timer_status_status = 1'd0;
wire          soclinux_timer_status_we;
reg           soclinux_timer_update_value_re = 1'd0;
reg           soclinux_timer_update_value_storage = 1'd0;
reg    [31:0] soclinux_timer_value = 32'd0;
reg           soclinux_timer_value_re = 1'd0;
reg    [31:0] soclinux_timer_value_status = 32'd0;
wire          soclinux_timer_value_we;
wire          soclinux_timer_wait;
wire          soclinux_timer_zero0;
wire          soclinux_timer_zero1;
wire          soclinux_timer_zero2;
reg           soclinux_timer_zero_clear = 1'd0;
reg           soclinux_timer_zero_pending = 1'd0;
wire          soclinux_timer_zero_status;
wire          soclinux_timer_zero_trigger;
reg           soclinux_timer_zero_trigger_d = 1'd0;
reg           soclinux_trrdcon_count = 1'd0;
(* dont_touch = "true" *)
reg           soclinux_trrdcon_ready = 1'd0;
wire          soclinux_trrdcon_valid;
reg     [2:0] soclinux_twtrcon_count = 3'd0;
(* dont_touch = "true" *)
reg           soclinux_twtrcon_ready = 1'd0;
wire          soclinux_twtrcon_valid;
reg     [3:0] soclinux_tx_count = 4'd0;
reg     [3:0] soclinux_tx_count_rs232phytx_next_value0 = 4'd0;
reg           soclinux_tx_count_rs232phytx_next_value_ce0 = 1'd0;
reg     [7:0] soclinux_tx_data = 8'd0;
reg     [7:0] soclinux_tx_data_rs232phytx_next_value2 = 8'd0;
reg           soclinux_tx_data_rs232phytx_next_value_ce2 = 1'd0;
reg           soclinux_tx_enable = 1'd0;
reg    [31:0] soclinux_tx_phase = 32'd0;
wire          soclinux_tx_sink_first;
wire          soclinux_tx_sink_last;
wire    [7:0] soclinux_tx_sink_payload_data;
reg           soclinux_tx_sink_ready = 1'd0;
wire          soclinux_tx_sink_valid;
reg           soclinux_tx_tick = 1'd0;
reg           soclinux_uart_enable_re = 1'd0;
reg     [1:0] soclinux_uart_enable_storage = 2'd0;
wire          soclinux_uart_irq;
reg     [1:0] soclinux_uart_pending_r = 2'd0;
reg           soclinux_uart_pending_re = 1'd0;
reg     [1:0] soclinux_uart_pending_status = 2'd0;
wire          soclinux_uart_pending_we;
wire          soclinux_uart_rx0;
wire          soclinux_uart_rx1;
wire          soclinux_uart_rx2;
reg           soclinux_uart_rx_clear = 1'd0;
reg     [3:0] soclinux_uart_rx_fifo_consume = 4'd0;
wire          soclinux_uart_rx_fifo_do_read;
wire          soclinux_uart_rx_fifo_fifo_in_first;
wire          soclinux_uart_rx_fifo_fifo_in_last;
wire    [7:0] soclinux_uart_rx_fifo_fifo_in_payload_data;
wire          soclinux_uart_rx_fifo_fifo_out_first;
wire          soclinux_uart_rx_fifo_fifo_out_last;
wire    [7:0] soclinux_uart_rx_fifo_fifo_out_payload_data;
reg     [4:0] soclinux_uart_rx_fifo_level0 = 5'd0;
wire    [4:0] soclinux_uart_rx_fifo_level1;
reg     [3:0] soclinux_uart_rx_fifo_produce = 4'd0;
wire    [3:0] soclinux_uart_rx_fifo_rdport_adr;
wire    [9:0] soclinux_uart_rx_fifo_rdport_dat_r;
wire          soclinux_uart_rx_fifo_rdport_re;
wire          soclinux_uart_rx_fifo_re;
reg           soclinux_uart_rx_fifo_readable = 1'd0;
reg           soclinux_uart_rx_fifo_replace = 1'd0;
wire          soclinux_uart_rx_fifo_sink_first;
wire          soclinux_uart_rx_fifo_sink_last;
wire    [7:0] soclinux_uart_rx_fifo_sink_payload_data;
wire          soclinux_uart_rx_fifo_sink_ready;
wire          soclinux_uart_rx_fifo_sink_valid;
wire          soclinux_uart_rx_fifo_source_first;
wire          soclinux_uart_rx_fifo_source_last;
wire    [7:0] soclinux_uart_rx_fifo_source_payload_data;
wire          soclinux_uart_rx_fifo_source_ready;
wire          soclinux_uart_rx_fifo_source_valid;
wire    [9:0] soclinux_uart_rx_fifo_syncfifo_din;
wire    [9:0] soclinux_uart_rx_fifo_syncfifo_dout;
wire          soclinux_uart_rx_fifo_syncfifo_re;
wire          soclinux_uart_rx_fifo_syncfifo_readable;
wire          soclinux_uart_rx_fifo_syncfifo_we;
wire          soclinux_uart_rx_fifo_syncfifo_writable;
reg     [3:0] soclinux_uart_rx_fifo_wrport_adr = 4'd0;
wire    [9:0] soclinux_uart_rx_fifo_wrport_dat_r;
wire    [9:0] soclinux_uart_rx_fifo_wrport_dat_w;
wire          soclinux_uart_rx_fifo_wrport_we;
reg           soclinux_uart_rx_pending = 1'd0;
wire          soclinux_uart_rx_status;
wire          soclinux_uart_rx_trigger;
reg           soclinux_uart_rx_trigger_d = 1'd0;
reg           soclinux_uart_rxempty_re = 1'd0;
wire          soclinux_uart_rxempty_status;
wire          soclinux_uart_rxempty_we;
reg           soclinux_uart_rxfull_re = 1'd0;
wire          soclinux_uart_rxfull_status;
wire          soclinux_uart_rxfull_we;
wire    [7:0] soclinux_uart_rxtx_r;
reg           soclinux_uart_rxtx_re = 1'd0;
wire    [7:0] soclinux_uart_rxtx_w;
reg           soclinux_uart_rxtx_we = 1'd0;
reg           soclinux_uart_status_re = 1'd0;
reg     [1:0] soclinux_uart_status_status = 2'd0;
wire          soclinux_uart_status_we;
wire          soclinux_uart_tx0;
wire          soclinux_uart_tx1;
wire          soclinux_uart_tx2;
reg           soclinux_uart_tx_clear = 1'd0;
reg     [3:0] soclinux_uart_tx_fifo_consume = 4'd0;
wire          soclinux_uart_tx_fifo_do_read;
wire          soclinux_uart_tx_fifo_fifo_in_first;
wire          soclinux_uart_tx_fifo_fifo_in_last;
wire    [7:0] soclinux_uart_tx_fifo_fifo_in_payload_data;
wire          soclinux_uart_tx_fifo_fifo_out_first;
wire          soclinux_uart_tx_fifo_fifo_out_last;
wire    [7:0] soclinux_uart_tx_fifo_fifo_out_payload_data;
reg     [4:0] soclinux_uart_tx_fifo_level0 = 5'd0;
wire    [4:0] soclinux_uart_tx_fifo_level1;
reg     [3:0] soclinux_uart_tx_fifo_produce = 4'd0;
wire    [3:0] soclinux_uart_tx_fifo_rdport_adr;
wire    [9:0] soclinux_uart_tx_fifo_rdport_dat_r;
wire          soclinux_uart_tx_fifo_rdport_re;
wire          soclinux_uart_tx_fifo_re;
reg           soclinux_uart_tx_fifo_readable = 1'd0;
reg           soclinux_uart_tx_fifo_replace = 1'd0;
reg           soclinux_uart_tx_fifo_sink_first = 1'd0;
reg           soclinux_uart_tx_fifo_sink_last = 1'd0;
wire    [7:0] soclinux_uart_tx_fifo_sink_payload_data;
wire          soclinux_uart_tx_fifo_sink_ready;
wire          soclinux_uart_tx_fifo_sink_valid;
wire          soclinux_uart_tx_fifo_source_first;
wire          soclinux_uart_tx_fifo_source_last;
wire    [7:0] soclinux_uart_tx_fifo_source_payload_data;
wire          soclinux_uart_tx_fifo_source_ready;
wire          soclinux_uart_tx_fifo_source_valid;
wire    [9:0] soclinux_uart_tx_fifo_syncfifo_din;
wire    [9:0] soclinux_uart_tx_fifo_syncfifo_dout;
wire          soclinux_uart_tx_fifo_syncfifo_re;
wire          soclinux_uart_tx_fifo_syncfifo_readable;
wire          soclinux_uart_tx_fifo_syncfifo_we;
wire          soclinux_uart_tx_fifo_syncfifo_writable;
reg     [3:0] soclinux_uart_tx_fifo_wrport_adr = 4'd0;
wire    [9:0] soclinux_uart_tx_fifo_wrport_dat_r;
wire    [9:0] soclinux_uart_tx_fifo_wrport_dat_w;
wire          soclinux_uart_tx_fifo_wrport_we;
reg           soclinux_uart_tx_pending = 1'd0;
wire          soclinux_uart_tx_status;
wire          soclinux_uart_tx_trigger;
reg           soclinux_uart_tx_trigger_d = 1'd0;
reg           soclinux_uart_txempty_re = 1'd0;
wire          soclinux_uart_txempty_status;
wire          soclinux_uart_txempty_we;
reg           soclinux_uart_txfull_re = 1'd0;
wire          soclinux_uart_txfull_status;
wire          soclinux_uart_txfull_we;
wire          soclinux_uart_uart_sink_first;
wire          soclinux_uart_uart_sink_last;
wire    [7:0] soclinux_uart_uart_sink_payload_data;
wire          soclinux_uart_uart_sink_ready;
wire          soclinux_uart_uart_sink_valid;
wire          soclinux_uart_uart_source_first;
wire          soclinux_uart_uart_source_last;
wire    [7:0] soclinux_uart_uart_source_payload_data;
wire          soclinux_uart_uart_source_ready;
wire          soclinux_uart_uart_source_valid;
wire          soclinux_wants_refresh;
wire          soclinux_wants_zqcs;
wire          soclinux_wb_sdram_ack;
wire   [29:0] soclinux_wb_sdram_adr;
wire    [1:0] soclinux_wb_sdram_bte;
wire    [2:0] soclinux_wb_sdram_cti;
wire          soclinux_wb_sdram_cyc;
reg    [31:0] soclinux_wb_sdram_dat_r = 32'd0;
wire   [31:0] soclinux_wb_sdram_dat_w;
wire          soclinux_wb_sdram_err;
wire    [3:0] soclinux_wb_sdram_sel;
wire          soclinux_wb_sdram_stb;
wire          soclinux_wb_sdram_we;
wire    [1:0] soclinux_wrcmdphase;
wire          soclinux_write_available;
reg     [4:0] soclinux_zqcs_executer_counter = 5'd0;
reg           soclinux_zqcs_executer_done = 1'd0;
reg           soclinux_zqcs_executer_start = 1'd0;
wire   [26:0] soclinux_zqcs_timer_count0;
reg    [26:0] soclinux_zqcs_timer_count1 = 27'd124999999;
wire          soclinux_zqcs_timer_done0;
wire          soclinux_zqcs_timer_done1;
wire          soclinux_zqcs_timer_wait;
wire          sys4x_clk;
wire          sys4x_rst;
(* dont_touch = "true" *)
wire          sys_clk;
wire          sys_rst;
reg           t_array_muxed0 = 1'd0;
reg           t_array_muxed1 = 1'd0;
reg           t_array_muxed2 = 1'd0;
reg           t_array_muxed3 = 1'd0;
reg           t_array_muxed4 = 1'd0;
reg           t_array_muxed5 = 1'd0;
wire          v7ddrphy0;
wire          v7ddrphy1;
wire          v7ddrphy2;
wire          v7ddrphy3;
reg     [7:0] v7ddrphy_bitslip00 = 8'd0;
reg     [7:0] v7ddrphy_bitslip01 = 8'd0;
reg     [7:0] v7ddrphy_bitslip02 = 8'd0;
wire    [7:0] v7ddrphy_bitslip03;
reg     [7:0] v7ddrphy_bitslip04 = 8'd0;
reg    [15:0] v7ddrphy_bitslip0_r0 = 16'd0;
reg    [15:0] v7ddrphy_bitslip0_r1 = 16'd0;
reg    [15:0] v7ddrphy_bitslip0_r2 = 16'd0;
reg    [15:0] v7ddrphy_bitslip0_r3 = 16'd0;
reg     [2:0] v7ddrphy_bitslip0_value0 = 3'd7;
reg     [2:0] v7ddrphy_bitslip0_value1 = 3'd7;
reg     [2:0] v7ddrphy_bitslip0_value2 = 3'd7;
reg     [2:0] v7ddrphy_bitslip0_value3 = 3'd7;
reg     [7:0] v7ddrphy_bitslip10 = 8'd0;
reg     [7:0] v7ddrphy_bitslip100 = 8'd0;
wire    [7:0] v7ddrphy_bitslip101;
reg     [7:0] v7ddrphy_bitslip102 = 8'd0;
reg    [15:0] v7ddrphy_bitslip10_r0 = 16'd0;
reg    [15:0] v7ddrphy_bitslip10_r1 = 16'd0;
reg     [2:0] v7ddrphy_bitslip10_value0 = 3'd7;
reg     [2:0] v7ddrphy_bitslip10_value1 = 3'd7;
reg     [7:0] v7ddrphy_bitslip11 = 8'd0;
reg     [7:0] v7ddrphy_bitslip110 = 8'd0;
wire    [7:0] v7ddrphy_bitslip111;
reg     [7:0] v7ddrphy_bitslip112 = 8'd0;
reg    [15:0] v7ddrphy_bitslip11_r0 = 16'd0;
reg    [15:0] v7ddrphy_bitslip11_r1 = 16'd0;
reg     [2:0] v7ddrphy_bitslip11_value0 = 3'd7;
reg     [2:0] v7ddrphy_bitslip11_value1 = 3'd7;
reg     [7:0] v7ddrphy_bitslip12 = 8'd0;
reg     [7:0] v7ddrphy_bitslip120 = 8'd0;
wire    [7:0] v7ddrphy_bitslip121;
reg     [7:0] v7ddrphy_bitslip122 = 8'd0;
reg    [15:0] v7ddrphy_bitslip12_r0 = 16'd0;
reg    [15:0] v7ddrphy_bitslip12_r1 = 16'd0;
reg     [2:0] v7ddrphy_bitslip12_value0 = 3'd7;
reg     [2:0] v7ddrphy_bitslip12_value1 = 3'd7;
wire    [7:0] v7ddrphy_bitslip13;
reg     [7:0] v7ddrphy_bitslip130 = 8'd0;
wire    [7:0] v7ddrphy_bitslip131;
reg     [7:0] v7ddrphy_bitslip132 = 8'd0;
reg    [15:0] v7ddrphy_bitslip13_r0 = 16'd0;
reg    [15:0] v7ddrphy_bitslip13_r1 = 16'd0;
reg     [2:0] v7ddrphy_bitslip13_value0 = 3'd7;
reg     [2:0] v7ddrphy_bitslip13_value1 = 3'd7;
reg     [7:0] v7ddrphy_bitslip14 = 8'd0;
reg     [7:0] v7ddrphy_bitslip140 = 8'd0;
wire    [7:0] v7ddrphy_bitslip141;
reg     [7:0] v7ddrphy_bitslip142 = 8'd0;
reg    [15:0] v7ddrphy_bitslip14_r0 = 16'd0;
reg    [15:0] v7ddrphy_bitslip14_r1 = 16'd0;
reg     [2:0] v7ddrphy_bitslip14_value0 = 3'd7;
reg     [2:0] v7ddrphy_bitslip14_value1 = 3'd7;
reg     [7:0] v7ddrphy_bitslip150 = 8'd0;
wire    [7:0] v7ddrphy_bitslip151;
reg     [7:0] v7ddrphy_bitslip152 = 8'd0;
reg    [15:0] v7ddrphy_bitslip15_r0 = 16'd0;
reg    [15:0] v7ddrphy_bitslip15_r1 = 16'd0;
reg     [2:0] v7ddrphy_bitslip15_value0 = 3'd7;
reg     [2:0] v7ddrphy_bitslip15_value1 = 3'd7;
reg     [7:0] v7ddrphy_bitslip160 = 8'd0;
wire    [7:0] v7ddrphy_bitslip161;
reg     [7:0] v7ddrphy_bitslip162 = 8'd0;
reg    [15:0] v7ddrphy_bitslip16_r0 = 16'd0;
reg    [15:0] v7ddrphy_bitslip16_r1 = 16'd0;
reg     [2:0] v7ddrphy_bitslip16_value0 = 3'd7;
reg     [2:0] v7ddrphy_bitslip16_value1 = 3'd7;
reg     [7:0] v7ddrphy_bitslip170 = 8'd0;
wire    [7:0] v7ddrphy_bitslip171;
reg     [7:0] v7ddrphy_bitslip172 = 8'd0;
reg    [15:0] v7ddrphy_bitslip17_r0 = 16'd0;
reg    [15:0] v7ddrphy_bitslip17_r1 = 16'd0;
reg     [2:0] v7ddrphy_bitslip17_value0 = 3'd7;
reg     [2:0] v7ddrphy_bitslip17_value1 = 3'd7;
reg     [7:0] v7ddrphy_bitslip180 = 8'd0;
wire    [7:0] v7ddrphy_bitslip181;
reg     [7:0] v7ddrphy_bitslip182 = 8'd0;
reg    [15:0] v7ddrphy_bitslip18_r0 = 16'd0;
reg    [15:0] v7ddrphy_bitslip18_r1 = 16'd0;
reg     [2:0] v7ddrphy_bitslip18_value0 = 3'd7;
reg     [2:0] v7ddrphy_bitslip18_value1 = 3'd7;
reg     [7:0] v7ddrphy_bitslip190 = 8'd0;
wire    [7:0] v7ddrphy_bitslip191;
reg     [7:0] v7ddrphy_bitslip192 = 8'd0;
reg    [15:0] v7ddrphy_bitslip19_r0 = 16'd0;
reg    [15:0] v7ddrphy_bitslip19_r1 = 16'd0;
reg     [2:0] v7ddrphy_bitslip19_value0 = 3'd7;
reg     [2:0] v7ddrphy_bitslip19_value1 = 3'd7;
reg    [15:0] v7ddrphy_bitslip1_r0 = 16'd0;
reg    [15:0] v7ddrphy_bitslip1_r1 = 16'd0;
reg    [15:0] v7ddrphy_bitslip1_r2 = 16'd0;
reg    [15:0] v7ddrphy_bitslip1_r3 = 16'd0;
reg     [2:0] v7ddrphy_bitslip1_value0 = 3'd7;
reg     [2:0] v7ddrphy_bitslip1_value1 = 3'd7;
reg     [2:0] v7ddrphy_bitslip1_value2 = 3'd7;
reg     [2:0] v7ddrphy_bitslip1_value3 = 3'd7;
reg     [7:0] v7ddrphy_bitslip20 = 8'd0;
reg     [7:0] v7ddrphy_bitslip200 = 8'd0;
wire    [7:0] v7ddrphy_bitslip201;
reg     [7:0] v7ddrphy_bitslip202 = 8'd0;
reg    [15:0] v7ddrphy_bitslip20_r0 = 16'd0;
reg    [15:0] v7ddrphy_bitslip20_r1 = 16'd0;
reg     [2:0] v7ddrphy_bitslip20_value0 = 3'd7;
reg     [2:0] v7ddrphy_bitslip20_value1 = 3'd7;
reg     [7:0] v7ddrphy_bitslip21 = 8'd0;
reg     [7:0] v7ddrphy_bitslip210 = 8'd0;
wire    [7:0] v7ddrphy_bitslip211;
reg     [7:0] v7ddrphy_bitslip212 = 8'd0;
reg    [15:0] v7ddrphy_bitslip21_r0 = 16'd0;
reg    [15:0] v7ddrphy_bitslip21_r1 = 16'd0;
reg     [2:0] v7ddrphy_bitslip21_value0 = 3'd7;
reg     [2:0] v7ddrphy_bitslip21_value1 = 3'd7;
reg     [7:0] v7ddrphy_bitslip22 = 8'd0;
reg     [7:0] v7ddrphy_bitslip220 = 8'd0;
wire    [7:0] v7ddrphy_bitslip221;
reg     [7:0] v7ddrphy_bitslip222 = 8'd0;
reg    [15:0] v7ddrphy_bitslip22_r0 = 16'd0;
reg    [15:0] v7ddrphy_bitslip22_r1 = 16'd0;
reg     [2:0] v7ddrphy_bitslip22_value0 = 3'd7;
reg     [2:0] v7ddrphy_bitslip22_value1 = 3'd7;
wire    [7:0] v7ddrphy_bitslip23;
reg     [7:0] v7ddrphy_bitslip230 = 8'd0;
wire    [7:0] v7ddrphy_bitslip231;
reg     [7:0] v7ddrphy_bitslip232 = 8'd0;
reg    [15:0] v7ddrphy_bitslip23_r0 = 16'd0;
reg    [15:0] v7ddrphy_bitslip23_r1 = 16'd0;
reg     [2:0] v7ddrphy_bitslip23_value0 = 3'd7;
reg     [2:0] v7ddrphy_bitslip23_value1 = 3'd7;
reg     [7:0] v7ddrphy_bitslip24 = 8'd0;
reg     [7:0] v7ddrphy_bitslip240 = 8'd0;
wire    [7:0] v7ddrphy_bitslip241;
reg     [7:0] v7ddrphy_bitslip242 = 8'd0;
reg    [15:0] v7ddrphy_bitslip24_r0 = 16'd0;
reg    [15:0] v7ddrphy_bitslip24_r1 = 16'd0;
reg     [2:0] v7ddrphy_bitslip24_value0 = 3'd7;
reg     [2:0] v7ddrphy_bitslip24_value1 = 3'd7;
reg     [7:0] v7ddrphy_bitslip250 = 8'd0;
wire    [7:0] v7ddrphy_bitslip251;
reg     [7:0] v7ddrphy_bitslip252 = 8'd0;
reg    [15:0] v7ddrphy_bitslip25_r0 = 16'd0;
reg    [15:0] v7ddrphy_bitslip25_r1 = 16'd0;
reg     [2:0] v7ddrphy_bitslip25_value0 = 3'd7;
reg     [2:0] v7ddrphy_bitslip25_value1 = 3'd7;
reg     [7:0] v7ddrphy_bitslip260 = 8'd0;
wire    [7:0] v7ddrphy_bitslip261;
reg     [7:0] v7ddrphy_bitslip262 = 8'd0;
reg    [15:0] v7ddrphy_bitslip26_r0 = 16'd0;
reg    [15:0] v7ddrphy_bitslip26_r1 = 16'd0;
reg     [2:0] v7ddrphy_bitslip26_value0 = 3'd7;
reg     [2:0] v7ddrphy_bitslip26_value1 = 3'd7;
reg     [7:0] v7ddrphy_bitslip270 = 8'd0;
wire    [7:0] v7ddrphy_bitslip271;
reg     [7:0] v7ddrphy_bitslip272 = 8'd0;
reg    [15:0] v7ddrphy_bitslip27_r0 = 16'd0;
reg    [15:0] v7ddrphy_bitslip27_r1 = 16'd0;
reg     [2:0] v7ddrphy_bitslip27_value0 = 3'd7;
reg     [2:0] v7ddrphy_bitslip27_value1 = 3'd7;
reg     [7:0] v7ddrphy_bitslip280 = 8'd0;
wire    [7:0] v7ddrphy_bitslip281;
reg     [7:0] v7ddrphy_bitslip282 = 8'd0;
reg    [15:0] v7ddrphy_bitslip28_r0 = 16'd0;
reg    [15:0] v7ddrphy_bitslip28_r1 = 16'd0;
reg     [2:0] v7ddrphy_bitslip28_value0 = 3'd7;
reg     [2:0] v7ddrphy_bitslip28_value1 = 3'd7;
reg     [7:0] v7ddrphy_bitslip290 = 8'd0;
wire    [7:0] v7ddrphy_bitslip291;
reg     [7:0] v7ddrphy_bitslip292 = 8'd0;
reg    [15:0] v7ddrphy_bitslip29_r0 = 16'd0;
reg    [15:0] v7ddrphy_bitslip29_r1 = 16'd0;
reg     [2:0] v7ddrphy_bitslip29_value0 = 3'd7;
reg     [2:0] v7ddrphy_bitslip29_value1 = 3'd7;
reg    [15:0] v7ddrphy_bitslip2_r0 = 16'd0;
reg    [15:0] v7ddrphy_bitslip2_r1 = 16'd0;
reg    [15:0] v7ddrphy_bitslip2_r2 = 16'd0;
reg    [15:0] v7ddrphy_bitslip2_r3 = 16'd0;
reg     [2:0] v7ddrphy_bitslip2_value0 = 3'd7;
reg     [2:0] v7ddrphy_bitslip2_value1 = 3'd7;
reg     [2:0] v7ddrphy_bitslip2_value2 = 3'd7;
reg     [2:0] v7ddrphy_bitslip2_value3 = 3'd7;
reg     [7:0] v7ddrphy_bitslip30 = 8'd0;
reg     [7:0] v7ddrphy_bitslip300 = 8'd0;
wire    [7:0] v7ddrphy_bitslip301;
reg     [7:0] v7ddrphy_bitslip302 = 8'd0;
reg    [15:0] v7ddrphy_bitslip30_r0 = 16'd0;
reg    [15:0] v7ddrphy_bitslip30_r1 = 16'd0;
reg     [2:0] v7ddrphy_bitslip30_value0 = 3'd7;
reg     [2:0] v7ddrphy_bitslip30_value1 = 3'd7;
reg     [7:0] v7ddrphy_bitslip31 = 8'd0;
reg     [7:0] v7ddrphy_bitslip310 = 8'd0;
wire    [7:0] v7ddrphy_bitslip311;
reg     [7:0] v7ddrphy_bitslip312 = 8'd0;
reg    [15:0] v7ddrphy_bitslip31_r0 = 16'd0;
reg    [15:0] v7ddrphy_bitslip31_r1 = 16'd0;
reg     [2:0] v7ddrphy_bitslip31_value0 = 3'd7;
reg     [2:0] v7ddrphy_bitslip31_value1 = 3'd7;
reg     [7:0] v7ddrphy_bitslip32 = 8'd0;
wire    [7:0] v7ddrphy_bitslip33;
reg     [7:0] v7ddrphy_bitslip34 = 8'd0;
reg    [15:0] v7ddrphy_bitslip3_r0 = 16'd0;
reg    [15:0] v7ddrphy_bitslip3_r1 = 16'd0;
reg    [15:0] v7ddrphy_bitslip3_r2 = 16'd0;
reg    [15:0] v7ddrphy_bitslip3_r3 = 16'd0;
reg     [2:0] v7ddrphy_bitslip3_value0 = 3'd7;
reg     [2:0] v7ddrphy_bitslip3_value1 = 3'd7;
reg     [2:0] v7ddrphy_bitslip3_value2 = 3'd7;
reg     [2:0] v7ddrphy_bitslip3_value3 = 3'd7;
reg     [7:0] v7ddrphy_bitslip40 = 8'd0;
wire    [7:0] v7ddrphy_bitslip41;
reg     [7:0] v7ddrphy_bitslip42 = 8'd0;
reg    [15:0] v7ddrphy_bitslip4_r0 = 16'd0;
reg    [15:0] v7ddrphy_bitslip4_r1 = 16'd0;
reg     [2:0] v7ddrphy_bitslip4_value0 = 3'd7;
reg     [2:0] v7ddrphy_bitslip4_value1 = 3'd7;
reg     [7:0] v7ddrphy_bitslip50 = 8'd0;
wire    [7:0] v7ddrphy_bitslip51;
reg     [7:0] v7ddrphy_bitslip52 = 8'd0;
reg    [15:0] v7ddrphy_bitslip5_r0 = 16'd0;
reg    [15:0] v7ddrphy_bitslip5_r1 = 16'd0;
reg     [2:0] v7ddrphy_bitslip5_value0 = 3'd7;
reg     [2:0] v7ddrphy_bitslip5_value1 = 3'd7;
reg     [7:0] v7ddrphy_bitslip60 = 8'd0;
wire    [7:0] v7ddrphy_bitslip61;
reg     [7:0] v7ddrphy_bitslip62 = 8'd0;
reg    [15:0] v7ddrphy_bitslip6_r0 = 16'd0;
reg    [15:0] v7ddrphy_bitslip6_r1 = 16'd0;
reg     [2:0] v7ddrphy_bitslip6_value0 = 3'd7;
reg     [2:0] v7ddrphy_bitslip6_value1 = 3'd7;
reg     [7:0] v7ddrphy_bitslip70 = 8'd0;
wire    [7:0] v7ddrphy_bitslip71;
reg     [7:0] v7ddrphy_bitslip72 = 8'd0;
reg    [15:0] v7ddrphy_bitslip7_r0 = 16'd0;
reg    [15:0] v7ddrphy_bitslip7_r1 = 16'd0;
reg     [2:0] v7ddrphy_bitslip7_value0 = 3'd7;
reg     [2:0] v7ddrphy_bitslip7_value1 = 3'd7;
reg     [7:0] v7ddrphy_bitslip80 = 8'd0;
wire    [7:0] v7ddrphy_bitslip81;
reg     [7:0] v7ddrphy_bitslip82 = 8'd0;
reg    [15:0] v7ddrphy_bitslip8_r0 = 16'd0;
reg    [15:0] v7ddrphy_bitslip8_r1 = 16'd0;
reg     [2:0] v7ddrphy_bitslip8_value0 = 3'd7;
reg     [2:0] v7ddrphy_bitslip8_value1 = 3'd7;
reg     [7:0] v7ddrphy_bitslip90 = 8'd0;
wire    [7:0] v7ddrphy_bitslip91;
reg     [7:0] v7ddrphy_bitslip92 = 8'd0;
reg    [15:0] v7ddrphy_bitslip9_r0 = 16'd0;
reg    [15:0] v7ddrphy_bitslip9_r1 = 16'd0;
reg     [2:0] v7ddrphy_bitslip9_value0 = 3'd7;
reg     [2:0] v7ddrphy_bitslip9_value1 = 3'd7;
wire          v7ddrphy_cdly_inc_r;
reg           v7ddrphy_cdly_inc_re = 1'd0;
reg           v7ddrphy_cdly_inc_w = 1'd0;
reg           v7ddrphy_cdly_inc_we = 1'd0;
wire          v7ddrphy_cdly_rst_r;
reg           v7ddrphy_cdly_rst_re = 1'd0;
reg           v7ddrphy_cdly_rst_w = 1'd0;
reg           v7ddrphy_cdly_rst_we = 1'd0;
wire          v7ddrphy_dfi_p0_act_n;
wire   [15:0] v7ddrphy_dfi_p0_address;
wire    [2:0] v7ddrphy_dfi_p0_bank;
wire          v7ddrphy_dfi_p0_cas_n;
wire          v7ddrphy_dfi_p0_cke;
wire          v7ddrphy_dfi_p0_cs_n;
wire          v7ddrphy_dfi_p0_odt;
wire          v7ddrphy_dfi_p0_ras_n;
reg    [63:0] v7ddrphy_dfi_p0_rddata = 64'd0;
wire          v7ddrphy_dfi_p0_rddata_en;
wire          v7ddrphy_dfi_p0_rddata_valid;
wire          v7ddrphy_dfi_p0_reset_n;
wire          v7ddrphy_dfi_p0_we_n;
wire   [63:0] v7ddrphy_dfi_p0_wrdata;
wire          v7ddrphy_dfi_p0_wrdata_en;
wire    [7:0] v7ddrphy_dfi_p0_wrdata_mask;
wire          v7ddrphy_dfi_p1_act_n;
wire   [15:0] v7ddrphy_dfi_p1_address;
wire    [2:0] v7ddrphy_dfi_p1_bank;
wire          v7ddrphy_dfi_p1_cas_n;
wire          v7ddrphy_dfi_p1_cke;
wire          v7ddrphy_dfi_p1_cs_n;
wire          v7ddrphy_dfi_p1_odt;
wire          v7ddrphy_dfi_p1_ras_n;
reg    [63:0] v7ddrphy_dfi_p1_rddata = 64'd0;
wire          v7ddrphy_dfi_p1_rddata_en;
wire          v7ddrphy_dfi_p1_rddata_valid;
wire          v7ddrphy_dfi_p1_reset_n;
wire          v7ddrphy_dfi_p1_we_n;
wire   [63:0] v7ddrphy_dfi_p1_wrdata;
wire          v7ddrphy_dfi_p1_wrdata_en;
wire    [7:0] v7ddrphy_dfi_p1_wrdata_mask;
wire          v7ddrphy_dfi_p2_act_n;
wire   [15:0] v7ddrphy_dfi_p2_address;
wire    [2:0] v7ddrphy_dfi_p2_bank;
wire          v7ddrphy_dfi_p2_cas_n;
wire          v7ddrphy_dfi_p2_cke;
wire          v7ddrphy_dfi_p2_cs_n;
wire          v7ddrphy_dfi_p2_odt;
wire          v7ddrphy_dfi_p2_ras_n;
reg    [63:0] v7ddrphy_dfi_p2_rddata = 64'd0;
wire          v7ddrphy_dfi_p2_rddata_en;
wire          v7ddrphy_dfi_p2_rddata_valid;
wire          v7ddrphy_dfi_p2_reset_n;
wire          v7ddrphy_dfi_p2_we_n;
wire   [63:0] v7ddrphy_dfi_p2_wrdata;
wire          v7ddrphy_dfi_p2_wrdata_en;
wire    [7:0] v7ddrphy_dfi_p2_wrdata_mask;
wire          v7ddrphy_dfi_p3_act_n;
wire   [15:0] v7ddrphy_dfi_p3_address;
wire    [2:0] v7ddrphy_dfi_p3_bank;
wire          v7ddrphy_dfi_p3_cas_n;
wire          v7ddrphy_dfi_p3_cke;
wire          v7ddrphy_dfi_p3_cs_n;
wire          v7ddrphy_dfi_p3_odt;
wire          v7ddrphy_dfi_p3_ras_n;
reg    [63:0] v7ddrphy_dfi_p3_rddata = 64'd0;
wire          v7ddrphy_dfi_p3_rddata_en;
wire          v7ddrphy_dfi_p3_rddata_valid;
wire          v7ddrphy_dfi_p3_reset_n;
wire          v7ddrphy_dfi_p3_we_n;
wire   [63:0] v7ddrphy_dfi_p3_wrdata;
wire          v7ddrphy_dfi_p3_wrdata_en;
wire    [7:0] v7ddrphy_dfi_p3_wrdata_mask;
reg           v7ddrphy_dly_sel_re = 1'd0;
reg     [3:0] v7ddrphy_dly_sel_storage = 4'd0;
wire          v7ddrphy_dm_o_nodelay0;
wire          v7ddrphy_dm_o_nodelay1;
wire          v7ddrphy_dm_o_nodelay2;
wire          v7ddrphy_dm_o_nodelay3;
wire          v7ddrphy_dq_i_delayed0;
wire          v7ddrphy_dq_i_delayed1;
wire          v7ddrphy_dq_i_delayed10;
wire          v7ddrphy_dq_i_delayed11;
wire          v7ddrphy_dq_i_delayed12;
wire          v7ddrphy_dq_i_delayed13;
wire          v7ddrphy_dq_i_delayed14;
wire          v7ddrphy_dq_i_delayed15;
wire          v7ddrphy_dq_i_delayed16;
wire          v7ddrphy_dq_i_delayed17;
wire          v7ddrphy_dq_i_delayed18;
wire          v7ddrphy_dq_i_delayed19;
wire          v7ddrphy_dq_i_delayed2;
wire          v7ddrphy_dq_i_delayed20;
wire          v7ddrphy_dq_i_delayed21;
wire          v7ddrphy_dq_i_delayed22;
wire          v7ddrphy_dq_i_delayed23;
wire          v7ddrphy_dq_i_delayed24;
wire          v7ddrphy_dq_i_delayed25;
wire          v7ddrphy_dq_i_delayed26;
wire          v7ddrphy_dq_i_delayed27;
wire          v7ddrphy_dq_i_delayed28;
wire          v7ddrphy_dq_i_delayed29;
wire          v7ddrphy_dq_i_delayed3;
wire          v7ddrphy_dq_i_delayed30;
wire          v7ddrphy_dq_i_delayed31;
wire          v7ddrphy_dq_i_delayed4;
wire          v7ddrphy_dq_i_delayed5;
wire          v7ddrphy_dq_i_delayed6;
wire          v7ddrphy_dq_i_delayed7;
wire          v7ddrphy_dq_i_delayed8;
wire          v7ddrphy_dq_i_delayed9;
wire          v7ddrphy_dq_i_nodelay0;
wire          v7ddrphy_dq_i_nodelay1;
wire          v7ddrphy_dq_i_nodelay10;
wire          v7ddrphy_dq_i_nodelay11;
wire          v7ddrphy_dq_i_nodelay12;
wire          v7ddrphy_dq_i_nodelay13;
wire          v7ddrphy_dq_i_nodelay14;
wire          v7ddrphy_dq_i_nodelay15;
wire          v7ddrphy_dq_i_nodelay16;
wire          v7ddrphy_dq_i_nodelay17;
wire          v7ddrphy_dq_i_nodelay18;
wire          v7ddrphy_dq_i_nodelay19;
wire          v7ddrphy_dq_i_nodelay2;
wire          v7ddrphy_dq_i_nodelay20;
wire          v7ddrphy_dq_i_nodelay21;
wire          v7ddrphy_dq_i_nodelay22;
wire          v7ddrphy_dq_i_nodelay23;
wire          v7ddrphy_dq_i_nodelay24;
wire          v7ddrphy_dq_i_nodelay25;
wire          v7ddrphy_dq_i_nodelay26;
wire          v7ddrphy_dq_i_nodelay27;
wire          v7ddrphy_dq_i_nodelay28;
wire          v7ddrphy_dq_i_nodelay29;
wire          v7ddrphy_dq_i_nodelay3;
wire          v7ddrphy_dq_i_nodelay30;
wire          v7ddrphy_dq_i_nodelay31;
wire          v7ddrphy_dq_i_nodelay4;
wire          v7ddrphy_dq_i_nodelay5;
wire          v7ddrphy_dq_i_nodelay6;
wire          v7ddrphy_dq_i_nodelay7;
wire          v7ddrphy_dq_i_nodelay8;
wire          v7ddrphy_dq_i_nodelay9;
wire          v7ddrphy_dq_o_delayed0;
wire          v7ddrphy_dq_o_delayed1;
wire          v7ddrphy_dq_o_delayed10;
wire          v7ddrphy_dq_o_delayed11;
wire          v7ddrphy_dq_o_delayed12;
wire          v7ddrphy_dq_o_delayed13;
wire          v7ddrphy_dq_o_delayed14;
wire          v7ddrphy_dq_o_delayed15;
wire          v7ddrphy_dq_o_delayed16;
wire          v7ddrphy_dq_o_delayed17;
wire          v7ddrphy_dq_o_delayed18;
wire          v7ddrphy_dq_o_delayed19;
wire          v7ddrphy_dq_o_delayed2;
wire          v7ddrphy_dq_o_delayed20;
wire          v7ddrphy_dq_o_delayed21;
wire          v7ddrphy_dq_o_delayed22;
wire          v7ddrphy_dq_o_delayed23;
wire          v7ddrphy_dq_o_delayed24;
wire          v7ddrphy_dq_o_delayed25;
wire          v7ddrphy_dq_o_delayed26;
wire          v7ddrphy_dq_o_delayed27;
wire          v7ddrphy_dq_o_delayed28;
wire          v7ddrphy_dq_o_delayed29;
wire          v7ddrphy_dq_o_delayed3;
wire          v7ddrphy_dq_o_delayed30;
wire          v7ddrphy_dq_o_delayed31;
wire          v7ddrphy_dq_o_delayed4;
wire          v7ddrphy_dq_o_delayed5;
wire          v7ddrphy_dq_o_delayed6;
wire          v7ddrphy_dq_o_delayed7;
wire          v7ddrphy_dq_o_delayed8;
wire          v7ddrphy_dq_o_delayed9;
wire          v7ddrphy_dq_o_nodelay0;
wire          v7ddrphy_dq_o_nodelay1;
wire          v7ddrphy_dq_o_nodelay10;
wire          v7ddrphy_dq_o_nodelay11;
wire          v7ddrphy_dq_o_nodelay12;
wire          v7ddrphy_dq_o_nodelay13;
wire          v7ddrphy_dq_o_nodelay14;
wire          v7ddrphy_dq_o_nodelay15;
wire          v7ddrphy_dq_o_nodelay16;
wire          v7ddrphy_dq_o_nodelay17;
wire          v7ddrphy_dq_o_nodelay18;
wire          v7ddrphy_dq_o_nodelay19;
wire          v7ddrphy_dq_o_nodelay2;
wire          v7ddrphy_dq_o_nodelay20;
wire          v7ddrphy_dq_o_nodelay21;
wire          v7ddrphy_dq_o_nodelay22;
wire          v7ddrphy_dq_o_nodelay23;
wire          v7ddrphy_dq_o_nodelay24;
wire          v7ddrphy_dq_o_nodelay25;
wire          v7ddrphy_dq_o_nodelay26;
wire          v7ddrphy_dq_o_nodelay27;
wire          v7ddrphy_dq_o_nodelay28;
wire          v7ddrphy_dq_o_nodelay29;
wire          v7ddrphy_dq_o_nodelay3;
wire          v7ddrphy_dq_o_nodelay30;
wire          v7ddrphy_dq_o_nodelay31;
wire          v7ddrphy_dq_o_nodelay4;
wire          v7ddrphy_dq_o_nodelay5;
wire          v7ddrphy_dq_o_nodelay6;
wire          v7ddrphy_dq_o_nodelay7;
wire          v7ddrphy_dq_o_nodelay8;
wire          v7ddrphy_dq_o_nodelay9;
wire          v7ddrphy_dq_oe;
wire          v7ddrphy_dq_oe_delay_tappeddelayline;
reg           v7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline0 = 1'd0;
reg           v7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1 = 1'd0;
wire          v7ddrphy_dq_t0;
wire          v7ddrphy_dq_t1;
wire          v7ddrphy_dq_t10;
wire          v7ddrphy_dq_t11;
wire          v7ddrphy_dq_t12;
wire          v7ddrphy_dq_t13;
wire          v7ddrphy_dq_t14;
wire          v7ddrphy_dq_t15;
wire          v7ddrphy_dq_t16;
wire          v7ddrphy_dq_t17;
wire          v7ddrphy_dq_t18;
wire          v7ddrphy_dq_t19;
wire          v7ddrphy_dq_t2;
wire          v7ddrphy_dq_t20;
wire          v7ddrphy_dq_t21;
wire          v7ddrphy_dq_t22;
wire          v7ddrphy_dq_t23;
wire          v7ddrphy_dq_t24;
wire          v7ddrphy_dq_t25;
wire          v7ddrphy_dq_t26;
wire          v7ddrphy_dq_t27;
wire          v7ddrphy_dq_t28;
wire          v7ddrphy_dq_t29;
wire          v7ddrphy_dq_t3;
wire          v7ddrphy_dq_t30;
wire          v7ddrphy_dq_t31;
wire          v7ddrphy_dq_t4;
wire          v7ddrphy_dq_t5;
wire          v7ddrphy_dq_t6;
wire          v7ddrphy_dq_t7;
wire          v7ddrphy_dq_t8;
wire          v7ddrphy_dq_t9;
wire          v7ddrphy_dqs_o_delayed0;
wire          v7ddrphy_dqs_o_delayed1;
wire          v7ddrphy_dqs_o_delayed2;
wire          v7ddrphy_dqs_o_delayed3;
wire          v7ddrphy_dqs_o_no_delay0;
wire          v7ddrphy_dqs_o_no_delay1;
wire          v7ddrphy_dqs_o_no_delay2;
wire          v7ddrphy_dqs_o_no_delay3;
reg           v7ddrphy_dqs_oe = 1'd0;
wire          v7ddrphy_dqs_oe_delay_tappeddelayline;
reg           v7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline0 = 1'd0;
reg           v7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline1 = 1'd0;
wire          v7ddrphy_dqs_postamble;
wire          v7ddrphy_dqs_preamble;
wire          v7ddrphy_dqs_t0;
wire          v7ddrphy_dqs_t1;
wire          v7ddrphy_dqs_t2;
wire          v7ddrphy_dqs_t3;
reg           v7ddrphy_dqspattern0 = 1'd0;
reg           v7ddrphy_dqspattern1 = 1'd0;
reg     [7:0] v7ddrphy_dqspattern_o = 8'd0;
reg           v7ddrphy_half_sys8x_taps_re = 1'd0;
reg     [4:0] v7ddrphy_half_sys8x_taps_storage = 5'd6;
wire          v7ddrphy_oq0;
wire          v7ddrphy_oq1;
wire          v7ddrphy_oq10;
wire          v7ddrphy_oq11;
wire          v7ddrphy_oq12;
wire          v7ddrphy_oq13;
wire          v7ddrphy_oq14;
wire          v7ddrphy_oq15;
wire          v7ddrphy_oq16;
wire          v7ddrphy_oq17;
wire          v7ddrphy_oq18;
wire          v7ddrphy_oq19;
wire          v7ddrphy_oq2;
wire          v7ddrphy_oq20;
wire          v7ddrphy_oq21;
wire          v7ddrphy_oq22;
wire          v7ddrphy_oq23;
wire          v7ddrphy_oq24;
wire          v7ddrphy_oq25;
wire          v7ddrphy_oq3;
wire          v7ddrphy_oq4;
wire          v7ddrphy_oq5;
wire          v7ddrphy_oq6;
wire          v7ddrphy_oq7;
wire          v7ddrphy_oq8;
wire          v7ddrphy_oq9;
wire    [2:0] v7ddrphy_pads_ba;
reg           v7ddrphy_rddata_en_tappeddelayline0 = 1'd0;
reg           v7ddrphy_rddata_en_tappeddelayline1 = 1'd0;
reg           v7ddrphy_rddata_en_tappeddelayline2 = 1'd0;
reg           v7ddrphy_rddata_en_tappeddelayline3 = 1'd0;
reg           v7ddrphy_rddata_en_tappeddelayline4 = 1'd0;
reg           v7ddrphy_rddata_en_tappeddelayline5 = 1'd0;
reg           v7ddrphy_rddata_en_tappeddelayline6 = 1'd0;
reg           v7ddrphy_rddata_en_tappeddelayline7 = 1'd0;
wire          v7ddrphy_rdly_dq_bitslip_r;
reg           v7ddrphy_rdly_dq_bitslip_re = 1'd0;
wire          v7ddrphy_rdly_dq_bitslip_rst_r;
reg           v7ddrphy_rdly_dq_bitslip_rst_re = 1'd0;
reg           v7ddrphy_rdly_dq_bitslip_rst_w = 1'd0;
reg           v7ddrphy_rdly_dq_bitslip_rst_we = 1'd0;
reg           v7ddrphy_rdly_dq_bitslip_w = 1'd0;
reg           v7ddrphy_rdly_dq_bitslip_we = 1'd0;
wire          v7ddrphy_rdly_dq_inc_r;
reg           v7ddrphy_rdly_dq_inc_re = 1'd0;
reg           v7ddrphy_rdly_dq_inc_w = 1'd0;
reg           v7ddrphy_rdly_dq_inc_we = 1'd0;
wire          v7ddrphy_rdly_dq_rst_r;
reg           v7ddrphy_rdly_dq_rst_re = 1'd0;
reg           v7ddrphy_rdly_dq_rst_w = 1'd0;
reg           v7ddrphy_rdly_dq_rst_we = 1'd0;
reg           v7ddrphy_rdphase_re = 1'd0;
reg     [1:0] v7ddrphy_rdphase_storage = 2'd1;
reg           v7ddrphy_rst_re = 1'd0;
reg           v7ddrphy_rst_storage = 1'd0;
wire          v7ddrphy_sd_clk_se_delayed;
wire          v7ddrphy_sd_clk_se_nodelay;
wire          v7ddrphy_wdly_dq_bitslip_r;
reg           v7ddrphy_wdly_dq_bitslip_re = 1'd0;
wire          v7ddrphy_wdly_dq_bitslip_rst_r;
reg           v7ddrphy_wdly_dq_bitslip_rst_re = 1'd0;
reg           v7ddrphy_wdly_dq_bitslip_rst_w = 1'd0;
reg           v7ddrphy_wdly_dq_bitslip_rst_we = 1'd0;
reg           v7ddrphy_wdly_dq_bitslip_w = 1'd0;
reg           v7ddrphy_wdly_dq_bitslip_we = 1'd0;
wire          v7ddrphy_wdly_dq_inc_r;
reg           v7ddrphy_wdly_dq_inc_re = 1'd0;
reg           v7ddrphy_wdly_dq_inc_w = 1'd0;
reg           v7ddrphy_wdly_dq_inc_we = 1'd0;
wire          v7ddrphy_wdly_dq_rst_r;
reg           v7ddrphy_wdly_dq_rst_re = 1'd0;
reg           v7ddrphy_wdly_dq_rst_w = 1'd0;
reg           v7ddrphy_wdly_dq_rst_we = 1'd0;
wire          v7ddrphy_wdly_dqs_inc_r;
reg           v7ddrphy_wdly_dqs_inc_re = 1'd0;
reg           v7ddrphy_wdly_dqs_inc_w = 1'd0;
reg           v7ddrphy_wdly_dqs_inc_we = 1'd0;
wire          v7ddrphy_wdly_dqs_rst_r;
reg           v7ddrphy_wdly_dqs_rst_re = 1'd0;
reg           v7ddrphy_wdly_dqs_rst_w = 1'd0;
reg           v7ddrphy_wdly_dqs_rst_we = 1'd0;
reg           v7ddrphy_wlevel_en_re = 1'd0;
reg           v7ddrphy_wlevel_en_storage = 1'd0;
wire          v7ddrphy_wlevel_strobe_r;
reg           v7ddrphy_wlevel_strobe_re = 1'd0;
reg           v7ddrphy_wlevel_strobe_w = 1'd0;
reg           v7ddrphy_wlevel_strobe_we = 1'd0;
reg           v7ddrphy_wrdata_en_tappeddelayline0 = 1'd0;
reg           v7ddrphy_wrdata_en_tappeddelayline1 = 1'd0;
reg           v7ddrphy_wrdata_en_tappeddelayline2 = 1'd0;
reg           v7ddrphy_wrphase_re = 1'd0;
reg     [1:0] v7ddrphy_wrphase_storage = 2'd2;
wire          wait_1;
reg     [1:0] wishbone2csr_next_state = 2'd0;
reg     [1:0] wishbone2csr_state = 2'd0;

//------------------------------------------------------------------------------
// Combinatorial Logic
//------------------------------------------------------------------------------

assign soclinux_reset = (soclinux_soc_rst | soclinux_cpu_rst);
assign soclinux_litedramnativeport0_cmd_valid = soclinux_ibus_cmd_valid;
assign soclinux_ibus_cmd_ready = soclinux_litedramnativeport0_cmd_ready;
assign soclinux_litedramnativeport0_cmd_first = soclinux_ibus_cmd_first;
assign soclinux_litedramnativeport0_cmd_last = soclinux_ibus_cmd_last;
assign soclinux_litedramnativeport0_cmd_payload_we = soclinux_ibus_cmd_payload_we;
assign soclinux_litedramnativeport0_cmd_payload_addr = soclinux_ibus_cmd_payload_addr;
assign soclinux_litedramnativeport0_wdata_valid = soclinux_ibus_wdata_valid;
assign soclinux_ibus_wdata_ready = soclinux_litedramnativeport0_wdata_ready;
assign soclinux_litedramnativeport0_wdata_first = soclinux_ibus_wdata_first;
assign soclinux_litedramnativeport0_wdata_last = soclinux_ibus_wdata_last;
assign soclinux_litedramnativeport0_wdata_payload_data = soclinux_ibus_wdata_payload_data;
assign soclinux_litedramnativeport0_wdata_payload_we = soclinux_ibus_wdata_payload_we;
assign soclinux_ibus_rdata_valid = soclinux_litedramnativeport0_rdata_valid;
assign soclinux_litedramnativeport0_rdata_ready = soclinux_ibus_rdata_ready;
assign soclinux_ibus_rdata_first = soclinux_litedramnativeport0_rdata_first;
assign soclinux_ibus_rdata_last = soclinux_litedramnativeport0_rdata_last;
assign soclinux_ibus_rdata_payload_data = soclinux_litedramnativeport0_rdata_payload_data;
assign soclinux_litedramnativeport1_cmd_valid = soclinux_dbus_cmd_valid;
assign soclinux_dbus_cmd_ready = soclinux_litedramnativeport1_cmd_ready;
assign soclinux_litedramnativeport1_cmd_first = soclinux_dbus_cmd_first;
assign soclinux_litedramnativeport1_cmd_last = soclinux_dbus_cmd_last;
assign soclinux_litedramnativeport1_cmd_payload_we = soclinux_dbus_cmd_payload_we;
assign soclinux_litedramnativeport1_cmd_payload_addr = soclinux_dbus_cmd_payload_addr;
assign soclinux_litedramnativeport1_wdata_valid = soclinux_dbus_wdata_valid;
assign soclinux_dbus_wdata_ready = soclinux_litedramnativeport1_wdata_ready;
assign soclinux_litedramnativeport1_wdata_first = soclinux_dbus_wdata_first;
assign soclinux_litedramnativeport1_wdata_last = soclinux_dbus_wdata_last;
assign soclinux_litedramnativeport1_wdata_payload_data = soclinux_dbus_wdata_payload_data;
assign soclinux_litedramnativeport1_wdata_payload_we = soclinux_dbus_wdata_payload_we;
assign soclinux_dbus_rdata_valid = soclinux_litedramnativeport1_rdata_valid;
assign soclinux_litedramnativeport1_rdata_ready = soclinux_dbus_rdata_ready;
assign soclinux_dbus_rdata_first = soclinux_litedramnativeport1_rdata_first;
assign soclinux_dbus_rdata_last = soclinux_litedramnativeport1_rdata_last;
assign soclinux_dbus_rdata_payload_data = soclinux_litedramnativeport1_rdata_payload_data;
assign sdcard_block2mem_sink_sink_valid0 = sdcard_core_source_source_valid0;
assign sdcard_core_source_source_ready0 = sdcard_block2mem_sink_sink_ready0;
assign sdcard_block2mem_sink_sink_first = sdcard_core_source_source_first0;
assign sdcard_block2mem_sink_sink_last0 = sdcard_core_source_source_last0;
assign sdcard_block2mem_sink_sink_payload_data0 = sdcard_core_source_source_payload_data0;
assign sdcard_core_sink_sink_valid0 = sdcard_mem2block_source_source_valid;
assign sdcard_mem2block_source_source_ready = sdcard_core_sink_sink_ready0;
assign sdcard_core_sink_sink_first0 = sdcard_mem2block_source_source_first;
assign sdcard_core_sink_sink_last0 = sdcard_mem2block_source_source_last;
assign sdcard_core_sink_sink_payload_data0 = sdcard_mem2block_source_source_payload_data;
assign block2mem_dma_trigger = sdcard_block2mem_irq;
assign mem2block_dma_trigger = sdcard_mem2block_irq;
assign card_detect_trigger = card_detect_irq;
assign cmd_done_trigger = sdcard_core_csrfield_done0;
always @(*) begin
    crg_rst <= 1'd0;
    if (soclinux_soc_rst) begin
        crg_rst <= 1'd1;
    end
end
assign soclinux_bus_error = error;
always @(*) begin
    soclinux_interrupt <= 32'd0;
    soclinux_interrupt[3] <= sdcard_irq_irq;
    soclinux_interrupt[2] <= soclinux_timer_irq;
    soclinux_interrupt[1] <= soclinux_uart_irq;
end
assign crg_reset = (cpu_reset | crg_rst);
assign sys_clk = crg_clkout_buf0;
assign sys4x_clk = crg_clkout_buf1;
assign idelay_clk = crg_clkout_buf2;
assign shared_adr = rhs_array_muxed0;
assign shared_dat_w = rhs_array_muxed1;
assign shared_sel = rhs_array_muxed2;
assign shared_cyc = rhs_array_muxed3;
assign shared_stb = rhs_array_muxed4;
assign shared_we = rhs_array_muxed5;
assign shared_cti = rhs_array_muxed6;
assign shared_bte = rhs_array_muxed7;
assign soclinux_pbus_dat_r = shared_dat_r;
assign interface0_bus_dat_r = shared_dat_r;
assign interface1_bus_dat_r = shared_dat_r;
assign soclinux_pbus_ack = (shared_ack & (grant == 1'd0));
assign interface0_bus_ack = (shared_ack & (grant == 1'd1));
assign interface1_bus_ack = (shared_ack & (grant == 2'd2));
assign soclinux_pbus_err = (shared_err & (grant == 1'd0));
assign interface0_bus_err = (shared_err & (grant == 1'd1));
assign interface1_bus_err = (shared_err & (grant == 2'd2));
assign request = {interface1_bus_cyc, interface0_bus_cyc, soclinux_pbus_cyc};
always @(*) begin
    slave_sel <= 6'd0;
    slave_sel[0] <= (shared_adr[31:20] == 10'd963);
    slave_sel[1] <= (shared_adr[31:14] == 16'd61441);
    slave_sel[2] <= (shared_adr[31:14] == 1'd0);
    slave_sel[3] <= (shared_adr[31:11] == 16'd32768);
    slave_sel[4] <= (shared_adr[31:27] == 2'd2);
    slave_sel[5] <= (shared_adr[31:14] == 16'd61440);
end
assign soclinux_plicbus_adr = shared_adr;
assign soclinux_plicbus_dat_w = shared_dat_w;
assign soclinux_plicbus_sel = shared_sel;
assign soclinux_plicbus_stb = shared_stb;
assign soclinux_plicbus_we = shared_we;
assign soclinux_plicbus_cti = shared_cti;
assign soclinux_plicbus_bte = shared_bte;
assign soclinux_clintbus_adr = shared_adr;
assign soclinux_clintbus_dat_w = shared_dat_w;
assign soclinux_clintbus_sel = shared_sel;
assign soclinux_clintbus_stb = shared_stb;
assign soclinux_clintbus_we = shared_we;
assign soclinux_clintbus_cti = shared_cti;
assign soclinux_clintbus_bte = shared_bte;
assign soclinux_soclinux_ram_bus_adr = shared_adr;
assign soclinux_soclinux_ram_bus_dat_w = shared_dat_w;
assign soclinux_soclinux_ram_bus_sel = shared_sel;
assign soclinux_soclinux_ram_bus_stb = shared_stb;
assign soclinux_soclinux_ram_bus_we = shared_we;
assign soclinux_soclinux_ram_bus_cti = shared_cti;
assign soclinux_soclinux_ram_bus_bte = shared_bte;
assign soclinux_ram_bus_ram_bus_adr = shared_adr;
assign soclinux_ram_bus_ram_bus_dat_w = shared_dat_w;
assign soclinux_ram_bus_ram_bus_sel = shared_sel;
assign soclinux_ram_bus_ram_bus_stb = shared_stb;
assign soclinux_ram_bus_ram_bus_we = shared_we;
assign soclinux_ram_bus_ram_bus_cti = shared_cti;
assign soclinux_ram_bus_ram_bus_bte = shared_bte;
assign soclinux_wb_sdram_adr = shared_adr;
assign soclinux_wb_sdram_dat_w = shared_dat_w;
assign soclinux_wb_sdram_sel = shared_sel;
assign soclinux_wb_sdram_stb = shared_stb;
assign soclinux_wb_sdram_we = shared_we;
assign soclinux_wb_sdram_cti = shared_cti;
assign soclinux_wb_sdram_bte = shared_bte;
assign interface0_adr = shared_adr;
assign interface0_dat_w = shared_dat_w;
assign interface0_sel = shared_sel;
assign interface0_stb = shared_stb;
assign interface0_we = shared_we;
assign interface0_cti = shared_cti;
assign interface0_bte = shared_bte;
assign soclinux_plicbus_cyc = (shared_cyc & slave_sel[0]);
assign soclinux_clintbus_cyc = (shared_cyc & slave_sel[1]);
assign soclinux_soclinux_ram_bus_cyc = (shared_cyc & slave_sel[2]);
assign soclinux_ram_bus_ram_bus_cyc = (shared_cyc & slave_sel[3]);
assign soclinux_wb_sdram_cyc = (shared_cyc & slave_sel[4]);
assign interface0_cyc = (shared_cyc & slave_sel[5]);
assign shared_err = (((((soclinux_plicbus_err | soclinux_clintbus_err) | soclinux_soclinux_ram_bus_err) | soclinux_ram_bus_ram_bus_err) | soclinux_wb_sdram_err) | interface0_err);
assign wait_1 = ((shared_stb & shared_cyc) & (~shared_ack));
always @(*) begin
    error <= 1'd0;
    shared_ack <= 1'd0;
    shared_dat_r <= 32'd0;
    shared_ack <= (((((soclinux_plicbus_ack | soclinux_clintbus_ack) | soclinux_soclinux_ram_bus_ack) | soclinux_ram_bus_ram_bus_ack) | soclinux_wb_sdram_ack) | interface0_ack);
    shared_dat_r <= (((((({32{slave_sel_r[0]}} & soclinux_plicbus_dat_r) | ({32{slave_sel_r[1]}} & soclinux_clintbus_dat_r)) | ({32{slave_sel_r[2]}} & soclinux_soclinux_ram_bus_dat_r)) | ({32{slave_sel_r[3]}} & soclinux_ram_bus_ram_bus_dat_r)) | ({32{slave_sel_r[4]}} & soclinux_wb_sdram_dat_r)) | ({32{slave_sel_r[5]}} & interface0_dat_r));
    if (done) begin
        shared_dat_r <= 32'd4294967295;
        shared_ack <= 1'd1;
        error <= 1'd1;
    end
end
assign done = (count == 1'd0);
assign soclinux_bus_errors_status = soclinux_bus_errors;
assign soclinux_soclinux_adr = soclinux_soclinux_ram_bus_adr[13:0];
assign soclinux_soclinux_ram_bus_dat_r = soclinux_soclinux_dat_r;
always @(*) begin
    soclinux_ram_we <= 4'd0;
    soclinux_ram_we[0] <= (((soclinux_ram_bus_ram_bus_cyc & soclinux_ram_bus_ram_bus_stb) & soclinux_ram_bus_ram_bus_we) & soclinux_ram_bus_ram_bus_sel[0]);
    soclinux_ram_we[1] <= (((soclinux_ram_bus_ram_bus_cyc & soclinux_ram_bus_ram_bus_stb) & soclinux_ram_bus_ram_bus_we) & soclinux_ram_bus_ram_bus_sel[1]);
    soclinux_ram_we[2] <= (((soclinux_ram_bus_ram_bus_cyc & soclinux_ram_bus_ram_bus_stb) & soclinux_ram_bus_ram_bus_we) & soclinux_ram_bus_ram_bus_sel[2]);
    soclinux_ram_we[3] <= (((soclinux_ram_bus_ram_bus_cyc & soclinux_ram_bus_ram_bus_stb) & soclinux_ram_bus_ram_bus_we) & soclinux_ram_bus_ram_bus_sel[3]);
end
assign soclinux_ram_adr = soclinux_ram_bus_ram_bus_adr[10:0];
assign soclinux_ram_bus_ram_bus_dat_r = soclinux_ram_dat_r;
assign soclinux_ram_dat_w = soclinux_ram_bus_ram_bus_dat_w;
always @(*) begin
    rs232phytx_next_state <= 1'd0;
    soclinux_serial_tx_rs232phytx_next_value1 <= 1'd0;
    soclinux_serial_tx_rs232phytx_next_value_ce1 <= 1'd0;
    soclinux_tx_count_rs232phytx_next_value0 <= 4'd0;
    soclinux_tx_count_rs232phytx_next_value_ce0 <= 1'd0;
    soclinux_tx_data_rs232phytx_next_value2 <= 8'd0;
    soclinux_tx_data_rs232phytx_next_value_ce2 <= 1'd0;
    soclinux_tx_enable <= 1'd0;
    soclinux_tx_sink_ready <= 1'd0;
    rs232phytx_next_state <= rs232phytx_state;
    case (rs232phytx_state)
        1'd1: begin
            soclinux_tx_enable <= 1'd1;
            if (soclinux_tx_tick) begin
                soclinux_serial_tx_rs232phytx_next_value1 <= soclinux_tx_data;
                soclinux_serial_tx_rs232phytx_next_value_ce1 <= 1'd1;
                soclinux_tx_count_rs232phytx_next_value0 <= (soclinux_tx_count + 1'd1);
                soclinux_tx_count_rs232phytx_next_value_ce0 <= 1'd1;
                soclinux_tx_data_rs232phytx_next_value2 <= {1'd1, soclinux_tx_data[7:1]};
                soclinux_tx_data_rs232phytx_next_value_ce2 <= 1'd1;
                if ((soclinux_tx_count == 4'd9)) begin
                    soclinux_tx_sink_ready <= 1'd1;
                    rs232phytx_next_state <= 1'd0;
                end
            end
        end
        default: begin
            soclinux_tx_count_rs232phytx_next_value0 <= 1'd0;
            soclinux_tx_count_rs232phytx_next_value_ce0 <= 1'd1;
            soclinux_serial_tx_rs232phytx_next_value1 <= 1'd1;
            soclinux_serial_tx_rs232phytx_next_value_ce1 <= 1'd1;
            if (soclinux_tx_sink_valid) begin
                soclinux_serial_tx_rs232phytx_next_value1 <= 1'd0;
                soclinux_serial_tx_rs232phytx_next_value_ce1 <= 1'd1;
                soclinux_tx_data_rs232phytx_next_value2 <= soclinux_tx_sink_payload_data;
                soclinux_tx_data_rs232phytx_next_value_ce2 <= 1'd1;
                rs232phytx_next_state <= 1'd1;
            end
        end
    endcase
end
always @(*) begin
    rs232phyrx_next_state <= 1'd0;
    soclinux_rx_count_rs232phyrx_next_value0 <= 4'd0;
    soclinux_rx_count_rs232phyrx_next_value_ce0 <= 1'd0;
    soclinux_rx_data_rs232phyrx_next_value1 <= 8'd0;
    soclinux_rx_data_rs232phyrx_next_value_ce1 <= 1'd0;
    soclinux_rx_enable <= 1'd0;
    soclinux_rx_source_payload_data <= 8'd0;
    soclinux_rx_source_valid <= 1'd0;
    rs232phyrx_next_state <= rs232phyrx_state;
    case (rs232phyrx_state)
        1'd1: begin
            soclinux_rx_enable <= 1'd1;
            if (soclinux_rx_tick) begin
                soclinux_rx_count_rs232phyrx_next_value0 <= (soclinux_rx_count + 1'd1);
                soclinux_rx_count_rs232phyrx_next_value_ce0 <= 1'd1;
                soclinux_rx_data_rs232phyrx_next_value1 <= {soclinux_rx_rx, soclinux_rx_data[7:1]};
                soclinux_rx_data_rs232phyrx_next_value_ce1 <= 1'd1;
                if ((soclinux_rx_count == 4'd9)) begin
                    soclinux_rx_source_valid <= (soclinux_rx_rx == 1'd1);
                    soclinux_rx_source_payload_data <= soclinux_rx_data;
                    rs232phyrx_next_state <= 1'd0;
                end
            end
        end
        default: begin
            soclinux_rx_count_rs232phyrx_next_value0 <= 1'd0;
            soclinux_rx_count_rs232phyrx_next_value_ce0 <= 1'd1;
            if (((soclinux_rx_rx == 1'd0) & (soclinux_rx_rx_d == 1'd1))) begin
                rs232phyrx_next_state <= 1'd1;
            end
        end
    endcase
end
assign soclinux_uart_uart_sink_valid = soclinux_rx_source_valid;
assign soclinux_rx_source_ready = soclinux_uart_uart_sink_ready;
assign soclinux_uart_uart_sink_first = soclinux_rx_source_first;
assign soclinux_uart_uart_sink_last = soclinux_rx_source_last;
assign soclinux_uart_uart_sink_payload_data = soclinux_rx_source_payload_data;
assign soclinux_tx_sink_valid = soclinux_uart_uart_source_valid;
assign soclinux_uart_uart_source_ready = soclinux_tx_sink_ready;
assign soclinux_tx_sink_first = soclinux_uart_uart_source_first;
assign soclinux_tx_sink_last = soclinux_uart_uart_source_last;
assign soclinux_tx_sink_payload_data = soclinux_uart_uart_source_payload_data;
assign soclinux_uart_tx_fifo_sink_valid = soclinux_uart_rxtx_re;
assign soclinux_uart_tx_fifo_sink_payload_data = soclinux_uart_rxtx_r;
assign soclinux_uart_uart_source_valid = soclinux_uart_tx_fifo_source_valid;
assign soclinux_uart_tx_fifo_source_ready = soclinux_uart_uart_source_ready;
assign soclinux_uart_uart_source_first = soclinux_uart_tx_fifo_source_first;
assign soclinux_uart_uart_source_last = soclinux_uart_tx_fifo_source_last;
assign soclinux_uart_uart_source_payload_data = soclinux_uart_tx_fifo_source_payload_data;
assign soclinux_uart_txfull_status = (~soclinux_uart_tx_fifo_sink_ready);
assign soclinux_uart_txempty_status = (~soclinux_uart_tx_fifo_source_valid);
assign soclinux_uart_tx_trigger = soclinux_uart_tx_fifo_sink_ready;
assign soclinux_uart_rx_fifo_sink_valid = soclinux_uart_uart_sink_valid;
assign soclinux_uart_uart_sink_ready = soclinux_uart_rx_fifo_sink_ready;
assign soclinux_uart_rx_fifo_sink_first = soclinux_uart_uart_sink_first;
assign soclinux_uart_rx_fifo_sink_last = soclinux_uart_uart_sink_last;
assign soclinux_uart_rx_fifo_sink_payload_data = soclinux_uart_uart_sink_payload_data;
assign soclinux_uart_rxtx_w = soclinux_uart_rx_fifo_source_payload_data;
assign soclinux_uart_rx_fifo_source_ready = (soclinux_uart_rx_clear | (1'd0 & soclinux_uart_rxtx_we));
assign soclinux_uart_rxempty_status = (~soclinux_uart_rx_fifo_source_valid);
assign soclinux_uart_rxfull_status = (~soclinux_uart_rx_fifo_sink_ready);
assign soclinux_uart_rx_trigger = soclinux_uart_rx_fifo_source_valid;
assign soclinux_uart_tx0 = soclinux_uart_tx_status;
assign soclinux_uart_tx1 = soclinux_uart_tx_pending;
always @(*) begin
    soclinux_uart_tx_clear <= 1'd0;
    if ((soclinux_uart_pending_re & soclinux_uart_pending_r[0])) begin
        soclinux_uart_tx_clear <= 1'd1;
    end
end
assign soclinux_uart_rx0 = soclinux_uart_rx_status;
assign soclinux_uart_rx1 = soclinux_uart_rx_pending;
always @(*) begin
    soclinux_uart_rx_clear <= 1'd0;
    if ((soclinux_uart_pending_re & soclinux_uart_pending_r[1])) begin
        soclinux_uart_rx_clear <= 1'd1;
    end
end
assign soclinux_uart_irq = ((soclinux_uart_pending_status[0] & soclinux_uart_enable_storage[0]) | (soclinux_uart_pending_status[1] & soclinux_uart_enable_storage[1]));
assign soclinux_uart_tx_status = soclinux_uart_tx_trigger;
assign soclinux_uart_rx_status = soclinux_uart_rx_trigger;
assign soclinux_uart_tx_fifo_syncfifo_din = {soclinux_uart_tx_fifo_fifo_in_last, soclinux_uart_tx_fifo_fifo_in_first, soclinux_uart_tx_fifo_fifo_in_payload_data};
assign {soclinux_uart_tx_fifo_fifo_out_last, soclinux_uart_tx_fifo_fifo_out_first, soclinux_uart_tx_fifo_fifo_out_payload_data} = soclinux_uart_tx_fifo_syncfifo_dout;
assign soclinux_uart_tx_fifo_sink_ready = soclinux_uart_tx_fifo_syncfifo_writable;
assign soclinux_uart_tx_fifo_syncfifo_we = soclinux_uart_tx_fifo_sink_valid;
assign soclinux_uart_tx_fifo_fifo_in_first = soclinux_uart_tx_fifo_sink_first;
assign soclinux_uart_tx_fifo_fifo_in_last = soclinux_uart_tx_fifo_sink_last;
assign soclinux_uart_tx_fifo_fifo_in_payload_data = soclinux_uart_tx_fifo_sink_payload_data;
assign soclinux_uart_tx_fifo_source_valid = soclinux_uart_tx_fifo_readable;
assign soclinux_uart_tx_fifo_source_first = soclinux_uart_tx_fifo_fifo_out_first;
assign soclinux_uart_tx_fifo_source_last = soclinux_uart_tx_fifo_fifo_out_last;
assign soclinux_uart_tx_fifo_source_payload_data = soclinux_uart_tx_fifo_fifo_out_payload_data;
assign soclinux_uart_tx_fifo_re = soclinux_uart_tx_fifo_source_ready;
assign soclinux_uart_tx_fifo_syncfifo_re = (soclinux_uart_tx_fifo_syncfifo_readable & ((~soclinux_uart_tx_fifo_readable) | soclinux_uart_tx_fifo_re));
assign soclinux_uart_tx_fifo_level1 = (soclinux_uart_tx_fifo_level0 + soclinux_uart_tx_fifo_readable);
always @(*) begin
    soclinux_uart_tx_fifo_wrport_adr <= 4'd0;
    if (soclinux_uart_tx_fifo_replace) begin
        soclinux_uart_tx_fifo_wrport_adr <= (soclinux_uart_tx_fifo_produce - 1'd1);
    end else begin
        soclinux_uart_tx_fifo_wrport_adr <= soclinux_uart_tx_fifo_produce;
    end
end
assign soclinux_uart_tx_fifo_wrport_dat_w = soclinux_uart_tx_fifo_syncfifo_din;
assign soclinux_uart_tx_fifo_wrport_we = (soclinux_uart_tx_fifo_syncfifo_we & (soclinux_uart_tx_fifo_syncfifo_writable | soclinux_uart_tx_fifo_replace));
assign soclinux_uart_tx_fifo_do_read = (soclinux_uart_tx_fifo_syncfifo_readable & soclinux_uart_tx_fifo_syncfifo_re);
assign soclinux_uart_tx_fifo_rdport_adr = soclinux_uart_tx_fifo_consume;
assign soclinux_uart_tx_fifo_syncfifo_dout = soclinux_uart_tx_fifo_rdport_dat_r;
assign soclinux_uart_tx_fifo_rdport_re = soclinux_uart_tx_fifo_do_read;
assign soclinux_uart_tx_fifo_syncfifo_writable = (soclinux_uart_tx_fifo_level0 != 5'd16);
assign soclinux_uart_tx_fifo_syncfifo_readable = (soclinux_uart_tx_fifo_level0 != 1'd0);
assign soclinux_uart_rx_fifo_syncfifo_din = {soclinux_uart_rx_fifo_fifo_in_last, soclinux_uart_rx_fifo_fifo_in_first, soclinux_uart_rx_fifo_fifo_in_payload_data};
assign {soclinux_uart_rx_fifo_fifo_out_last, soclinux_uart_rx_fifo_fifo_out_first, soclinux_uart_rx_fifo_fifo_out_payload_data} = soclinux_uart_rx_fifo_syncfifo_dout;
assign soclinux_uart_rx_fifo_sink_ready = soclinux_uart_rx_fifo_syncfifo_writable;
assign soclinux_uart_rx_fifo_syncfifo_we = soclinux_uart_rx_fifo_sink_valid;
assign soclinux_uart_rx_fifo_fifo_in_first = soclinux_uart_rx_fifo_sink_first;
assign soclinux_uart_rx_fifo_fifo_in_last = soclinux_uart_rx_fifo_sink_last;
assign soclinux_uart_rx_fifo_fifo_in_payload_data = soclinux_uart_rx_fifo_sink_payload_data;
assign soclinux_uart_rx_fifo_source_valid = soclinux_uart_rx_fifo_readable;
assign soclinux_uart_rx_fifo_source_first = soclinux_uart_rx_fifo_fifo_out_first;
assign soclinux_uart_rx_fifo_source_last = soclinux_uart_rx_fifo_fifo_out_last;
assign soclinux_uart_rx_fifo_source_payload_data = soclinux_uart_rx_fifo_fifo_out_payload_data;
assign soclinux_uart_rx_fifo_re = soclinux_uart_rx_fifo_source_ready;
assign soclinux_uart_rx_fifo_syncfifo_re = (soclinux_uart_rx_fifo_syncfifo_readable & ((~soclinux_uart_rx_fifo_readable) | soclinux_uart_rx_fifo_re));
assign soclinux_uart_rx_fifo_level1 = (soclinux_uart_rx_fifo_level0 + soclinux_uart_rx_fifo_readable);
always @(*) begin
    soclinux_uart_rx_fifo_wrport_adr <= 4'd0;
    if (soclinux_uart_rx_fifo_replace) begin
        soclinux_uart_rx_fifo_wrport_adr <= (soclinux_uart_rx_fifo_produce - 1'd1);
    end else begin
        soclinux_uart_rx_fifo_wrport_adr <= soclinux_uart_rx_fifo_produce;
    end
end
assign soclinux_uart_rx_fifo_wrport_dat_w = soclinux_uart_rx_fifo_syncfifo_din;
assign soclinux_uart_rx_fifo_wrport_we = (soclinux_uart_rx_fifo_syncfifo_we & (soclinux_uart_rx_fifo_syncfifo_writable | soclinux_uart_rx_fifo_replace));
assign soclinux_uart_rx_fifo_do_read = (soclinux_uart_rx_fifo_syncfifo_readable & soclinux_uart_rx_fifo_syncfifo_re);
assign soclinux_uart_rx_fifo_rdport_adr = soclinux_uart_rx_fifo_consume;
assign soclinux_uart_rx_fifo_syncfifo_dout = soclinux_uart_rx_fifo_rdport_dat_r;
assign soclinux_uart_rx_fifo_rdport_re = soclinux_uart_rx_fifo_do_read;
assign soclinux_uart_rx_fifo_syncfifo_writable = (soclinux_uart_rx_fifo_level0 != 5'd16);
assign soclinux_uart_rx_fifo_syncfifo_readable = (soclinux_uart_rx_fifo_level0 != 1'd0);
assign soclinux_timer_zero_trigger = (soclinux_timer_value == 1'd0);
assign soclinux_timer_zero0 = soclinux_timer_zero_status;
assign soclinux_timer_zero1 = soclinux_timer_zero_pending;
always @(*) begin
    soclinux_timer_zero_clear <= 1'd0;
    if ((soclinux_timer_pending_re & soclinux_timer_pending_r)) begin
        soclinux_timer_zero_clear <= 1'd1;
    end
end
assign soclinux_timer_irq = (soclinux_timer_pending_status & soclinux_timer_enable_storage);
assign soclinux_timer_zero_status = soclinux_timer_zero_trigger;
assign ddram_ba = v7ddrphy_pads_ba;
assign v7ddrphy_dqs_oe_delay_tappeddelayline = ((v7ddrphy_dqs_preamble | v7ddrphy_dqs_oe) | v7ddrphy_dqs_postamble);
assign v7ddrphy_dq_oe_delay_tappeddelayline = ((v7ddrphy_dqs_preamble | v7ddrphy_dq_oe) | v7ddrphy_dqs_postamble);
always @(*) begin
    v7ddrphy_dfi_p0_rddata <= 64'd0;
    v7ddrphy_dfi_p0_rddata[0] <= v7ddrphy_bitslip04[0];
    v7ddrphy_dfi_p0_rddata[32] <= v7ddrphy_bitslip04[1];
    v7ddrphy_dfi_p0_rddata[1] <= v7ddrphy_bitslip14[0];
    v7ddrphy_dfi_p0_rddata[33] <= v7ddrphy_bitslip14[1];
    v7ddrphy_dfi_p0_rddata[2] <= v7ddrphy_bitslip24[0];
    v7ddrphy_dfi_p0_rddata[34] <= v7ddrphy_bitslip24[1];
    v7ddrphy_dfi_p0_rddata[3] <= v7ddrphy_bitslip34[0];
    v7ddrphy_dfi_p0_rddata[35] <= v7ddrphy_bitslip34[1];
    v7ddrphy_dfi_p0_rddata[4] <= v7ddrphy_bitslip42[0];
    v7ddrphy_dfi_p0_rddata[36] <= v7ddrphy_bitslip42[1];
    v7ddrphy_dfi_p0_rddata[5] <= v7ddrphy_bitslip52[0];
    v7ddrphy_dfi_p0_rddata[37] <= v7ddrphy_bitslip52[1];
    v7ddrphy_dfi_p0_rddata[6] <= v7ddrphy_bitslip62[0];
    v7ddrphy_dfi_p0_rddata[38] <= v7ddrphy_bitslip62[1];
    v7ddrphy_dfi_p0_rddata[7] <= v7ddrphy_bitslip72[0];
    v7ddrphy_dfi_p0_rddata[39] <= v7ddrphy_bitslip72[1];
    v7ddrphy_dfi_p0_rddata[8] <= v7ddrphy_bitslip82[0];
    v7ddrphy_dfi_p0_rddata[40] <= v7ddrphy_bitslip82[1];
    v7ddrphy_dfi_p0_rddata[9] <= v7ddrphy_bitslip92[0];
    v7ddrphy_dfi_p0_rddata[41] <= v7ddrphy_bitslip92[1];
    v7ddrphy_dfi_p0_rddata[10] <= v7ddrphy_bitslip102[0];
    v7ddrphy_dfi_p0_rddata[42] <= v7ddrphy_bitslip102[1];
    v7ddrphy_dfi_p0_rddata[11] <= v7ddrphy_bitslip112[0];
    v7ddrphy_dfi_p0_rddata[43] <= v7ddrphy_bitslip112[1];
    v7ddrphy_dfi_p0_rddata[12] <= v7ddrphy_bitslip122[0];
    v7ddrphy_dfi_p0_rddata[44] <= v7ddrphy_bitslip122[1];
    v7ddrphy_dfi_p0_rddata[13] <= v7ddrphy_bitslip132[0];
    v7ddrphy_dfi_p0_rddata[45] <= v7ddrphy_bitslip132[1];
    v7ddrphy_dfi_p0_rddata[14] <= v7ddrphy_bitslip142[0];
    v7ddrphy_dfi_p0_rddata[46] <= v7ddrphy_bitslip142[1];
    v7ddrphy_dfi_p0_rddata[15] <= v7ddrphy_bitslip152[0];
    v7ddrphy_dfi_p0_rddata[47] <= v7ddrphy_bitslip152[1];
    v7ddrphy_dfi_p0_rddata[16] <= v7ddrphy_bitslip162[0];
    v7ddrphy_dfi_p0_rddata[48] <= v7ddrphy_bitslip162[1];
    v7ddrphy_dfi_p0_rddata[17] <= v7ddrphy_bitslip172[0];
    v7ddrphy_dfi_p0_rddata[49] <= v7ddrphy_bitslip172[1];
    v7ddrphy_dfi_p0_rddata[18] <= v7ddrphy_bitslip182[0];
    v7ddrphy_dfi_p0_rddata[50] <= v7ddrphy_bitslip182[1];
    v7ddrphy_dfi_p0_rddata[19] <= v7ddrphy_bitslip192[0];
    v7ddrphy_dfi_p0_rddata[51] <= v7ddrphy_bitslip192[1];
    v7ddrphy_dfi_p0_rddata[20] <= v7ddrphy_bitslip202[0];
    v7ddrphy_dfi_p0_rddata[52] <= v7ddrphy_bitslip202[1];
    v7ddrphy_dfi_p0_rddata[21] <= v7ddrphy_bitslip212[0];
    v7ddrphy_dfi_p0_rddata[53] <= v7ddrphy_bitslip212[1];
    v7ddrphy_dfi_p0_rddata[22] <= v7ddrphy_bitslip222[0];
    v7ddrphy_dfi_p0_rddata[54] <= v7ddrphy_bitslip222[1];
    v7ddrphy_dfi_p0_rddata[23] <= v7ddrphy_bitslip232[0];
    v7ddrphy_dfi_p0_rddata[55] <= v7ddrphy_bitslip232[1];
    v7ddrphy_dfi_p0_rddata[24] <= v7ddrphy_bitslip242[0];
    v7ddrphy_dfi_p0_rddata[56] <= v7ddrphy_bitslip242[1];
    v7ddrphy_dfi_p0_rddata[25] <= v7ddrphy_bitslip252[0];
    v7ddrphy_dfi_p0_rddata[57] <= v7ddrphy_bitslip252[1];
    v7ddrphy_dfi_p0_rddata[26] <= v7ddrphy_bitslip262[0];
    v7ddrphy_dfi_p0_rddata[58] <= v7ddrphy_bitslip262[1];
    v7ddrphy_dfi_p0_rddata[27] <= v7ddrphy_bitslip272[0];
    v7ddrphy_dfi_p0_rddata[59] <= v7ddrphy_bitslip272[1];
    v7ddrphy_dfi_p0_rddata[28] <= v7ddrphy_bitslip282[0];
    v7ddrphy_dfi_p0_rddata[60] <= v7ddrphy_bitslip282[1];
    v7ddrphy_dfi_p0_rddata[29] <= v7ddrphy_bitslip292[0];
    v7ddrphy_dfi_p0_rddata[61] <= v7ddrphy_bitslip292[1];
    v7ddrphy_dfi_p0_rddata[30] <= v7ddrphy_bitslip302[0];
    v7ddrphy_dfi_p0_rddata[62] <= v7ddrphy_bitslip302[1];
    v7ddrphy_dfi_p0_rddata[31] <= v7ddrphy_bitslip312[0];
    v7ddrphy_dfi_p0_rddata[63] <= v7ddrphy_bitslip312[1];
end
always @(*) begin
    v7ddrphy_dfi_p1_rddata <= 64'd0;
    v7ddrphy_dfi_p1_rddata[0] <= v7ddrphy_bitslip04[2];
    v7ddrphy_dfi_p1_rddata[32] <= v7ddrphy_bitslip04[3];
    v7ddrphy_dfi_p1_rddata[1] <= v7ddrphy_bitslip14[2];
    v7ddrphy_dfi_p1_rddata[33] <= v7ddrphy_bitslip14[3];
    v7ddrphy_dfi_p1_rddata[2] <= v7ddrphy_bitslip24[2];
    v7ddrphy_dfi_p1_rddata[34] <= v7ddrphy_bitslip24[3];
    v7ddrphy_dfi_p1_rddata[3] <= v7ddrphy_bitslip34[2];
    v7ddrphy_dfi_p1_rddata[35] <= v7ddrphy_bitslip34[3];
    v7ddrphy_dfi_p1_rddata[4] <= v7ddrphy_bitslip42[2];
    v7ddrphy_dfi_p1_rddata[36] <= v7ddrphy_bitslip42[3];
    v7ddrphy_dfi_p1_rddata[5] <= v7ddrphy_bitslip52[2];
    v7ddrphy_dfi_p1_rddata[37] <= v7ddrphy_bitslip52[3];
    v7ddrphy_dfi_p1_rddata[6] <= v7ddrphy_bitslip62[2];
    v7ddrphy_dfi_p1_rddata[38] <= v7ddrphy_bitslip62[3];
    v7ddrphy_dfi_p1_rddata[7] <= v7ddrphy_bitslip72[2];
    v7ddrphy_dfi_p1_rddata[39] <= v7ddrphy_bitslip72[3];
    v7ddrphy_dfi_p1_rddata[8] <= v7ddrphy_bitslip82[2];
    v7ddrphy_dfi_p1_rddata[40] <= v7ddrphy_bitslip82[3];
    v7ddrphy_dfi_p1_rddata[9] <= v7ddrphy_bitslip92[2];
    v7ddrphy_dfi_p1_rddata[41] <= v7ddrphy_bitslip92[3];
    v7ddrphy_dfi_p1_rddata[10] <= v7ddrphy_bitslip102[2];
    v7ddrphy_dfi_p1_rddata[42] <= v7ddrphy_bitslip102[3];
    v7ddrphy_dfi_p1_rddata[11] <= v7ddrphy_bitslip112[2];
    v7ddrphy_dfi_p1_rddata[43] <= v7ddrphy_bitslip112[3];
    v7ddrphy_dfi_p1_rddata[12] <= v7ddrphy_bitslip122[2];
    v7ddrphy_dfi_p1_rddata[44] <= v7ddrphy_bitslip122[3];
    v7ddrphy_dfi_p1_rddata[13] <= v7ddrphy_bitslip132[2];
    v7ddrphy_dfi_p1_rddata[45] <= v7ddrphy_bitslip132[3];
    v7ddrphy_dfi_p1_rddata[14] <= v7ddrphy_bitslip142[2];
    v7ddrphy_dfi_p1_rddata[46] <= v7ddrphy_bitslip142[3];
    v7ddrphy_dfi_p1_rddata[15] <= v7ddrphy_bitslip152[2];
    v7ddrphy_dfi_p1_rddata[47] <= v7ddrphy_bitslip152[3];
    v7ddrphy_dfi_p1_rddata[16] <= v7ddrphy_bitslip162[2];
    v7ddrphy_dfi_p1_rddata[48] <= v7ddrphy_bitslip162[3];
    v7ddrphy_dfi_p1_rddata[17] <= v7ddrphy_bitslip172[2];
    v7ddrphy_dfi_p1_rddata[49] <= v7ddrphy_bitslip172[3];
    v7ddrphy_dfi_p1_rddata[18] <= v7ddrphy_bitslip182[2];
    v7ddrphy_dfi_p1_rddata[50] <= v7ddrphy_bitslip182[3];
    v7ddrphy_dfi_p1_rddata[19] <= v7ddrphy_bitslip192[2];
    v7ddrphy_dfi_p1_rddata[51] <= v7ddrphy_bitslip192[3];
    v7ddrphy_dfi_p1_rddata[20] <= v7ddrphy_bitslip202[2];
    v7ddrphy_dfi_p1_rddata[52] <= v7ddrphy_bitslip202[3];
    v7ddrphy_dfi_p1_rddata[21] <= v7ddrphy_bitslip212[2];
    v7ddrphy_dfi_p1_rddata[53] <= v7ddrphy_bitslip212[3];
    v7ddrphy_dfi_p1_rddata[22] <= v7ddrphy_bitslip222[2];
    v7ddrphy_dfi_p1_rddata[54] <= v7ddrphy_bitslip222[3];
    v7ddrphy_dfi_p1_rddata[23] <= v7ddrphy_bitslip232[2];
    v7ddrphy_dfi_p1_rddata[55] <= v7ddrphy_bitslip232[3];
    v7ddrphy_dfi_p1_rddata[24] <= v7ddrphy_bitslip242[2];
    v7ddrphy_dfi_p1_rddata[56] <= v7ddrphy_bitslip242[3];
    v7ddrphy_dfi_p1_rddata[25] <= v7ddrphy_bitslip252[2];
    v7ddrphy_dfi_p1_rddata[57] <= v7ddrphy_bitslip252[3];
    v7ddrphy_dfi_p1_rddata[26] <= v7ddrphy_bitslip262[2];
    v7ddrphy_dfi_p1_rddata[58] <= v7ddrphy_bitslip262[3];
    v7ddrphy_dfi_p1_rddata[27] <= v7ddrphy_bitslip272[2];
    v7ddrphy_dfi_p1_rddata[59] <= v7ddrphy_bitslip272[3];
    v7ddrphy_dfi_p1_rddata[28] <= v7ddrphy_bitslip282[2];
    v7ddrphy_dfi_p1_rddata[60] <= v7ddrphy_bitslip282[3];
    v7ddrphy_dfi_p1_rddata[29] <= v7ddrphy_bitslip292[2];
    v7ddrphy_dfi_p1_rddata[61] <= v7ddrphy_bitslip292[3];
    v7ddrphy_dfi_p1_rddata[30] <= v7ddrphy_bitslip302[2];
    v7ddrphy_dfi_p1_rddata[62] <= v7ddrphy_bitslip302[3];
    v7ddrphy_dfi_p1_rddata[31] <= v7ddrphy_bitslip312[2];
    v7ddrphy_dfi_p1_rddata[63] <= v7ddrphy_bitslip312[3];
end
always @(*) begin
    v7ddrphy_dfi_p2_rddata <= 64'd0;
    v7ddrphy_dfi_p2_rddata[0] <= v7ddrphy_bitslip04[4];
    v7ddrphy_dfi_p2_rddata[32] <= v7ddrphy_bitslip04[5];
    v7ddrphy_dfi_p2_rddata[1] <= v7ddrphy_bitslip14[4];
    v7ddrphy_dfi_p2_rddata[33] <= v7ddrphy_bitslip14[5];
    v7ddrphy_dfi_p2_rddata[2] <= v7ddrphy_bitslip24[4];
    v7ddrphy_dfi_p2_rddata[34] <= v7ddrphy_bitslip24[5];
    v7ddrphy_dfi_p2_rddata[3] <= v7ddrphy_bitslip34[4];
    v7ddrphy_dfi_p2_rddata[35] <= v7ddrphy_bitslip34[5];
    v7ddrphy_dfi_p2_rddata[4] <= v7ddrphy_bitslip42[4];
    v7ddrphy_dfi_p2_rddata[36] <= v7ddrphy_bitslip42[5];
    v7ddrphy_dfi_p2_rddata[5] <= v7ddrphy_bitslip52[4];
    v7ddrphy_dfi_p2_rddata[37] <= v7ddrphy_bitslip52[5];
    v7ddrphy_dfi_p2_rddata[6] <= v7ddrphy_bitslip62[4];
    v7ddrphy_dfi_p2_rddata[38] <= v7ddrphy_bitslip62[5];
    v7ddrphy_dfi_p2_rddata[7] <= v7ddrphy_bitslip72[4];
    v7ddrphy_dfi_p2_rddata[39] <= v7ddrphy_bitslip72[5];
    v7ddrphy_dfi_p2_rddata[8] <= v7ddrphy_bitslip82[4];
    v7ddrphy_dfi_p2_rddata[40] <= v7ddrphy_bitslip82[5];
    v7ddrphy_dfi_p2_rddata[9] <= v7ddrphy_bitslip92[4];
    v7ddrphy_dfi_p2_rddata[41] <= v7ddrphy_bitslip92[5];
    v7ddrphy_dfi_p2_rddata[10] <= v7ddrphy_bitslip102[4];
    v7ddrphy_dfi_p2_rddata[42] <= v7ddrphy_bitslip102[5];
    v7ddrphy_dfi_p2_rddata[11] <= v7ddrphy_bitslip112[4];
    v7ddrphy_dfi_p2_rddata[43] <= v7ddrphy_bitslip112[5];
    v7ddrphy_dfi_p2_rddata[12] <= v7ddrphy_bitslip122[4];
    v7ddrphy_dfi_p2_rddata[44] <= v7ddrphy_bitslip122[5];
    v7ddrphy_dfi_p2_rddata[13] <= v7ddrphy_bitslip132[4];
    v7ddrphy_dfi_p2_rddata[45] <= v7ddrphy_bitslip132[5];
    v7ddrphy_dfi_p2_rddata[14] <= v7ddrphy_bitslip142[4];
    v7ddrphy_dfi_p2_rddata[46] <= v7ddrphy_bitslip142[5];
    v7ddrphy_dfi_p2_rddata[15] <= v7ddrphy_bitslip152[4];
    v7ddrphy_dfi_p2_rddata[47] <= v7ddrphy_bitslip152[5];
    v7ddrphy_dfi_p2_rddata[16] <= v7ddrphy_bitslip162[4];
    v7ddrphy_dfi_p2_rddata[48] <= v7ddrphy_bitslip162[5];
    v7ddrphy_dfi_p2_rddata[17] <= v7ddrphy_bitslip172[4];
    v7ddrphy_dfi_p2_rddata[49] <= v7ddrphy_bitslip172[5];
    v7ddrphy_dfi_p2_rddata[18] <= v7ddrphy_bitslip182[4];
    v7ddrphy_dfi_p2_rddata[50] <= v7ddrphy_bitslip182[5];
    v7ddrphy_dfi_p2_rddata[19] <= v7ddrphy_bitslip192[4];
    v7ddrphy_dfi_p2_rddata[51] <= v7ddrphy_bitslip192[5];
    v7ddrphy_dfi_p2_rddata[20] <= v7ddrphy_bitslip202[4];
    v7ddrphy_dfi_p2_rddata[52] <= v7ddrphy_bitslip202[5];
    v7ddrphy_dfi_p2_rddata[21] <= v7ddrphy_bitslip212[4];
    v7ddrphy_dfi_p2_rddata[53] <= v7ddrphy_bitslip212[5];
    v7ddrphy_dfi_p2_rddata[22] <= v7ddrphy_bitslip222[4];
    v7ddrphy_dfi_p2_rddata[54] <= v7ddrphy_bitslip222[5];
    v7ddrphy_dfi_p2_rddata[23] <= v7ddrphy_bitslip232[4];
    v7ddrphy_dfi_p2_rddata[55] <= v7ddrphy_bitslip232[5];
    v7ddrphy_dfi_p2_rddata[24] <= v7ddrphy_bitslip242[4];
    v7ddrphy_dfi_p2_rddata[56] <= v7ddrphy_bitslip242[5];
    v7ddrphy_dfi_p2_rddata[25] <= v7ddrphy_bitslip252[4];
    v7ddrphy_dfi_p2_rddata[57] <= v7ddrphy_bitslip252[5];
    v7ddrphy_dfi_p2_rddata[26] <= v7ddrphy_bitslip262[4];
    v7ddrphy_dfi_p2_rddata[58] <= v7ddrphy_bitslip262[5];
    v7ddrphy_dfi_p2_rddata[27] <= v7ddrphy_bitslip272[4];
    v7ddrphy_dfi_p2_rddata[59] <= v7ddrphy_bitslip272[5];
    v7ddrphy_dfi_p2_rddata[28] <= v7ddrphy_bitslip282[4];
    v7ddrphy_dfi_p2_rddata[60] <= v7ddrphy_bitslip282[5];
    v7ddrphy_dfi_p2_rddata[29] <= v7ddrphy_bitslip292[4];
    v7ddrphy_dfi_p2_rddata[61] <= v7ddrphy_bitslip292[5];
    v7ddrphy_dfi_p2_rddata[30] <= v7ddrphy_bitslip302[4];
    v7ddrphy_dfi_p2_rddata[62] <= v7ddrphy_bitslip302[5];
    v7ddrphy_dfi_p2_rddata[31] <= v7ddrphy_bitslip312[4];
    v7ddrphy_dfi_p2_rddata[63] <= v7ddrphy_bitslip312[5];
end
always @(*) begin
    v7ddrphy_dfi_p3_rddata <= 64'd0;
    v7ddrphy_dfi_p3_rddata[0] <= v7ddrphy_bitslip04[6];
    v7ddrphy_dfi_p3_rddata[32] <= v7ddrphy_bitslip04[7];
    v7ddrphy_dfi_p3_rddata[1] <= v7ddrphy_bitslip14[6];
    v7ddrphy_dfi_p3_rddata[33] <= v7ddrphy_bitslip14[7];
    v7ddrphy_dfi_p3_rddata[2] <= v7ddrphy_bitslip24[6];
    v7ddrphy_dfi_p3_rddata[34] <= v7ddrphy_bitslip24[7];
    v7ddrphy_dfi_p3_rddata[3] <= v7ddrphy_bitslip34[6];
    v7ddrphy_dfi_p3_rddata[35] <= v7ddrphy_bitslip34[7];
    v7ddrphy_dfi_p3_rddata[4] <= v7ddrphy_bitslip42[6];
    v7ddrphy_dfi_p3_rddata[36] <= v7ddrphy_bitslip42[7];
    v7ddrphy_dfi_p3_rddata[5] <= v7ddrphy_bitslip52[6];
    v7ddrphy_dfi_p3_rddata[37] <= v7ddrphy_bitslip52[7];
    v7ddrphy_dfi_p3_rddata[6] <= v7ddrphy_bitslip62[6];
    v7ddrphy_dfi_p3_rddata[38] <= v7ddrphy_bitslip62[7];
    v7ddrphy_dfi_p3_rddata[7] <= v7ddrphy_bitslip72[6];
    v7ddrphy_dfi_p3_rddata[39] <= v7ddrphy_bitslip72[7];
    v7ddrphy_dfi_p3_rddata[8] <= v7ddrphy_bitslip82[6];
    v7ddrphy_dfi_p3_rddata[40] <= v7ddrphy_bitslip82[7];
    v7ddrphy_dfi_p3_rddata[9] <= v7ddrphy_bitslip92[6];
    v7ddrphy_dfi_p3_rddata[41] <= v7ddrphy_bitslip92[7];
    v7ddrphy_dfi_p3_rddata[10] <= v7ddrphy_bitslip102[6];
    v7ddrphy_dfi_p3_rddata[42] <= v7ddrphy_bitslip102[7];
    v7ddrphy_dfi_p3_rddata[11] <= v7ddrphy_bitslip112[6];
    v7ddrphy_dfi_p3_rddata[43] <= v7ddrphy_bitslip112[7];
    v7ddrphy_dfi_p3_rddata[12] <= v7ddrphy_bitslip122[6];
    v7ddrphy_dfi_p3_rddata[44] <= v7ddrphy_bitslip122[7];
    v7ddrphy_dfi_p3_rddata[13] <= v7ddrphy_bitslip132[6];
    v7ddrphy_dfi_p3_rddata[45] <= v7ddrphy_bitslip132[7];
    v7ddrphy_dfi_p3_rddata[14] <= v7ddrphy_bitslip142[6];
    v7ddrphy_dfi_p3_rddata[46] <= v7ddrphy_bitslip142[7];
    v7ddrphy_dfi_p3_rddata[15] <= v7ddrphy_bitslip152[6];
    v7ddrphy_dfi_p3_rddata[47] <= v7ddrphy_bitslip152[7];
    v7ddrphy_dfi_p3_rddata[16] <= v7ddrphy_bitslip162[6];
    v7ddrphy_dfi_p3_rddata[48] <= v7ddrphy_bitslip162[7];
    v7ddrphy_dfi_p3_rddata[17] <= v7ddrphy_bitslip172[6];
    v7ddrphy_dfi_p3_rddata[49] <= v7ddrphy_bitslip172[7];
    v7ddrphy_dfi_p3_rddata[18] <= v7ddrphy_bitslip182[6];
    v7ddrphy_dfi_p3_rddata[50] <= v7ddrphy_bitslip182[7];
    v7ddrphy_dfi_p3_rddata[19] <= v7ddrphy_bitslip192[6];
    v7ddrphy_dfi_p3_rddata[51] <= v7ddrphy_bitslip192[7];
    v7ddrphy_dfi_p3_rddata[20] <= v7ddrphy_bitslip202[6];
    v7ddrphy_dfi_p3_rddata[52] <= v7ddrphy_bitslip202[7];
    v7ddrphy_dfi_p3_rddata[21] <= v7ddrphy_bitslip212[6];
    v7ddrphy_dfi_p3_rddata[53] <= v7ddrphy_bitslip212[7];
    v7ddrphy_dfi_p3_rddata[22] <= v7ddrphy_bitslip222[6];
    v7ddrphy_dfi_p3_rddata[54] <= v7ddrphy_bitslip222[7];
    v7ddrphy_dfi_p3_rddata[23] <= v7ddrphy_bitslip232[6];
    v7ddrphy_dfi_p3_rddata[55] <= v7ddrphy_bitslip232[7];
    v7ddrphy_dfi_p3_rddata[24] <= v7ddrphy_bitslip242[6];
    v7ddrphy_dfi_p3_rddata[56] <= v7ddrphy_bitslip242[7];
    v7ddrphy_dfi_p3_rddata[25] <= v7ddrphy_bitslip252[6];
    v7ddrphy_dfi_p3_rddata[57] <= v7ddrphy_bitslip252[7];
    v7ddrphy_dfi_p3_rddata[26] <= v7ddrphy_bitslip262[6];
    v7ddrphy_dfi_p3_rddata[58] <= v7ddrphy_bitslip262[7];
    v7ddrphy_dfi_p3_rddata[27] <= v7ddrphy_bitslip272[6];
    v7ddrphy_dfi_p3_rddata[59] <= v7ddrphy_bitslip272[7];
    v7ddrphy_dfi_p3_rddata[28] <= v7ddrphy_bitslip282[6];
    v7ddrphy_dfi_p3_rddata[60] <= v7ddrphy_bitslip282[7];
    v7ddrphy_dfi_p3_rddata[29] <= v7ddrphy_bitslip292[6];
    v7ddrphy_dfi_p3_rddata[61] <= v7ddrphy_bitslip292[7];
    v7ddrphy_dfi_p3_rddata[30] <= v7ddrphy_bitslip302[6];
    v7ddrphy_dfi_p3_rddata[62] <= v7ddrphy_bitslip302[7];
    v7ddrphy_dfi_p3_rddata[31] <= v7ddrphy_bitslip312[6];
    v7ddrphy_dfi_p3_rddata[63] <= v7ddrphy_bitslip312[7];
end
assign v7ddrphy_dfi_p0_rddata_valid = (v7ddrphy_rddata_en_tappeddelayline7 | v7ddrphy_wlevel_en_storage);
assign v7ddrphy_dfi_p1_rddata_valid = (v7ddrphy_rddata_en_tappeddelayline7 | v7ddrphy_wlevel_en_storage);
assign v7ddrphy_dfi_p2_rddata_valid = (v7ddrphy_rddata_en_tappeddelayline7 | v7ddrphy_wlevel_en_storage);
assign v7ddrphy_dfi_p3_rddata_valid = (v7ddrphy_rddata_en_tappeddelayline7 | v7ddrphy_wlevel_en_storage);
assign v7ddrphy_dq_oe = v7ddrphy_wrdata_en_tappeddelayline1;
always @(*) begin
    v7ddrphy_dqs_oe <= 1'd0;
    if (v7ddrphy_wlevel_en_storage) begin
        v7ddrphy_dqs_oe <= 1'd1;
    end else begin
        v7ddrphy_dqs_oe <= v7ddrphy_dq_oe;
    end
end
assign v7ddrphy_dqs_preamble = (v7ddrphy_wrdata_en_tappeddelayline0 & (~v7ddrphy_wrdata_en_tappeddelayline1));
assign v7ddrphy_dqs_postamble = (v7ddrphy_wrdata_en_tappeddelayline2 & (~v7ddrphy_wrdata_en_tappeddelayline1));
always @(*) begin
    v7ddrphy_dqspattern_o <= 8'd0;
    v7ddrphy_dqspattern_o <= 7'd85;
    if (v7ddrphy_dqspattern0) begin
        v7ddrphy_dqspattern_o <= 5'd21;
    end
    if (v7ddrphy_dqspattern1) begin
        v7ddrphy_dqspattern_o <= 7'd84;
    end
    if (v7ddrphy_wlevel_en_storage) begin
        v7ddrphy_dqspattern_o <= 1'd0;
        if (v7ddrphy_wlevel_strobe_re) begin
            v7ddrphy_dqspattern_o <= 1'd1;
        end
    end
end
always @(*) begin
    v7ddrphy_bitslip00 <= 8'd0;
    case (v7ddrphy_bitslip0_value0)
        1'd0: begin
            v7ddrphy_bitslip00 <= v7ddrphy_bitslip0_r0[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip00 <= v7ddrphy_bitslip0_r0[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip00 <= v7ddrphy_bitslip0_r0[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip00 <= v7ddrphy_bitslip0_r0[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip00 <= v7ddrphy_bitslip0_r0[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip00 <= v7ddrphy_bitslip0_r0[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip00 <= v7ddrphy_bitslip0_r0[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip00 <= v7ddrphy_bitslip0_r0[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip10 <= 8'd0;
    case (v7ddrphy_bitslip1_value0)
        1'd0: begin
            v7ddrphy_bitslip10 <= v7ddrphy_bitslip1_r0[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip10 <= v7ddrphy_bitslip1_r0[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip10 <= v7ddrphy_bitslip1_r0[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip10 <= v7ddrphy_bitslip1_r0[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip10 <= v7ddrphy_bitslip1_r0[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip10 <= v7ddrphy_bitslip1_r0[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip10 <= v7ddrphy_bitslip1_r0[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip10 <= v7ddrphy_bitslip1_r0[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip20 <= 8'd0;
    case (v7ddrphy_bitslip2_value0)
        1'd0: begin
            v7ddrphy_bitslip20 <= v7ddrphy_bitslip2_r0[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip20 <= v7ddrphy_bitslip2_r0[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip20 <= v7ddrphy_bitslip2_r0[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip20 <= v7ddrphy_bitslip2_r0[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip20 <= v7ddrphy_bitslip2_r0[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip20 <= v7ddrphy_bitslip2_r0[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip20 <= v7ddrphy_bitslip2_r0[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip20 <= v7ddrphy_bitslip2_r0[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip30 <= 8'd0;
    case (v7ddrphy_bitslip3_value0)
        1'd0: begin
            v7ddrphy_bitslip30 <= v7ddrphy_bitslip3_r0[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip30 <= v7ddrphy_bitslip3_r0[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip30 <= v7ddrphy_bitslip3_r0[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip30 <= v7ddrphy_bitslip3_r0[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip30 <= v7ddrphy_bitslip3_r0[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip30 <= v7ddrphy_bitslip3_r0[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip30 <= v7ddrphy_bitslip3_r0[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip30 <= v7ddrphy_bitslip3_r0[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip01 <= 8'd0;
    case (v7ddrphy_bitslip0_value1)
        1'd0: begin
            v7ddrphy_bitslip01 <= v7ddrphy_bitslip0_r1[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip01 <= v7ddrphy_bitslip0_r1[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip01 <= v7ddrphy_bitslip0_r1[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip01 <= v7ddrphy_bitslip0_r1[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip01 <= v7ddrphy_bitslip0_r1[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip01 <= v7ddrphy_bitslip0_r1[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip01 <= v7ddrphy_bitslip0_r1[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip01 <= v7ddrphy_bitslip0_r1[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip11 <= 8'd0;
    case (v7ddrphy_bitslip1_value1)
        1'd0: begin
            v7ddrphy_bitslip11 <= v7ddrphy_bitslip1_r1[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip11 <= v7ddrphy_bitslip1_r1[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip11 <= v7ddrphy_bitslip1_r1[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip11 <= v7ddrphy_bitslip1_r1[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip11 <= v7ddrphy_bitslip1_r1[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip11 <= v7ddrphy_bitslip1_r1[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip11 <= v7ddrphy_bitslip1_r1[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip11 <= v7ddrphy_bitslip1_r1[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip21 <= 8'd0;
    case (v7ddrphy_bitslip2_value1)
        1'd0: begin
            v7ddrphy_bitslip21 <= v7ddrphy_bitslip2_r1[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip21 <= v7ddrphy_bitslip2_r1[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip21 <= v7ddrphy_bitslip2_r1[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip21 <= v7ddrphy_bitslip2_r1[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip21 <= v7ddrphy_bitslip2_r1[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip21 <= v7ddrphy_bitslip2_r1[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip21 <= v7ddrphy_bitslip2_r1[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip21 <= v7ddrphy_bitslip2_r1[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip31 <= 8'd0;
    case (v7ddrphy_bitslip3_value1)
        1'd0: begin
            v7ddrphy_bitslip31 <= v7ddrphy_bitslip3_r1[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip31 <= v7ddrphy_bitslip3_r1[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip31 <= v7ddrphy_bitslip3_r1[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip31 <= v7ddrphy_bitslip3_r1[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip31 <= v7ddrphy_bitslip3_r1[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip31 <= v7ddrphy_bitslip3_r1[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip31 <= v7ddrphy_bitslip3_r1[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip31 <= v7ddrphy_bitslip3_r1[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip02 <= 8'd0;
    case (v7ddrphy_bitslip0_value2)
        1'd0: begin
            v7ddrphy_bitslip02 <= v7ddrphy_bitslip0_r2[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip02 <= v7ddrphy_bitslip0_r2[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip02 <= v7ddrphy_bitslip0_r2[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip02 <= v7ddrphy_bitslip0_r2[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip02 <= v7ddrphy_bitslip0_r2[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip02 <= v7ddrphy_bitslip0_r2[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip02 <= v7ddrphy_bitslip0_r2[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip02 <= v7ddrphy_bitslip0_r2[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip04 <= 8'd0;
    case (v7ddrphy_bitslip0_value3)
        1'd0: begin
            v7ddrphy_bitslip04 <= v7ddrphy_bitslip0_r3[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip04 <= v7ddrphy_bitslip0_r3[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip04 <= v7ddrphy_bitslip0_r3[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip04 <= v7ddrphy_bitslip0_r3[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip04 <= v7ddrphy_bitslip0_r3[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip04 <= v7ddrphy_bitslip0_r3[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip04 <= v7ddrphy_bitslip0_r3[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip04 <= v7ddrphy_bitslip0_r3[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip12 <= 8'd0;
    case (v7ddrphy_bitslip1_value2)
        1'd0: begin
            v7ddrphy_bitslip12 <= v7ddrphy_bitslip1_r2[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip12 <= v7ddrphy_bitslip1_r2[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip12 <= v7ddrphy_bitslip1_r2[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip12 <= v7ddrphy_bitslip1_r2[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip12 <= v7ddrphy_bitslip1_r2[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip12 <= v7ddrphy_bitslip1_r2[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip12 <= v7ddrphy_bitslip1_r2[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip12 <= v7ddrphy_bitslip1_r2[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip14 <= 8'd0;
    case (v7ddrphy_bitslip1_value3)
        1'd0: begin
            v7ddrphy_bitslip14 <= v7ddrphy_bitslip1_r3[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip14 <= v7ddrphy_bitslip1_r3[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip14 <= v7ddrphy_bitslip1_r3[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip14 <= v7ddrphy_bitslip1_r3[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip14 <= v7ddrphy_bitslip1_r3[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip14 <= v7ddrphy_bitslip1_r3[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip14 <= v7ddrphy_bitslip1_r3[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip14 <= v7ddrphy_bitslip1_r3[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip22 <= 8'd0;
    case (v7ddrphy_bitslip2_value2)
        1'd0: begin
            v7ddrphy_bitslip22 <= v7ddrphy_bitslip2_r2[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip22 <= v7ddrphy_bitslip2_r2[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip22 <= v7ddrphy_bitslip2_r2[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip22 <= v7ddrphy_bitslip2_r2[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip22 <= v7ddrphy_bitslip2_r2[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip22 <= v7ddrphy_bitslip2_r2[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip22 <= v7ddrphy_bitslip2_r2[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip22 <= v7ddrphy_bitslip2_r2[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip24 <= 8'd0;
    case (v7ddrphy_bitslip2_value3)
        1'd0: begin
            v7ddrphy_bitslip24 <= v7ddrphy_bitslip2_r3[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip24 <= v7ddrphy_bitslip2_r3[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip24 <= v7ddrphy_bitslip2_r3[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip24 <= v7ddrphy_bitslip2_r3[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip24 <= v7ddrphy_bitslip2_r3[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip24 <= v7ddrphy_bitslip2_r3[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip24 <= v7ddrphy_bitslip2_r3[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip24 <= v7ddrphy_bitslip2_r3[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip32 <= 8'd0;
    case (v7ddrphy_bitslip3_value2)
        1'd0: begin
            v7ddrphy_bitslip32 <= v7ddrphy_bitslip3_r2[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip32 <= v7ddrphy_bitslip3_r2[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip32 <= v7ddrphy_bitslip3_r2[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip32 <= v7ddrphy_bitslip3_r2[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip32 <= v7ddrphy_bitslip3_r2[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip32 <= v7ddrphy_bitslip3_r2[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip32 <= v7ddrphy_bitslip3_r2[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip32 <= v7ddrphy_bitslip3_r2[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip34 <= 8'd0;
    case (v7ddrphy_bitslip3_value3)
        1'd0: begin
            v7ddrphy_bitslip34 <= v7ddrphy_bitslip3_r3[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip34 <= v7ddrphy_bitslip3_r3[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip34 <= v7ddrphy_bitslip3_r3[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip34 <= v7ddrphy_bitslip3_r3[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip34 <= v7ddrphy_bitslip3_r3[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip34 <= v7ddrphy_bitslip3_r3[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip34 <= v7ddrphy_bitslip3_r3[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip34 <= v7ddrphy_bitslip3_r3[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip40 <= 8'd0;
    case (v7ddrphy_bitslip4_value0)
        1'd0: begin
            v7ddrphy_bitslip40 <= v7ddrphy_bitslip4_r0[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip40 <= v7ddrphy_bitslip4_r0[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip40 <= v7ddrphy_bitslip4_r0[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip40 <= v7ddrphy_bitslip4_r0[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip40 <= v7ddrphy_bitslip4_r0[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip40 <= v7ddrphy_bitslip4_r0[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip40 <= v7ddrphy_bitslip4_r0[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip40 <= v7ddrphy_bitslip4_r0[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip42 <= 8'd0;
    case (v7ddrphy_bitslip4_value1)
        1'd0: begin
            v7ddrphy_bitslip42 <= v7ddrphy_bitslip4_r1[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip42 <= v7ddrphy_bitslip4_r1[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip42 <= v7ddrphy_bitslip4_r1[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip42 <= v7ddrphy_bitslip4_r1[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip42 <= v7ddrphy_bitslip4_r1[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip42 <= v7ddrphy_bitslip4_r1[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip42 <= v7ddrphy_bitslip4_r1[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip42 <= v7ddrphy_bitslip4_r1[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip50 <= 8'd0;
    case (v7ddrphy_bitslip5_value0)
        1'd0: begin
            v7ddrphy_bitslip50 <= v7ddrphy_bitslip5_r0[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip50 <= v7ddrphy_bitslip5_r0[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip50 <= v7ddrphy_bitslip5_r0[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip50 <= v7ddrphy_bitslip5_r0[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip50 <= v7ddrphy_bitslip5_r0[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip50 <= v7ddrphy_bitslip5_r0[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip50 <= v7ddrphy_bitslip5_r0[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip50 <= v7ddrphy_bitslip5_r0[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip52 <= 8'd0;
    case (v7ddrphy_bitslip5_value1)
        1'd0: begin
            v7ddrphy_bitslip52 <= v7ddrphy_bitslip5_r1[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip52 <= v7ddrphy_bitslip5_r1[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip52 <= v7ddrphy_bitslip5_r1[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip52 <= v7ddrphy_bitslip5_r1[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip52 <= v7ddrphy_bitslip5_r1[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip52 <= v7ddrphy_bitslip5_r1[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip52 <= v7ddrphy_bitslip5_r1[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip52 <= v7ddrphy_bitslip5_r1[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip60 <= 8'd0;
    case (v7ddrphy_bitslip6_value0)
        1'd0: begin
            v7ddrphy_bitslip60 <= v7ddrphy_bitslip6_r0[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip60 <= v7ddrphy_bitslip6_r0[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip60 <= v7ddrphy_bitslip6_r0[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip60 <= v7ddrphy_bitslip6_r0[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip60 <= v7ddrphy_bitslip6_r0[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip60 <= v7ddrphy_bitslip6_r0[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip60 <= v7ddrphy_bitslip6_r0[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip60 <= v7ddrphy_bitslip6_r0[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip62 <= 8'd0;
    case (v7ddrphy_bitslip6_value1)
        1'd0: begin
            v7ddrphy_bitslip62 <= v7ddrphy_bitslip6_r1[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip62 <= v7ddrphy_bitslip6_r1[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip62 <= v7ddrphy_bitslip6_r1[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip62 <= v7ddrphy_bitslip6_r1[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip62 <= v7ddrphy_bitslip6_r1[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip62 <= v7ddrphy_bitslip6_r1[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip62 <= v7ddrphy_bitslip6_r1[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip62 <= v7ddrphy_bitslip6_r1[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip70 <= 8'd0;
    case (v7ddrphy_bitslip7_value0)
        1'd0: begin
            v7ddrphy_bitslip70 <= v7ddrphy_bitslip7_r0[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip70 <= v7ddrphy_bitslip7_r0[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip70 <= v7ddrphy_bitslip7_r0[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip70 <= v7ddrphy_bitslip7_r0[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip70 <= v7ddrphy_bitslip7_r0[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip70 <= v7ddrphy_bitslip7_r0[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip70 <= v7ddrphy_bitslip7_r0[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip70 <= v7ddrphy_bitslip7_r0[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip72 <= 8'd0;
    case (v7ddrphy_bitslip7_value1)
        1'd0: begin
            v7ddrphy_bitslip72 <= v7ddrphy_bitslip7_r1[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip72 <= v7ddrphy_bitslip7_r1[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip72 <= v7ddrphy_bitslip7_r1[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip72 <= v7ddrphy_bitslip7_r1[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip72 <= v7ddrphy_bitslip7_r1[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip72 <= v7ddrphy_bitslip7_r1[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip72 <= v7ddrphy_bitslip7_r1[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip72 <= v7ddrphy_bitslip7_r1[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip80 <= 8'd0;
    case (v7ddrphy_bitslip8_value0)
        1'd0: begin
            v7ddrphy_bitslip80 <= v7ddrphy_bitslip8_r0[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip80 <= v7ddrphy_bitslip8_r0[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip80 <= v7ddrphy_bitslip8_r0[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip80 <= v7ddrphy_bitslip8_r0[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip80 <= v7ddrphy_bitslip8_r0[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip80 <= v7ddrphy_bitslip8_r0[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip80 <= v7ddrphy_bitslip8_r0[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip80 <= v7ddrphy_bitslip8_r0[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip82 <= 8'd0;
    case (v7ddrphy_bitslip8_value1)
        1'd0: begin
            v7ddrphy_bitslip82 <= v7ddrphy_bitslip8_r1[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip82 <= v7ddrphy_bitslip8_r1[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip82 <= v7ddrphy_bitslip8_r1[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip82 <= v7ddrphy_bitslip8_r1[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip82 <= v7ddrphy_bitslip8_r1[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip82 <= v7ddrphy_bitslip8_r1[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip82 <= v7ddrphy_bitslip8_r1[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip82 <= v7ddrphy_bitslip8_r1[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip90 <= 8'd0;
    case (v7ddrphy_bitslip9_value0)
        1'd0: begin
            v7ddrphy_bitslip90 <= v7ddrphy_bitslip9_r0[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip90 <= v7ddrphy_bitslip9_r0[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip90 <= v7ddrphy_bitslip9_r0[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip90 <= v7ddrphy_bitslip9_r0[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip90 <= v7ddrphy_bitslip9_r0[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip90 <= v7ddrphy_bitslip9_r0[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip90 <= v7ddrphy_bitslip9_r0[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip90 <= v7ddrphy_bitslip9_r0[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip92 <= 8'd0;
    case (v7ddrphy_bitslip9_value1)
        1'd0: begin
            v7ddrphy_bitslip92 <= v7ddrphy_bitslip9_r1[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip92 <= v7ddrphy_bitslip9_r1[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip92 <= v7ddrphy_bitslip9_r1[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip92 <= v7ddrphy_bitslip9_r1[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip92 <= v7ddrphy_bitslip9_r1[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip92 <= v7ddrphy_bitslip9_r1[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip92 <= v7ddrphy_bitslip9_r1[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip92 <= v7ddrphy_bitslip9_r1[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip100 <= 8'd0;
    case (v7ddrphy_bitslip10_value0)
        1'd0: begin
            v7ddrphy_bitslip100 <= v7ddrphy_bitslip10_r0[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip100 <= v7ddrphy_bitslip10_r0[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip100 <= v7ddrphy_bitslip10_r0[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip100 <= v7ddrphy_bitslip10_r0[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip100 <= v7ddrphy_bitslip10_r0[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip100 <= v7ddrphy_bitslip10_r0[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip100 <= v7ddrphy_bitslip10_r0[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip100 <= v7ddrphy_bitslip10_r0[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip102 <= 8'd0;
    case (v7ddrphy_bitslip10_value1)
        1'd0: begin
            v7ddrphy_bitslip102 <= v7ddrphy_bitslip10_r1[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip102 <= v7ddrphy_bitslip10_r1[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip102 <= v7ddrphy_bitslip10_r1[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip102 <= v7ddrphy_bitslip10_r1[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip102 <= v7ddrphy_bitslip10_r1[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip102 <= v7ddrphy_bitslip10_r1[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip102 <= v7ddrphy_bitslip10_r1[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip102 <= v7ddrphy_bitslip10_r1[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip110 <= 8'd0;
    case (v7ddrphy_bitslip11_value0)
        1'd0: begin
            v7ddrphy_bitslip110 <= v7ddrphy_bitslip11_r0[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip110 <= v7ddrphy_bitslip11_r0[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip110 <= v7ddrphy_bitslip11_r0[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip110 <= v7ddrphy_bitslip11_r0[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip110 <= v7ddrphy_bitslip11_r0[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip110 <= v7ddrphy_bitslip11_r0[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip110 <= v7ddrphy_bitslip11_r0[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip110 <= v7ddrphy_bitslip11_r0[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip112 <= 8'd0;
    case (v7ddrphy_bitslip11_value1)
        1'd0: begin
            v7ddrphy_bitslip112 <= v7ddrphy_bitslip11_r1[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip112 <= v7ddrphy_bitslip11_r1[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip112 <= v7ddrphy_bitslip11_r1[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip112 <= v7ddrphy_bitslip11_r1[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip112 <= v7ddrphy_bitslip11_r1[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip112 <= v7ddrphy_bitslip11_r1[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip112 <= v7ddrphy_bitslip11_r1[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip112 <= v7ddrphy_bitslip11_r1[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip120 <= 8'd0;
    case (v7ddrphy_bitslip12_value0)
        1'd0: begin
            v7ddrphy_bitslip120 <= v7ddrphy_bitslip12_r0[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip120 <= v7ddrphy_bitslip12_r0[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip120 <= v7ddrphy_bitslip12_r0[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip120 <= v7ddrphy_bitslip12_r0[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip120 <= v7ddrphy_bitslip12_r0[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip120 <= v7ddrphy_bitslip12_r0[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip120 <= v7ddrphy_bitslip12_r0[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip120 <= v7ddrphy_bitslip12_r0[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip122 <= 8'd0;
    case (v7ddrphy_bitslip12_value1)
        1'd0: begin
            v7ddrphy_bitslip122 <= v7ddrphy_bitslip12_r1[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip122 <= v7ddrphy_bitslip12_r1[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip122 <= v7ddrphy_bitslip12_r1[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip122 <= v7ddrphy_bitslip12_r1[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip122 <= v7ddrphy_bitslip12_r1[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip122 <= v7ddrphy_bitslip12_r1[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip122 <= v7ddrphy_bitslip12_r1[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip122 <= v7ddrphy_bitslip12_r1[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip130 <= 8'd0;
    case (v7ddrphy_bitslip13_value0)
        1'd0: begin
            v7ddrphy_bitslip130 <= v7ddrphy_bitslip13_r0[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip130 <= v7ddrphy_bitslip13_r0[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip130 <= v7ddrphy_bitslip13_r0[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip130 <= v7ddrphy_bitslip13_r0[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip130 <= v7ddrphy_bitslip13_r0[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip130 <= v7ddrphy_bitslip13_r0[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip130 <= v7ddrphy_bitslip13_r0[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip130 <= v7ddrphy_bitslip13_r0[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip132 <= 8'd0;
    case (v7ddrphy_bitslip13_value1)
        1'd0: begin
            v7ddrphy_bitslip132 <= v7ddrphy_bitslip13_r1[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip132 <= v7ddrphy_bitslip13_r1[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip132 <= v7ddrphy_bitslip13_r1[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip132 <= v7ddrphy_bitslip13_r1[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip132 <= v7ddrphy_bitslip13_r1[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip132 <= v7ddrphy_bitslip13_r1[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip132 <= v7ddrphy_bitslip13_r1[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip132 <= v7ddrphy_bitslip13_r1[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip140 <= 8'd0;
    case (v7ddrphy_bitslip14_value0)
        1'd0: begin
            v7ddrphy_bitslip140 <= v7ddrphy_bitslip14_r0[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip140 <= v7ddrphy_bitslip14_r0[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip140 <= v7ddrphy_bitslip14_r0[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip140 <= v7ddrphy_bitslip14_r0[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip140 <= v7ddrphy_bitslip14_r0[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip140 <= v7ddrphy_bitslip14_r0[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip140 <= v7ddrphy_bitslip14_r0[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip140 <= v7ddrphy_bitslip14_r0[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip142 <= 8'd0;
    case (v7ddrphy_bitslip14_value1)
        1'd0: begin
            v7ddrphy_bitslip142 <= v7ddrphy_bitslip14_r1[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip142 <= v7ddrphy_bitslip14_r1[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip142 <= v7ddrphy_bitslip14_r1[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip142 <= v7ddrphy_bitslip14_r1[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip142 <= v7ddrphy_bitslip14_r1[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip142 <= v7ddrphy_bitslip14_r1[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip142 <= v7ddrphy_bitslip14_r1[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip142 <= v7ddrphy_bitslip14_r1[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip150 <= 8'd0;
    case (v7ddrphy_bitslip15_value0)
        1'd0: begin
            v7ddrphy_bitslip150 <= v7ddrphy_bitslip15_r0[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip150 <= v7ddrphy_bitslip15_r0[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip150 <= v7ddrphy_bitslip15_r0[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip150 <= v7ddrphy_bitslip15_r0[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip150 <= v7ddrphy_bitslip15_r0[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip150 <= v7ddrphy_bitslip15_r0[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip150 <= v7ddrphy_bitslip15_r0[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip150 <= v7ddrphy_bitslip15_r0[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip152 <= 8'd0;
    case (v7ddrphy_bitslip15_value1)
        1'd0: begin
            v7ddrphy_bitslip152 <= v7ddrphy_bitslip15_r1[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip152 <= v7ddrphy_bitslip15_r1[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip152 <= v7ddrphy_bitslip15_r1[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip152 <= v7ddrphy_bitslip15_r1[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip152 <= v7ddrphy_bitslip15_r1[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip152 <= v7ddrphy_bitslip15_r1[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip152 <= v7ddrphy_bitslip15_r1[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip152 <= v7ddrphy_bitslip15_r1[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip160 <= 8'd0;
    case (v7ddrphy_bitslip16_value0)
        1'd0: begin
            v7ddrphy_bitslip160 <= v7ddrphy_bitslip16_r0[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip160 <= v7ddrphy_bitslip16_r0[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip160 <= v7ddrphy_bitslip16_r0[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip160 <= v7ddrphy_bitslip16_r0[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip160 <= v7ddrphy_bitslip16_r0[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip160 <= v7ddrphy_bitslip16_r0[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip160 <= v7ddrphy_bitslip16_r0[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip160 <= v7ddrphy_bitslip16_r0[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip162 <= 8'd0;
    case (v7ddrphy_bitslip16_value1)
        1'd0: begin
            v7ddrphy_bitslip162 <= v7ddrphy_bitslip16_r1[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip162 <= v7ddrphy_bitslip16_r1[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip162 <= v7ddrphy_bitslip16_r1[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip162 <= v7ddrphy_bitslip16_r1[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip162 <= v7ddrphy_bitslip16_r1[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip162 <= v7ddrphy_bitslip16_r1[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip162 <= v7ddrphy_bitslip16_r1[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip162 <= v7ddrphy_bitslip16_r1[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip170 <= 8'd0;
    case (v7ddrphy_bitslip17_value0)
        1'd0: begin
            v7ddrphy_bitslip170 <= v7ddrphy_bitslip17_r0[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip170 <= v7ddrphy_bitslip17_r0[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip170 <= v7ddrphy_bitslip17_r0[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip170 <= v7ddrphy_bitslip17_r0[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip170 <= v7ddrphy_bitslip17_r0[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip170 <= v7ddrphy_bitslip17_r0[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip170 <= v7ddrphy_bitslip17_r0[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip170 <= v7ddrphy_bitslip17_r0[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip172 <= 8'd0;
    case (v7ddrphy_bitslip17_value1)
        1'd0: begin
            v7ddrphy_bitslip172 <= v7ddrphy_bitslip17_r1[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip172 <= v7ddrphy_bitslip17_r1[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip172 <= v7ddrphy_bitslip17_r1[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip172 <= v7ddrphy_bitslip17_r1[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip172 <= v7ddrphy_bitslip17_r1[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip172 <= v7ddrphy_bitslip17_r1[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip172 <= v7ddrphy_bitslip17_r1[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip172 <= v7ddrphy_bitslip17_r1[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip180 <= 8'd0;
    case (v7ddrphy_bitslip18_value0)
        1'd0: begin
            v7ddrphy_bitslip180 <= v7ddrphy_bitslip18_r0[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip180 <= v7ddrphy_bitslip18_r0[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip180 <= v7ddrphy_bitslip18_r0[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip180 <= v7ddrphy_bitslip18_r0[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip180 <= v7ddrphy_bitslip18_r0[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip180 <= v7ddrphy_bitslip18_r0[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip180 <= v7ddrphy_bitslip18_r0[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip180 <= v7ddrphy_bitslip18_r0[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip182 <= 8'd0;
    case (v7ddrphy_bitslip18_value1)
        1'd0: begin
            v7ddrphy_bitslip182 <= v7ddrphy_bitslip18_r1[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip182 <= v7ddrphy_bitslip18_r1[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip182 <= v7ddrphy_bitslip18_r1[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip182 <= v7ddrphy_bitslip18_r1[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip182 <= v7ddrphy_bitslip18_r1[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip182 <= v7ddrphy_bitslip18_r1[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip182 <= v7ddrphy_bitslip18_r1[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip182 <= v7ddrphy_bitslip18_r1[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip190 <= 8'd0;
    case (v7ddrphy_bitslip19_value0)
        1'd0: begin
            v7ddrphy_bitslip190 <= v7ddrphy_bitslip19_r0[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip190 <= v7ddrphy_bitslip19_r0[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip190 <= v7ddrphy_bitslip19_r0[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip190 <= v7ddrphy_bitslip19_r0[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip190 <= v7ddrphy_bitslip19_r0[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip190 <= v7ddrphy_bitslip19_r0[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip190 <= v7ddrphy_bitslip19_r0[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip190 <= v7ddrphy_bitslip19_r0[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip192 <= 8'd0;
    case (v7ddrphy_bitslip19_value1)
        1'd0: begin
            v7ddrphy_bitslip192 <= v7ddrphy_bitslip19_r1[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip192 <= v7ddrphy_bitslip19_r1[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip192 <= v7ddrphy_bitslip19_r1[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip192 <= v7ddrphy_bitslip19_r1[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip192 <= v7ddrphy_bitslip19_r1[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip192 <= v7ddrphy_bitslip19_r1[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip192 <= v7ddrphy_bitslip19_r1[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip192 <= v7ddrphy_bitslip19_r1[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip200 <= 8'd0;
    case (v7ddrphy_bitslip20_value0)
        1'd0: begin
            v7ddrphy_bitslip200 <= v7ddrphy_bitslip20_r0[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip200 <= v7ddrphy_bitslip20_r0[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip200 <= v7ddrphy_bitslip20_r0[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip200 <= v7ddrphy_bitslip20_r0[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip200 <= v7ddrphy_bitslip20_r0[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip200 <= v7ddrphy_bitslip20_r0[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip200 <= v7ddrphy_bitslip20_r0[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip200 <= v7ddrphy_bitslip20_r0[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip202 <= 8'd0;
    case (v7ddrphy_bitslip20_value1)
        1'd0: begin
            v7ddrphy_bitslip202 <= v7ddrphy_bitslip20_r1[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip202 <= v7ddrphy_bitslip20_r1[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip202 <= v7ddrphy_bitslip20_r1[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip202 <= v7ddrphy_bitslip20_r1[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip202 <= v7ddrphy_bitslip20_r1[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip202 <= v7ddrphy_bitslip20_r1[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip202 <= v7ddrphy_bitslip20_r1[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip202 <= v7ddrphy_bitslip20_r1[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip210 <= 8'd0;
    case (v7ddrphy_bitslip21_value0)
        1'd0: begin
            v7ddrphy_bitslip210 <= v7ddrphy_bitslip21_r0[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip210 <= v7ddrphy_bitslip21_r0[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip210 <= v7ddrphy_bitslip21_r0[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip210 <= v7ddrphy_bitslip21_r0[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip210 <= v7ddrphy_bitslip21_r0[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip210 <= v7ddrphy_bitslip21_r0[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip210 <= v7ddrphy_bitslip21_r0[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip210 <= v7ddrphy_bitslip21_r0[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip212 <= 8'd0;
    case (v7ddrphy_bitslip21_value1)
        1'd0: begin
            v7ddrphy_bitslip212 <= v7ddrphy_bitslip21_r1[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip212 <= v7ddrphy_bitslip21_r1[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip212 <= v7ddrphy_bitslip21_r1[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip212 <= v7ddrphy_bitslip21_r1[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip212 <= v7ddrphy_bitslip21_r1[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip212 <= v7ddrphy_bitslip21_r1[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip212 <= v7ddrphy_bitslip21_r1[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip212 <= v7ddrphy_bitslip21_r1[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip220 <= 8'd0;
    case (v7ddrphy_bitslip22_value0)
        1'd0: begin
            v7ddrphy_bitslip220 <= v7ddrphy_bitslip22_r0[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip220 <= v7ddrphy_bitslip22_r0[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip220 <= v7ddrphy_bitslip22_r0[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip220 <= v7ddrphy_bitslip22_r0[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip220 <= v7ddrphy_bitslip22_r0[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip220 <= v7ddrphy_bitslip22_r0[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip220 <= v7ddrphy_bitslip22_r0[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip220 <= v7ddrphy_bitslip22_r0[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip222 <= 8'd0;
    case (v7ddrphy_bitslip22_value1)
        1'd0: begin
            v7ddrphy_bitslip222 <= v7ddrphy_bitslip22_r1[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip222 <= v7ddrphy_bitslip22_r1[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip222 <= v7ddrphy_bitslip22_r1[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip222 <= v7ddrphy_bitslip22_r1[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip222 <= v7ddrphy_bitslip22_r1[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip222 <= v7ddrphy_bitslip22_r1[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip222 <= v7ddrphy_bitslip22_r1[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip222 <= v7ddrphy_bitslip22_r1[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip230 <= 8'd0;
    case (v7ddrphy_bitslip23_value0)
        1'd0: begin
            v7ddrphy_bitslip230 <= v7ddrphy_bitslip23_r0[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip230 <= v7ddrphy_bitslip23_r0[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip230 <= v7ddrphy_bitslip23_r0[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip230 <= v7ddrphy_bitslip23_r0[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip230 <= v7ddrphy_bitslip23_r0[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip230 <= v7ddrphy_bitslip23_r0[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip230 <= v7ddrphy_bitslip23_r0[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip230 <= v7ddrphy_bitslip23_r0[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip232 <= 8'd0;
    case (v7ddrphy_bitslip23_value1)
        1'd0: begin
            v7ddrphy_bitslip232 <= v7ddrphy_bitslip23_r1[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip232 <= v7ddrphy_bitslip23_r1[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip232 <= v7ddrphy_bitslip23_r1[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip232 <= v7ddrphy_bitslip23_r1[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip232 <= v7ddrphy_bitslip23_r1[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip232 <= v7ddrphy_bitslip23_r1[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip232 <= v7ddrphy_bitslip23_r1[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip232 <= v7ddrphy_bitslip23_r1[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip240 <= 8'd0;
    case (v7ddrphy_bitslip24_value0)
        1'd0: begin
            v7ddrphy_bitslip240 <= v7ddrphy_bitslip24_r0[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip240 <= v7ddrphy_bitslip24_r0[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip240 <= v7ddrphy_bitslip24_r0[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip240 <= v7ddrphy_bitslip24_r0[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip240 <= v7ddrphy_bitslip24_r0[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip240 <= v7ddrphy_bitslip24_r0[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip240 <= v7ddrphy_bitslip24_r0[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip240 <= v7ddrphy_bitslip24_r0[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip242 <= 8'd0;
    case (v7ddrphy_bitslip24_value1)
        1'd0: begin
            v7ddrphy_bitslip242 <= v7ddrphy_bitslip24_r1[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip242 <= v7ddrphy_bitslip24_r1[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip242 <= v7ddrphy_bitslip24_r1[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip242 <= v7ddrphy_bitslip24_r1[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip242 <= v7ddrphy_bitslip24_r1[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip242 <= v7ddrphy_bitslip24_r1[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip242 <= v7ddrphy_bitslip24_r1[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip242 <= v7ddrphy_bitslip24_r1[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip250 <= 8'd0;
    case (v7ddrphy_bitslip25_value0)
        1'd0: begin
            v7ddrphy_bitslip250 <= v7ddrphy_bitslip25_r0[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip250 <= v7ddrphy_bitslip25_r0[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip250 <= v7ddrphy_bitslip25_r0[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip250 <= v7ddrphy_bitslip25_r0[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip250 <= v7ddrphy_bitslip25_r0[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip250 <= v7ddrphy_bitslip25_r0[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip250 <= v7ddrphy_bitslip25_r0[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip250 <= v7ddrphy_bitslip25_r0[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip252 <= 8'd0;
    case (v7ddrphy_bitslip25_value1)
        1'd0: begin
            v7ddrphy_bitslip252 <= v7ddrphy_bitslip25_r1[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip252 <= v7ddrphy_bitslip25_r1[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip252 <= v7ddrphy_bitslip25_r1[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip252 <= v7ddrphy_bitslip25_r1[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip252 <= v7ddrphy_bitslip25_r1[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip252 <= v7ddrphy_bitslip25_r1[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip252 <= v7ddrphy_bitslip25_r1[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip252 <= v7ddrphy_bitslip25_r1[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip260 <= 8'd0;
    case (v7ddrphy_bitslip26_value0)
        1'd0: begin
            v7ddrphy_bitslip260 <= v7ddrphy_bitslip26_r0[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip260 <= v7ddrphy_bitslip26_r0[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip260 <= v7ddrphy_bitslip26_r0[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip260 <= v7ddrphy_bitslip26_r0[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip260 <= v7ddrphy_bitslip26_r0[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip260 <= v7ddrphy_bitslip26_r0[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip260 <= v7ddrphy_bitslip26_r0[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip260 <= v7ddrphy_bitslip26_r0[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip262 <= 8'd0;
    case (v7ddrphy_bitslip26_value1)
        1'd0: begin
            v7ddrphy_bitslip262 <= v7ddrphy_bitslip26_r1[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip262 <= v7ddrphy_bitslip26_r1[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip262 <= v7ddrphy_bitslip26_r1[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip262 <= v7ddrphy_bitslip26_r1[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip262 <= v7ddrphy_bitslip26_r1[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip262 <= v7ddrphy_bitslip26_r1[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip262 <= v7ddrphy_bitslip26_r1[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip262 <= v7ddrphy_bitslip26_r1[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip270 <= 8'd0;
    case (v7ddrphy_bitslip27_value0)
        1'd0: begin
            v7ddrphy_bitslip270 <= v7ddrphy_bitslip27_r0[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip270 <= v7ddrphy_bitslip27_r0[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip270 <= v7ddrphy_bitslip27_r0[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip270 <= v7ddrphy_bitslip27_r0[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip270 <= v7ddrphy_bitslip27_r0[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip270 <= v7ddrphy_bitslip27_r0[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip270 <= v7ddrphy_bitslip27_r0[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip270 <= v7ddrphy_bitslip27_r0[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip272 <= 8'd0;
    case (v7ddrphy_bitslip27_value1)
        1'd0: begin
            v7ddrphy_bitslip272 <= v7ddrphy_bitslip27_r1[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip272 <= v7ddrphy_bitslip27_r1[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip272 <= v7ddrphy_bitslip27_r1[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip272 <= v7ddrphy_bitslip27_r1[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip272 <= v7ddrphy_bitslip27_r1[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip272 <= v7ddrphy_bitslip27_r1[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip272 <= v7ddrphy_bitslip27_r1[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip272 <= v7ddrphy_bitslip27_r1[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip280 <= 8'd0;
    case (v7ddrphy_bitslip28_value0)
        1'd0: begin
            v7ddrphy_bitslip280 <= v7ddrphy_bitslip28_r0[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip280 <= v7ddrphy_bitslip28_r0[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip280 <= v7ddrphy_bitslip28_r0[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip280 <= v7ddrphy_bitslip28_r0[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip280 <= v7ddrphy_bitslip28_r0[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip280 <= v7ddrphy_bitslip28_r0[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip280 <= v7ddrphy_bitslip28_r0[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip280 <= v7ddrphy_bitslip28_r0[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip282 <= 8'd0;
    case (v7ddrphy_bitslip28_value1)
        1'd0: begin
            v7ddrphy_bitslip282 <= v7ddrphy_bitslip28_r1[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip282 <= v7ddrphy_bitslip28_r1[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip282 <= v7ddrphy_bitslip28_r1[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip282 <= v7ddrphy_bitslip28_r1[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip282 <= v7ddrphy_bitslip28_r1[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip282 <= v7ddrphy_bitslip28_r1[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip282 <= v7ddrphy_bitslip28_r1[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip282 <= v7ddrphy_bitslip28_r1[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip290 <= 8'd0;
    case (v7ddrphy_bitslip29_value0)
        1'd0: begin
            v7ddrphy_bitslip290 <= v7ddrphy_bitslip29_r0[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip290 <= v7ddrphy_bitslip29_r0[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip290 <= v7ddrphy_bitslip29_r0[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip290 <= v7ddrphy_bitslip29_r0[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip290 <= v7ddrphy_bitslip29_r0[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip290 <= v7ddrphy_bitslip29_r0[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip290 <= v7ddrphy_bitslip29_r0[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip290 <= v7ddrphy_bitslip29_r0[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip292 <= 8'd0;
    case (v7ddrphy_bitslip29_value1)
        1'd0: begin
            v7ddrphy_bitslip292 <= v7ddrphy_bitslip29_r1[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip292 <= v7ddrphy_bitslip29_r1[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip292 <= v7ddrphy_bitslip29_r1[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip292 <= v7ddrphy_bitslip29_r1[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip292 <= v7ddrphy_bitslip29_r1[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip292 <= v7ddrphy_bitslip29_r1[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip292 <= v7ddrphy_bitslip29_r1[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip292 <= v7ddrphy_bitslip29_r1[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip300 <= 8'd0;
    case (v7ddrphy_bitslip30_value0)
        1'd0: begin
            v7ddrphy_bitslip300 <= v7ddrphy_bitslip30_r0[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip300 <= v7ddrphy_bitslip30_r0[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip300 <= v7ddrphy_bitslip30_r0[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip300 <= v7ddrphy_bitslip30_r0[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip300 <= v7ddrphy_bitslip30_r0[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip300 <= v7ddrphy_bitslip30_r0[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip300 <= v7ddrphy_bitslip30_r0[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip300 <= v7ddrphy_bitslip30_r0[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip302 <= 8'd0;
    case (v7ddrphy_bitslip30_value1)
        1'd0: begin
            v7ddrphy_bitslip302 <= v7ddrphy_bitslip30_r1[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip302 <= v7ddrphy_bitslip30_r1[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip302 <= v7ddrphy_bitslip30_r1[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip302 <= v7ddrphy_bitslip30_r1[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip302 <= v7ddrphy_bitslip30_r1[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip302 <= v7ddrphy_bitslip30_r1[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip302 <= v7ddrphy_bitslip30_r1[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip302 <= v7ddrphy_bitslip30_r1[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip310 <= 8'd0;
    case (v7ddrphy_bitslip31_value0)
        1'd0: begin
            v7ddrphy_bitslip310 <= v7ddrphy_bitslip31_r0[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip310 <= v7ddrphy_bitslip31_r0[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip310 <= v7ddrphy_bitslip31_r0[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip310 <= v7ddrphy_bitslip31_r0[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip310 <= v7ddrphy_bitslip31_r0[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip310 <= v7ddrphy_bitslip31_r0[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip310 <= v7ddrphy_bitslip31_r0[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip310 <= v7ddrphy_bitslip31_r0[15:8];
        end
    endcase
end
always @(*) begin
    v7ddrphy_bitslip312 <= 8'd0;
    case (v7ddrphy_bitslip31_value1)
        1'd0: begin
            v7ddrphy_bitslip312 <= v7ddrphy_bitslip31_r1[8:1];
        end
        1'd1: begin
            v7ddrphy_bitslip312 <= v7ddrphy_bitslip31_r1[9:2];
        end
        2'd2: begin
            v7ddrphy_bitslip312 <= v7ddrphy_bitslip31_r1[10:3];
        end
        2'd3: begin
            v7ddrphy_bitslip312 <= v7ddrphy_bitslip31_r1[11:4];
        end
        3'd4: begin
            v7ddrphy_bitslip312 <= v7ddrphy_bitslip31_r1[12:5];
        end
        3'd5: begin
            v7ddrphy_bitslip312 <= v7ddrphy_bitslip31_r1[13:6];
        end
        3'd6: begin
            v7ddrphy_bitslip312 <= v7ddrphy_bitslip31_r1[14:7];
        end
        3'd7: begin
            v7ddrphy_bitslip312 <= v7ddrphy_bitslip31_r1[15:8];
        end
    endcase
end
assign v7ddrphy_dfi_p0_address = soclinux_master_p0_address;
assign v7ddrphy_dfi_p0_bank = soclinux_master_p0_bank;
assign v7ddrphy_dfi_p0_cas_n = soclinux_master_p0_cas_n;
assign v7ddrphy_dfi_p0_cs_n = soclinux_master_p0_cs_n;
assign v7ddrphy_dfi_p0_ras_n = soclinux_master_p0_ras_n;
assign v7ddrphy_dfi_p0_we_n = soclinux_master_p0_we_n;
assign v7ddrphy_dfi_p0_cke = soclinux_master_p0_cke;
assign v7ddrphy_dfi_p0_odt = soclinux_master_p0_odt;
assign v7ddrphy_dfi_p0_reset_n = soclinux_master_p0_reset_n;
assign v7ddrphy_dfi_p0_act_n = soclinux_master_p0_act_n;
assign v7ddrphy_dfi_p0_wrdata = soclinux_master_p0_wrdata;
assign v7ddrphy_dfi_p0_wrdata_en = soclinux_master_p0_wrdata_en;
assign v7ddrphy_dfi_p0_wrdata_mask = soclinux_master_p0_wrdata_mask;
assign v7ddrphy_dfi_p0_rddata_en = soclinux_master_p0_rddata_en;
assign soclinux_master_p0_rddata = v7ddrphy_dfi_p0_rddata;
assign soclinux_master_p0_rddata_valid = v7ddrphy_dfi_p0_rddata_valid;
assign v7ddrphy_dfi_p1_address = soclinux_master_p1_address;
assign v7ddrphy_dfi_p1_bank = soclinux_master_p1_bank;
assign v7ddrphy_dfi_p1_cas_n = soclinux_master_p1_cas_n;
assign v7ddrphy_dfi_p1_cs_n = soclinux_master_p1_cs_n;
assign v7ddrphy_dfi_p1_ras_n = soclinux_master_p1_ras_n;
assign v7ddrphy_dfi_p1_we_n = soclinux_master_p1_we_n;
assign v7ddrphy_dfi_p1_cke = soclinux_master_p1_cke;
assign v7ddrphy_dfi_p1_odt = soclinux_master_p1_odt;
assign v7ddrphy_dfi_p1_reset_n = soclinux_master_p1_reset_n;
assign v7ddrphy_dfi_p1_act_n = soclinux_master_p1_act_n;
assign v7ddrphy_dfi_p1_wrdata = soclinux_master_p1_wrdata;
assign v7ddrphy_dfi_p1_wrdata_en = soclinux_master_p1_wrdata_en;
assign v7ddrphy_dfi_p1_wrdata_mask = soclinux_master_p1_wrdata_mask;
assign v7ddrphy_dfi_p1_rddata_en = soclinux_master_p1_rddata_en;
assign soclinux_master_p1_rddata = v7ddrphy_dfi_p1_rddata;
assign soclinux_master_p1_rddata_valid = v7ddrphy_dfi_p1_rddata_valid;
assign v7ddrphy_dfi_p2_address = soclinux_master_p2_address;
assign v7ddrphy_dfi_p2_bank = soclinux_master_p2_bank;
assign v7ddrphy_dfi_p2_cas_n = soclinux_master_p2_cas_n;
assign v7ddrphy_dfi_p2_cs_n = soclinux_master_p2_cs_n;
assign v7ddrphy_dfi_p2_ras_n = soclinux_master_p2_ras_n;
assign v7ddrphy_dfi_p2_we_n = soclinux_master_p2_we_n;
assign v7ddrphy_dfi_p2_cke = soclinux_master_p2_cke;
assign v7ddrphy_dfi_p2_odt = soclinux_master_p2_odt;
assign v7ddrphy_dfi_p2_reset_n = soclinux_master_p2_reset_n;
assign v7ddrphy_dfi_p2_act_n = soclinux_master_p2_act_n;
assign v7ddrphy_dfi_p2_wrdata = soclinux_master_p2_wrdata;
assign v7ddrphy_dfi_p2_wrdata_en = soclinux_master_p2_wrdata_en;
assign v7ddrphy_dfi_p2_wrdata_mask = soclinux_master_p2_wrdata_mask;
assign v7ddrphy_dfi_p2_rddata_en = soclinux_master_p2_rddata_en;
assign soclinux_master_p2_rddata = v7ddrphy_dfi_p2_rddata;
assign soclinux_master_p2_rddata_valid = v7ddrphy_dfi_p2_rddata_valid;
assign v7ddrphy_dfi_p3_address = soclinux_master_p3_address;
assign v7ddrphy_dfi_p3_bank = soclinux_master_p3_bank;
assign v7ddrphy_dfi_p3_cas_n = soclinux_master_p3_cas_n;
assign v7ddrphy_dfi_p3_cs_n = soclinux_master_p3_cs_n;
assign v7ddrphy_dfi_p3_ras_n = soclinux_master_p3_ras_n;
assign v7ddrphy_dfi_p3_we_n = soclinux_master_p3_we_n;
assign v7ddrphy_dfi_p3_cke = soclinux_master_p3_cke;
assign v7ddrphy_dfi_p3_odt = soclinux_master_p3_odt;
assign v7ddrphy_dfi_p3_reset_n = soclinux_master_p3_reset_n;
assign v7ddrphy_dfi_p3_act_n = soclinux_master_p3_act_n;
assign v7ddrphy_dfi_p3_wrdata = soclinux_master_p3_wrdata;
assign v7ddrphy_dfi_p3_wrdata_en = soclinux_master_p3_wrdata_en;
assign v7ddrphy_dfi_p3_wrdata_mask = soclinux_master_p3_wrdata_mask;
assign v7ddrphy_dfi_p3_rddata_en = soclinux_master_p3_rddata_en;
assign soclinux_master_p3_rddata = v7ddrphy_dfi_p3_rddata;
assign soclinux_master_p3_rddata_valid = v7ddrphy_dfi_p3_rddata_valid;
assign soclinux_slave_p0_address = soclinux_dfi_p0_address;
assign soclinux_slave_p0_bank = soclinux_dfi_p0_bank;
assign soclinux_slave_p0_cas_n = soclinux_dfi_p0_cas_n;
assign soclinux_slave_p0_cs_n = soclinux_dfi_p0_cs_n;
assign soclinux_slave_p0_ras_n = soclinux_dfi_p0_ras_n;
assign soclinux_slave_p0_we_n = soclinux_dfi_p0_we_n;
assign soclinux_slave_p0_cke = soclinux_dfi_p0_cke;
assign soclinux_slave_p0_odt = soclinux_dfi_p0_odt;
assign soclinux_slave_p0_reset_n = soclinux_dfi_p0_reset_n;
assign soclinux_slave_p0_act_n = soclinux_dfi_p0_act_n;
assign soclinux_slave_p0_wrdata = soclinux_dfi_p0_wrdata;
assign soclinux_slave_p0_wrdata_en = soclinux_dfi_p0_wrdata_en;
assign soclinux_slave_p0_wrdata_mask = soclinux_dfi_p0_wrdata_mask;
assign soclinux_slave_p0_rddata_en = soclinux_dfi_p0_rddata_en;
assign soclinux_dfi_p0_rddata = soclinux_slave_p0_rddata;
assign soclinux_dfi_p0_rddata_valid = soclinux_slave_p0_rddata_valid;
assign soclinux_slave_p1_address = soclinux_dfi_p1_address;
assign soclinux_slave_p1_bank = soclinux_dfi_p1_bank;
assign soclinux_slave_p1_cas_n = soclinux_dfi_p1_cas_n;
assign soclinux_slave_p1_cs_n = soclinux_dfi_p1_cs_n;
assign soclinux_slave_p1_ras_n = soclinux_dfi_p1_ras_n;
assign soclinux_slave_p1_we_n = soclinux_dfi_p1_we_n;
assign soclinux_slave_p1_cke = soclinux_dfi_p1_cke;
assign soclinux_slave_p1_odt = soclinux_dfi_p1_odt;
assign soclinux_slave_p1_reset_n = soclinux_dfi_p1_reset_n;
assign soclinux_slave_p1_act_n = soclinux_dfi_p1_act_n;
assign soclinux_slave_p1_wrdata = soclinux_dfi_p1_wrdata;
assign soclinux_slave_p1_wrdata_en = soclinux_dfi_p1_wrdata_en;
assign soclinux_slave_p1_wrdata_mask = soclinux_dfi_p1_wrdata_mask;
assign soclinux_slave_p1_rddata_en = soclinux_dfi_p1_rddata_en;
assign soclinux_dfi_p1_rddata = soclinux_slave_p1_rddata;
assign soclinux_dfi_p1_rddata_valid = soclinux_slave_p1_rddata_valid;
assign soclinux_slave_p2_address = soclinux_dfi_p2_address;
assign soclinux_slave_p2_bank = soclinux_dfi_p2_bank;
assign soclinux_slave_p2_cas_n = soclinux_dfi_p2_cas_n;
assign soclinux_slave_p2_cs_n = soclinux_dfi_p2_cs_n;
assign soclinux_slave_p2_ras_n = soclinux_dfi_p2_ras_n;
assign soclinux_slave_p2_we_n = soclinux_dfi_p2_we_n;
assign soclinux_slave_p2_cke = soclinux_dfi_p2_cke;
assign soclinux_slave_p2_odt = soclinux_dfi_p2_odt;
assign soclinux_slave_p2_reset_n = soclinux_dfi_p2_reset_n;
assign soclinux_slave_p2_act_n = soclinux_dfi_p2_act_n;
assign soclinux_slave_p2_wrdata = soclinux_dfi_p2_wrdata;
assign soclinux_slave_p2_wrdata_en = soclinux_dfi_p2_wrdata_en;
assign soclinux_slave_p2_wrdata_mask = soclinux_dfi_p2_wrdata_mask;
assign soclinux_slave_p2_rddata_en = soclinux_dfi_p2_rddata_en;
assign soclinux_dfi_p2_rddata = soclinux_slave_p2_rddata;
assign soclinux_dfi_p2_rddata_valid = soclinux_slave_p2_rddata_valid;
assign soclinux_slave_p3_address = soclinux_dfi_p3_address;
assign soclinux_slave_p3_bank = soclinux_dfi_p3_bank;
assign soclinux_slave_p3_cas_n = soclinux_dfi_p3_cas_n;
assign soclinux_slave_p3_cs_n = soclinux_dfi_p3_cs_n;
assign soclinux_slave_p3_ras_n = soclinux_dfi_p3_ras_n;
assign soclinux_slave_p3_we_n = soclinux_dfi_p3_we_n;
assign soclinux_slave_p3_cke = soclinux_dfi_p3_cke;
assign soclinux_slave_p3_odt = soclinux_dfi_p3_odt;
assign soclinux_slave_p3_reset_n = soclinux_dfi_p3_reset_n;
assign soclinux_slave_p3_act_n = soclinux_dfi_p3_act_n;
assign soclinux_slave_p3_wrdata = soclinux_dfi_p3_wrdata;
assign soclinux_slave_p3_wrdata_en = soclinux_dfi_p3_wrdata_en;
assign soclinux_slave_p3_wrdata_mask = soclinux_dfi_p3_wrdata_mask;
assign soclinux_slave_p3_rddata_en = soclinux_dfi_p3_rddata_en;
assign soclinux_dfi_p3_rddata = soclinux_slave_p3_rddata;
assign soclinux_dfi_p3_rddata_valid = soclinux_slave_p3_rddata_valid;
always @(*) begin
    soclinux_csr_dfi_p0_rddata <= 64'd0;
    soclinux_csr_dfi_p0_rddata_valid <= 1'd0;
    soclinux_csr_dfi_p1_rddata <= 64'd0;
    soclinux_csr_dfi_p1_rddata_valid <= 1'd0;
    soclinux_csr_dfi_p2_rddata <= 64'd0;
    soclinux_csr_dfi_p2_rddata_valid <= 1'd0;
    soclinux_csr_dfi_p3_rddata <= 64'd0;
    soclinux_csr_dfi_p3_rddata_valid <= 1'd0;
    soclinux_ext_dfi_p0_rddata <= 64'd0;
    soclinux_ext_dfi_p0_rddata_valid <= 1'd0;
    soclinux_ext_dfi_p1_rddata <= 64'd0;
    soclinux_ext_dfi_p1_rddata_valid <= 1'd0;
    soclinux_ext_dfi_p2_rddata <= 64'd0;
    soclinux_ext_dfi_p2_rddata_valid <= 1'd0;
    soclinux_ext_dfi_p3_rddata <= 64'd0;
    soclinux_ext_dfi_p3_rddata_valid <= 1'd0;
    soclinux_master_p0_act_n <= 1'd1;
    soclinux_master_p0_address <= 14'd0;
    soclinux_master_p0_bank <= 3'd0;
    soclinux_master_p0_cas_n <= 1'd1;
    soclinux_master_p0_cke <= 1'd0;
    soclinux_master_p0_cs_n <= 1'd1;
    soclinux_master_p0_odt <= 1'd0;
    soclinux_master_p0_ras_n <= 1'd1;
    soclinux_master_p0_rddata_en <= 1'd0;
    soclinux_master_p0_reset_n <= 1'd0;
    soclinux_master_p0_we_n <= 1'd1;
    soclinux_master_p0_wrdata <= 64'd0;
    soclinux_master_p0_wrdata_en <= 1'd0;
    soclinux_master_p0_wrdata_mask <= 8'd0;
    soclinux_master_p1_act_n <= 1'd1;
    soclinux_master_p1_address <= 14'd0;
    soclinux_master_p1_bank <= 3'd0;
    soclinux_master_p1_cas_n <= 1'd1;
    soclinux_master_p1_cke <= 1'd0;
    soclinux_master_p1_cs_n <= 1'd1;
    soclinux_master_p1_odt <= 1'd0;
    soclinux_master_p1_ras_n <= 1'd1;
    soclinux_master_p1_rddata_en <= 1'd0;
    soclinux_master_p1_reset_n <= 1'd0;
    soclinux_master_p1_we_n <= 1'd1;
    soclinux_master_p1_wrdata <= 64'd0;
    soclinux_master_p1_wrdata_en <= 1'd0;
    soclinux_master_p1_wrdata_mask <= 8'd0;
    soclinux_master_p2_act_n <= 1'd1;
    soclinux_master_p2_address <= 14'd0;
    soclinux_master_p2_bank <= 3'd0;
    soclinux_master_p2_cas_n <= 1'd1;
    soclinux_master_p2_cke <= 1'd0;
    soclinux_master_p2_cs_n <= 1'd1;
    soclinux_master_p2_odt <= 1'd0;
    soclinux_master_p2_ras_n <= 1'd1;
    soclinux_master_p2_rddata_en <= 1'd0;
    soclinux_master_p2_reset_n <= 1'd0;
    soclinux_master_p2_we_n <= 1'd1;
    soclinux_master_p2_wrdata <= 64'd0;
    soclinux_master_p2_wrdata_en <= 1'd0;
    soclinux_master_p2_wrdata_mask <= 8'd0;
    soclinux_master_p3_act_n <= 1'd1;
    soclinux_master_p3_address <= 14'd0;
    soclinux_master_p3_bank <= 3'd0;
    soclinux_master_p3_cas_n <= 1'd1;
    soclinux_master_p3_cke <= 1'd0;
    soclinux_master_p3_cs_n <= 1'd1;
    soclinux_master_p3_odt <= 1'd0;
    soclinux_master_p3_ras_n <= 1'd1;
    soclinux_master_p3_rddata_en <= 1'd0;
    soclinux_master_p3_reset_n <= 1'd0;
    soclinux_master_p3_we_n <= 1'd1;
    soclinux_master_p3_wrdata <= 64'd0;
    soclinux_master_p3_wrdata_en <= 1'd0;
    soclinux_master_p3_wrdata_mask <= 8'd0;
    soclinux_slave_p0_rddata <= 64'd0;
    soclinux_slave_p0_rddata_valid <= 1'd0;
    soclinux_slave_p1_rddata <= 64'd0;
    soclinux_slave_p1_rddata_valid <= 1'd0;
    soclinux_slave_p2_rddata <= 64'd0;
    soclinux_slave_p2_rddata_valid <= 1'd0;
    soclinux_slave_p3_rddata <= 64'd0;
    soclinux_slave_p3_rddata_valid <= 1'd0;
    if (soclinux_sel) begin
        if (soclinux_ext_dfi_sel) begin
            soclinux_master_p0_address <= soclinux_ext_dfi_p0_address;
            soclinux_master_p0_bank <= soclinux_ext_dfi_p0_bank;
            soclinux_master_p0_cas_n <= soclinux_ext_dfi_p0_cas_n;
            soclinux_master_p0_cs_n <= soclinux_ext_dfi_p0_cs_n;
            soclinux_master_p0_ras_n <= soclinux_ext_dfi_p0_ras_n;
            soclinux_master_p0_we_n <= soclinux_ext_dfi_p0_we_n;
            soclinux_master_p0_cke <= soclinux_ext_dfi_p0_cke;
            soclinux_master_p0_odt <= soclinux_ext_dfi_p0_odt;
            soclinux_master_p0_reset_n <= soclinux_ext_dfi_p0_reset_n;
            soclinux_master_p0_act_n <= soclinux_ext_dfi_p0_act_n;
            soclinux_master_p0_wrdata <= soclinux_ext_dfi_p0_wrdata;
            soclinux_master_p0_wrdata_en <= soclinux_ext_dfi_p0_wrdata_en;
            soclinux_master_p0_wrdata_mask <= soclinux_ext_dfi_p0_wrdata_mask;
            soclinux_master_p0_rddata_en <= soclinux_ext_dfi_p0_rddata_en;
            soclinux_ext_dfi_p0_rddata <= soclinux_master_p0_rddata;
            soclinux_ext_dfi_p0_rddata_valid <= soclinux_master_p0_rddata_valid;
            soclinux_master_p1_address <= soclinux_ext_dfi_p1_address;
            soclinux_master_p1_bank <= soclinux_ext_dfi_p1_bank;
            soclinux_master_p1_cas_n <= soclinux_ext_dfi_p1_cas_n;
            soclinux_master_p1_cs_n <= soclinux_ext_dfi_p1_cs_n;
            soclinux_master_p1_ras_n <= soclinux_ext_dfi_p1_ras_n;
            soclinux_master_p1_we_n <= soclinux_ext_dfi_p1_we_n;
            soclinux_master_p1_cke <= soclinux_ext_dfi_p1_cke;
            soclinux_master_p1_odt <= soclinux_ext_dfi_p1_odt;
            soclinux_master_p1_reset_n <= soclinux_ext_dfi_p1_reset_n;
            soclinux_master_p1_act_n <= soclinux_ext_dfi_p1_act_n;
            soclinux_master_p1_wrdata <= soclinux_ext_dfi_p1_wrdata;
            soclinux_master_p1_wrdata_en <= soclinux_ext_dfi_p1_wrdata_en;
            soclinux_master_p1_wrdata_mask <= soclinux_ext_dfi_p1_wrdata_mask;
            soclinux_master_p1_rddata_en <= soclinux_ext_dfi_p1_rddata_en;
            soclinux_ext_dfi_p1_rddata <= soclinux_master_p1_rddata;
            soclinux_ext_dfi_p1_rddata_valid <= soclinux_master_p1_rddata_valid;
            soclinux_master_p2_address <= soclinux_ext_dfi_p2_address;
            soclinux_master_p2_bank <= soclinux_ext_dfi_p2_bank;
            soclinux_master_p2_cas_n <= soclinux_ext_dfi_p2_cas_n;
            soclinux_master_p2_cs_n <= soclinux_ext_dfi_p2_cs_n;
            soclinux_master_p2_ras_n <= soclinux_ext_dfi_p2_ras_n;
            soclinux_master_p2_we_n <= soclinux_ext_dfi_p2_we_n;
            soclinux_master_p2_cke <= soclinux_ext_dfi_p2_cke;
            soclinux_master_p2_odt <= soclinux_ext_dfi_p2_odt;
            soclinux_master_p2_reset_n <= soclinux_ext_dfi_p2_reset_n;
            soclinux_master_p2_act_n <= soclinux_ext_dfi_p2_act_n;
            soclinux_master_p2_wrdata <= soclinux_ext_dfi_p2_wrdata;
            soclinux_master_p2_wrdata_en <= soclinux_ext_dfi_p2_wrdata_en;
            soclinux_master_p2_wrdata_mask <= soclinux_ext_dfi_p2_wrdata_mask;
            soclinux_master_p2_rddata_en <= soclinux_ext_dfi_p2_rddata_en;
            soclinux_ext_dfi_p2_rddata <= soclinux_master_p2_rddata;
            soclinux_ext_dfi_p2_rddata_valid <= soclinux_master_p2_rddata_valid;
            soclinux_master_p3_address <= soclinux_ext_dfi_p3_address;
            soclinux_master_p3_bank <= soclinux_ext_dfi_p3_bank;
            soclinux_master_p3_cas_n <= soclinux_ext_dfi_p3_cas_n;
            soclinux_master_p3_cs_n <= soclinux_ext_dfi_p3_cs_n;
            soclinux_master_p3_ras_n <= soclinux_ext_dfi_p3_ras_n;
            soclinux_master_p3_we_n <= soclinux_ext_dfi_p3_we_n;
            soclinux_master_p3_cke <= soclinux_ext_dfi_p3_cke;
            soclinux_master_p3_odt <= soclinux_ext_dfi_p3_odt;
            soclinux_master_p3_reset_n <= soclinux_ext_dfi_p3_reset_n;
            soclinux_master_p3_act_n <= soclinux_ext_dfi_p3_act_n;
            soclinux_master_p3_wrdata <= soclinux_ext_dfi_p3_wrdata;
            soclinux_master_p3_wrdata_en <= soclinux_ext_dfi_p3_wrdata_en;
            soclinux_master_p3_wrdata_mask <= soclinux_ext_dfi_p3_wrdata_mask;
            soclinux_master_p3_rddata_en <= soclinux_ext_dfi_p3_rddata_en;
            soclinux_ext_dfi_p3_rddata <= soclinux_master_p3_rddata;
            soclinux_ext_dfi_p3_rddata_valid <= soclinux_master_p3_rddata_valid;
        end else begin
            soclinux_master_p0_address <= soclinux_slave_p0_address;
            soclinux_master_p0_bank <= soclinux_slave_p0_bank;
            soclinux_master_p0_cas_n <= soclinux_slave_p0_cas_n;
            soclinux_master_p0_cs_n <= soclinux_slave_p0_cs_n;
            soclinux_master_p0_ras_n <= soclinux_slave_p0_ras_n;
            soclinux_master_p0_we_n <= soclinux_slave_p0_we_n;
            soclinux_master_p0_cke <= soclinux_slave_p0_cke;
            soclinux_master_p0_odt <= soclinux_slave_p0_odt;
            soclinux_master_p0_reset_n <= soclinux_slave_p0_reset_n;
            soclinux_master_p0_act_n <= soclinux_slave_p0_act_n;
            soclinux_master_p0_wrdata <= soclinux_slave_p0_wrdata;
            soclinux_master_p0_wrdata_en <= soclinux_slave_p0_wrdata_en;
            soclinux_master_p0_wrdata_mask <= soclinux_slave_p0_wrdata_mask;
            soclinux_master_p0_rddata_en <= soclinux_slave_p0_rddata_en;
            soclinux_slave_p0_rddata <= soclinux_master_p0_rddata;
            soclinux_slave_p0_rddata_valid <= soclinux_master_p0_rddata_valid;
            soclinux_master_p1_address <= soclinux_slave_p1_address;
            soclinux_master_p1_bank <= soclinux_slave_p1_bank;
            soclinux_master_p1_cas_n <= soclinux_slave_p1_cas_n;
            soclinux_master_p1_cs_n <= soclinux_slave_p1_cs_n;
            soclinux_master_p1_ras_n <= soclinux_slave_p1_ras_n;
            soclinux_master_p1_we_n <= soclinux_slave_p1_we_n;
            soclinux_master_p1_cke <= soclinux_slave_p1_cke;
            soclinux_master_p1_odt <= soclinux_slave_p1_odt;
            soclinux_master_p1_reset_n <= soclinux_slave_p1_reset_n;
            soclinux_master_p1_act_n <= soclinux_slave_p1_act_n;
            soclinux_master_p1_wrdata <= soclinux_slave_p1_wrdata;
            soclinux_master_p1_wrdata_en <= soclinux_slave_p1_wrdata_en;
            soclinux_master_p1_wrdata_mask <= soclinux_slave_p1_wrdata_mask;
            soclinux_master_p1_rddata_en <= soclinux_slave_p1_rddata_en;
            soclinux_slave_p1_rddata <= soclinux_master_p1_rddata;
            soclinux_slave_p1_rddata_valid <= soclinux_master_p1_rddata_valid;
            soclinux_master_p2_address <= soclinux_slave_p2_address;
            soclinux_master_p2_bank <= soclinux_slave_p2_bank;
            soclinux_master_p2_cas_n <= soclinux_slave_p2_cas_n;
            soclinux_master_p2_cs_n <= soclinux_slave_p2_cs_n;
            soclinux_master_p2_ras_n <= soclinux_slave_p2_ras_n;
            soclinux_master_p2_we_n <= soclinux_slave_p2_we_n;
            soclinux_master_p2_cke <= soclinux_slave_p2_cke;
            soclinux_master_p2_odt <= soclinux_slave_p2_odt;
            soclinux_master_p2_reset_n <= soclinux_slave_p2_reset_n;
            soclinux_master_p2_act_n <= soclinux_slave_p2_act_n;
            soclinux_master_p2_wrdata <= soclinux_slave_p2_wrdata;
            soclinux_master_p2_wrdata_en <= soclinux_slave_p2_wrdata_en;
            soclinux_master_p2_wrdata_mask <= soclinux_slave_p2_wrdata_mask;
            soclinux_master_p2_rddata_en <= soclinux_slave_p2_rddata_en;
            soclinux_slave_p2_rddata <= soclinux_master_p2_rddata;
            soclinux_slave_p2_rddata_valid <= soclinux_master_p2_rddata_valid;
            soclinux_master_p3_address <= soclinux_slave_p3_address;
            soclinux_master_p3_bank <= soclinux_slave_p3_bank;
            soclinux_master_p3_cas_n <= soclinux_slave_p3_cas_n;
            soclinux_master_p3_cs_n <= soclinux_slave_p3_cs_n;
            soclinux_master_p3_ras_n <= soclinux_slave_p3_ras_n;
            soclinux_master_p3_we_n <= soclinux_slave_p3_we_n;
            soclinux_master_p3_cke <= soclinux_slave_p3_cke;
            soclinux_master_p3_odt <= soclinux_slave_p3_odt;
            soclinux_master_p3_reset_n <= soclinux_slave_p3_reset_n;
            soclinux_master_p3_act_n <= soclinux_slave_p3_act_n;
            soclinux_master_p3_wrdata <= soclinux_slave_p3_wrdata;
            soclinux_master_p3_wrdata_en <= soclinux_slave_p3_wrdata_en;
            soclinux_master_p3_wrdata_mask <= soclinux_slave_p3_wrdata_mask;
            soclinux_master_p3_rddata_en <= soclinux_slave_p3_rddata_en;
            soclinux_slave_p3_rddata <= soclinux_master_p3_rddata;
            soclinux_slave_p3_rddata_valid <= soclinux_master_p3_rddata_valid;
            if (1'd0) begin
                soclinux_master_p0_cs_n <= {2{soclinux_slave_p0_cs_n}};
                soclinux_master_p1_cs_n <= {2{soclinux_slave_p1_cs_n}};
                soclinux_master_p2_cs_n <= {2{soclinux_slave_p2_cs_n}};
                soclinux_master_p3_cs_n <= {2{soclinux_slave_p3_cs_n}};
            end
        end
    end else begin
        soclinux_master_p0_address <= soclinux_csr_dfi_p0_address;
        soclinux_master_p0_bank <= soclinux_csr_dfi_p0_bank;
        soclinux_master_p0_cas_n <= soclinux_csr_dfi_p0_cas_n;
        soclinux_master_p0_cs_n <= soclinux_csr_dfi_p0_cs_n;
        soclinux_master_p0_ras_n <= soclinux_csr_dfi_p0_ras_n;
        soclinux_master_p0_we_n <= soclinux_csr_dfi_p0_we_n;
        soclinux_master_p0_cke <= soclinux_csr_dfi_p0_cke;
        soclinux_master_p0_odt <= soclinux_csr_dfi_p0_odt;
        soclinux_master_p0_reset_n <= soclinux_csr_dfi_p0_reset_n;
        soclinux_master_p0_act_n <= soclinux_csr_dfi_p0_act_n;
        soclinux_master_p0_wrdata <= soclinux_csr_dfi_p0_wrdata;
        soclinux_master_p0_wrdata_en <= soclinux_csr_dfi_p0_wrdata_en;
        soclinux_master_p0_wrdata_mask <= soclinux_csr_dfi_p0_wrdata_mask;
        soclinux_master_p0_rddata_en <= soclinux_csr_dfi_p0_rddata_en;
        soclinux_csr_dfi_p0_rddata <= soclinux_master_p0_rddata;
        soclinux_csr_dfi_p0_rddata_valid <= soclinux_master_p0_rddata_valid;
        soclinux_master_p1_address <= soclinux_csr_dfi_p1_address;
        soclinux_master_p1_bank <= soclinux_csr_dfi_p1_bank;
        soclinux_master_p1_cas_n <= soclinux_csr_dfi_p1_cas_n;
        soclinux_master_p1_cs_n <= soclinux_csr_dfi_p1_cs_n;
        soclinux_master_p1_ras_n <= soclinux_csr_dfi_p1_ras_n;
        soclinux_master_p1_we_n <= soclinux_csr_dfi_p1_we_n;
        soclinux_master_p1_cke <= soclinux_csr_dfi_p1_cke;
        soclinux_master_p1_odt <= soclinux_csr_dfi_p1_odt;
        soclinux_master_p1_reset_n <= soclinux_csr_dfi_p1_reset_n;
        soclinux_master_p1_act_n <= soclinux_csr_dfi_p1_act_n;
        soclinux_master_p1_wrdata <= soclinux_csr_dfi_p1_wrdata;
        soclinux_master_p1_wrdata_en <= soclinux_csr_dfi_p1_wrdata_en;
        soclinux_master_p1_wrdata_mask <= soclinux_csr_dfi_p1_wrdata_mask;
        soclinux_master_p1_rddata_en <= soclinux_csr_dfi_p1_rddata_en;
        soclinux_csr_dfi_p1_rddata <= soclinux_master_p1_rddata;
        soclinux_csr_dfi_p1_rddata_valid <= soclinux_master_p1_rddata_valid;
        soclinux_master_p2_address <= soclinux_csr_dfi_p2_address;
        soclinux_master_p2_bank <= soclinux_csr_dfi_p2_bank;
        soclinux_master_p2_cas_n <= soclinux_csr_dfi_p2_cas_n;
        soclinux_master_p2_cs_n <= soclinux_csr_dfi_p2_cs_n;
        soclinux_master_p2_ras_n <= soclinux_csr_dfi_p2_ras_n;
        soclinux_master_p2_we_n <= soclinux_csr_dfi_p2_we_n;
        soclinux_master_p2_cke <= soclinux_csr_dfi_p2_cke;
        soclinux_master_p2_odt <= soclinux_csr_dfi_p2_odt;
        soclinux_master_p2_reset_n <= soclinux_csr_dfi_p2_reset_n;
        soclinux_master_p2_act_n <= soclinux_csr_dfi_p2_act_n;
        soclinux_master_p2_wrdata <= soclinux_csr_dfi_p2_wrdata;
        soclinux_master_p2_wrdata_en <= soclinux_csr_dfi_p2_wrdata_en;
        soclinux_master_p2_wrdata_mask <= soclinux_csr_dfi_p2_wrdata_mask;
        soclinux_master_p2_rddata_en <= soclinux_csr_dfi_p2_rddata_en;
        soclinux_csr_dfi_p2_rddata <= soclinux_master_p2_rddata;
        soclinux_csr_dfi_p2_rddata_valid <= soclinux_master_p2_rddata_valid;
        soclinux_master_p3_address <= soclinux_csr_dfi_p3_address;
        soclinux_master_p3_bank <= soclinux_csr_dfi_p3_bank;
        soclinux_master_p3_cas_n <= soclinux_csr_dfi_p3_cas_n;
        soclinux_master_p3_cs_n <= soclinux_csr_dfi_p3_cs_n;
        soclinux_master_p3_ras_n <= soclinux_csr_dfi_p3_ras_n;
        soclinux_master_p3_we_n <= soclinux_csr_dfi_p3_we_n;
        soclinux_master_p3_cke <= soclinux_csr_dfi_p3_cke;
        soclinux_master_p3_odt <= soclinux_csr_dfi_p3_odt;
        soclinux_master_p3_reset_n <= soclinux_csr_dfi_p3_reset_n;
        soclinux_master_p3_act_n <= soclinux_csr_dfi_p3_act_n;
        soclinux_master_p3_wrdata <= soclinux_csr_dfi_p3_wrdata;
        soclinux_master_p3_wrdata_en <= soclinux_csr_dfi_p3_wrdata_en;
        soclinux_master_p3_wrdata_mask <= soclinux_csr_dfi_p3_wrdata_mask;
        soclinux_master_p3_rddata_en <= soclinux_csr_dfi_p3_rddata_en;
        soclinux_csr_dfi_p3_rddata <= soclinux_master_p3_rddata;
        soclinux_csr_dfi_p3_rddata_valid <= soclinux_master_p3_rddata_valid;
    end
end
always @(*) begin
    soclinux_csr_dfi_p0_cke <= 1'd0;
    soclinux_csr_dfi_p0_cke <= soclinux_cke;
end
always @(*) begin
    soclinux_csr_dfi_p1_cke <= 1'd0;
    soclinux_csr_dfi_p1_cke <= soclinux_cke;
end
always @(*) begin
    soclinux_csr_dfi_p2_cke <= 1'd0;
    soclinux_csr_dfi_p2_cke <= soclinux_cke;
end
always @(*) begin
    soclinux_csr_dfi_p3_cke <= 1'd0;
    soclinux_csr_dfi_p3_cke <= soclinux_cke;
end
always @(*) begin
    soclinux_csr_dfi_p0_odt <= 1'd0;
    soclinux_csr_dfi_p0_odt <= soclinux_odt;
end
always @(*) begin
    soclinux_csr_dfi_p1_odt <= 1'd0;
    soclinux_csr_dfi_p1_odt <= soclinux_odt;
end
always @(*) begin
    soclinux_csr_dfi_p2_odt <= 1'd0;
    soclinux_csr_dfi_p2_odt <= soclinux_odt;
end
always @(*) begin
    soclinux_csr_dfi_p3_odt <= 1'd0;
    soclinux_csr_dfi_p3_odt <= soclinux_odt;
end
assign soclinux_csr_dfi_p0_reset_n = soclinux_reset_n;
assign soclinux_csr_dfi_p1_reset_n = soclinux_reset_n;
assign soclinux_csr_dfi_p2_reset_n = soclinux_reset_n;
assign soclinux_csr_dfi_p3_reset_n = soclinux_reset_n;
always @(*) begin
    soclinux_csr_dfi_p0_cas_n <= 1'd1;
    soclinux_csr_dfi_p0_cs_n <= 1'd1;
    soclinux_csr_dfi_p0_ras_n <= 1'd1;
    soclinux_csr_dfi_p0_we_n <= 1'd1;
    if (soclinux_phaseinjector0_command_issue_re) begin
        if (soclinux_phaseinjector0_csrfield_cs_top) begin
            soclinux_csr_dfi_p0_cs_n <= 2'd2;
        end else begin
            if (soclinux_phaseinjector0_csrfield_cs_bottom) begin
                soclinux_csr_dfi_p0_cs_n <= 1'd1;
            end else begin
                soclinux_csr_dfi_p0_cs_n <= {1{(~soclinux_phaseinjector0_csrfield_cs)}};
            end
        end
        soclinux_csr_dfi_p0_we_n <= (~soclinux_phaseinjector0_csrfield_we);
        soclinux_csr_dfi_p0_cas_n <= (~soclinux_phaseinjector0_csrfield_cas);
        soclinux_csr_dfi_p0_ras_n <= (~soclinux_phaseinjector0_csrfield_ras);
    end else begin
        soclinux_csr_dfi_p0_cs_n <= {1{1'd1}};
        soclinux_csr_dfi_p0_we_n <= 1'd1;
        soclinux_csr_dfi_p0_cas_n <= 1'd1;
        soclinux_csr_dfi_p0_ras_n <= 1'd1;
    end
end
assign soclinux_csr_dfi_p0_address = soclinux_phaseinjector0_address_storage;
assign soclinux_csr_dfi_p0_bank = soclinux_phaseinjector0_baddress_storage;
assign soclinux_csr_dfi_p0_wrdata_en = (soclinux_phaseinjector0_command_issue_re & soclinux_phaseinjector0_csrfield_wren);
assign soclinux_csr_dfi_p0_rddata_en = (soclinux_phaseinjector0_command_issue_re & soclinux_phaseinjector0_csrfield_rden);
assign soclinux_csr_dfi_p0_wrdata = soclinux_phaseinjector0_wrdata_storage;
assign soclinux_csr_dfi_p0_wrdata_mask = 1'd0;
always @(*) begin
    soclinux_csr_dfi_p1_cas_n <= 1'd1;
    soclinux_csr_dfi_p1_cs_n <= 1'd1;
    soclinux_csr_dfi_p1_ras_n <= 1'd1;
    soclinux_csr_dfi_p1_we_n <= 1'd1;
    if (soclinux_phaseinjector1_command_issue_re) begin
        if (soclinux_phaseinjector1_csrfield_cs_top) begin
            soclinux_csr_dfi_p1_cs_n <= 2'd2;
        end else begin
            if (soclinux_phaseinjector1_csrfield_cs_bottom) begin
                soclinux_csr_dfi_p1_cs_n <= 1'd1;
            end else begin
                soclinux_csr_dfi_p1_cs_n <= {1{(~soclinux_phaseinjector1_csrfield_cs)}};
            end
        end
        soclinux_csr_dfi_p1_we_n <= (~soclinux_phaseinjector1_csrfield_we);
        soclinux_csr_dfi_p1_cas_n <= (~soclinux_phaseinjector1_csrfield_cas);
        soclinux_csr_dfi_p1_ras_n <= (~soclinux_phaseinjector1_csrfield_ras);
    end else begin
        soclinux_csr_dfi_p1_cs_n <= {1{1'd1}};
        soclinux_csr_dfi_p1_we_n <= 1'd1;
        soclinux_csr_dfi_p1_cas_n <= 1'd1;
        soclinux_csr_dfi_p1_ras_n <= 1'd1;
    end
end
assign soclinux_csr_dfi_p1_address = soclinux_phaseinjector1_address_storage;
assign soclinux_csr_dfi_p1_bank = soclinux_phaseinjector1_baddress_storage;
assign soclinux_csr_dfi_p1_wrdata_en = (soclinux_phaseinjector1_command_issue_re & soclinux_phaseinjector1_csrfield_wren);
assign soclinux_csr_dfi_p1_rddata_en = (soclinux_phaseinjector1_command_issue_re & soclinux_phaseinjector1_csrfield_rden);
assign soclinux_csr_dfi_p1_wrdata = soclinux_phaseinjector1_wrdata_storage;
assign soclinux_csr_dfi_p1_wrdata_mask = 1'd0;
always @(*) begin
    soclinux_csr_dfi_p2_cas_n <= 1'd1;
    soclinux_csr_dfi_p2_cs_n <= 1'd1;
    soclinux_csr_dfi_p2_ras_n <= 1'd1;
    soclinux_csr_dfi_p2_we_n <= 1'd1;
    if (soclinux_phaseinjector2_command_issue_re) begin
        if (soclinux_phaseinjector2_csrfield_cs_top) begin
            soclinux_csr_dfi_p2_cs_n <= 2'd2;
        end else begin
            if (soclinux_phaseinjector2_csrfield_cs_bottom) begin
                soclinux_csr_dfi_p2_cs_n <= 1'd1;
            end else begin
                soclinux_csr_dfi_p2_cs_n <= {1{(~soclinux_phaseinjector2_csrfield_cs)}};
            end
        end
        soclinux_csr_dfi_p2_we_n <= (~soclinux_phaseinjector2_csrfield_we);
        soclinux_csr_dfi_p2_cas_n <= (~soclinux_phaseinjector2_csrfield_cas);
        soclinux_csr_dfi_p2_ras_n <= (~soclinux_phaseinjector2_csrfield_ras);
    end else begin
        soclinux_csr_dfi_p2_cs_n <= {1{1'd1}};
        soclinux_csr_dfi_p2_we_n <= 1'd1;
        soclinux_csr_dfi_p2_cas_n <= 1'd1;
        soclinux_csr_dfi_p2_ras_n <= 1'd1;
    end
end
assign soclinux_csr_dfi_p2_address = soclinux_phaseinjector2_address_storage;
assign soclinux_csr_dfi_p2_bank = soclinux_phaseinjector2_baddress_storage;
assign soclinux_csr_dfi_p2_wrdata_en = (soclinux_phaseinjector2_command_issue_re & soclinux_phaseinjector2_csrfield_wren);
assign soclinux_csr_dfi_p2_rddata_en = (soclinux_phaseinjector2_command_issue_re & soclinux_phaseinjector2_csrfield_rden);
assign soclinux_csr_dfi_p2_wrdata = soclinux_phaseinjector2_wrdata_storage;
assign soclinux_csr_dfi_p2_wrdata_mask = 1'd0;
always @(*) begin
    soclinux_csr_dfi_p3_cas_n <= 1'd1;
    soclinux_csr_dfi_p3_cs_n <= 1'd1;
    soclinux_csr_dfi_p3_ras_n <= 1'd1;
    soclinux_csr_dfi_p3_we_n <= 1'd1;
    if (soclinux_phaseinjector3_command_issue_re) begin
        if (soclinux_phaseinjector3_csrfield_cs_top) begin
            soclinux_csr_dfi_p3_cs_n <= 2'd2;
        end else begin
            if (soclinux_phaseinjector3_csrfield_cs_bottom) begin
                soclinux_csr_dfi_p3_cs_n <= 1'd1;
            end else begin
                soclinux_csr_dfi_p3_cs_n <= {1{(~soclinux_phaseinjector3_csrfield_cs)}};
            end
        end
        soclinux_csr_dfi_p3_we_n <= (~soclinux_phaseinjector3_csrfield_we);
        soclinux_csr_dfi_p3_cas_n <= (~soclinux_phaseinjector3_csrfield_cas);
        soclinux_csr_dfi_p3_ras_n <= (~soclinux_phaseinjector3_csrfield_ras);
    end else begin
        soclinux_csr_dfi_p3_cs_n <= {1{1'd1}};
        soclinux_csr_dfi_p3_we_n <= 1'd1;
        soclinux_csr_dfi_p3_cas_n <= 1'd1;
        soclinux_csr_dfi_p3_ras_n <= 1'd1;
    end
end
assign soclinux_csr_dfi_p3_address = soclinux_phaseinjector3_address_storage;
assign soclinux_csr_dfi_p3_bank = soclinux_phaseinjector3_baddress_storage;
assign soclinux_csr_dfi_p3_wrdata_en = (soclinux_phaseinjector3_command_issue_re & soclinux_phaseinjector3_csrfield_wren);
assign soclinux_csr_dfi_p3_rddata_en = (soclinux_phaseinjector3_command_issue_re & soclinux_phaseinjector3_csrfield_rden);
assign soclinux_csr_dfi_p3_wrdata = soclinux_phaseinjector3_wrdata_storage;
assign soclinux_csr_dfi_p3_wrdata_mask = 1'd0;
assign soclinux_bankmachine0_req_valid = soclinux_interface_bank0_valid;
assign soclinux_interface_bank0_ready = soclinux_bankmachine0_req_ready;
assign soclinux_bankmachine0_req_we = soclinux_interface_bank0_we;
assign soclinux_bankmachine0_req_addr = soclinux_interface_bank0_addr;
assign soclinux_interface_bank0_lock = soclinux_bankmachine0_req_lock;
assign soclinux_interface_bank0_wdata_ready = soclinux_bankmachine0_req_wdata_ready;
assign soclinux_interface_bank0_rdata_valid = soclinux_bankmachine0_req_rdata_valid;
assign soclinux_bankmachine1_req_valid = soclinux_interface_bank1_valid;
assign soclinux_interface_bank1_ready = soclinux_bankmachine1_req_ready;
assign soclinux_bankmachine1_req_we = soclinux_interface_bank1_we;
assign soclinux_bankmachine1_req_addr = soclinux_interface_bank1_addr;
assign soclinux_interface_bank1_lock = soclinux_bankmachine1_req_lock;
assign soclinux_interface_bank1_wdata_ready = soclinux_bankmachine1_req_wdata_ready;
assign soclinux_interface_bank1_rdata_valid = soclinux_bankmachine1_req_rdata_valid;
assign soclinux_bankmachine2_req_valid = soclinux_interface_bank2_valid;
assign soclinux_interface_bank2_ready = soclinux_bankmachine2_req_ready;
assign soclinux_bankmachine2_req_we = soclinux_interface_bank2_we;
assign soclinux_bankmachine2_req_addr = soclinux_interface_bank2_addr;
assign soclinux_interface_bank2_lock = soclinux_bankmachine2_req_lock;
assign soclinux_interface_bank2_wdata_ready = soclinux_bankmachine2_req_wdata_ready;
assign soclinux_interface_bank2_rdata_valid = soclinux_bankmachine2_req_rdata_valid;
assign soclinux_bankmachine3_req_valid = soclinux_interface_bank3_valid;
assign soclinux_interface_bank3_ready = soclinux_bankmachine3_req_ready;
assign soclinux_bankmachine3_req_we = soclinux_interface_bank3_we;
assign soclinux_bankmachine3_req_addr = soclinux_interface_bank3_addr;
assign soclinux_interface_bank3_lock = soclinux_bankmachine3_req_lock;
assign soclinux_interface_bank3_wdata_ready = soclinux_bankmachine3_req_wdata_ready;
assign soclinux_interface_bank3_rdata_valid = soclinux_bankmachine3_req_rdata_valid;
assign soclinux_bankmachine4_req_valid = soclinux_interface_bank4_valid;
assign soclinux_interface_bank4_ready = soclinux_bankmachine4_req_ready;
assign soclinux_bankmachine4_req_we = soclinux_interface_bank4_we;
assign soclinux_bankmachine4_req_addr = soclinux_interface_bank4_addr;
assign soclinux_interface_bank4_lock = soclinux_bankmachine4_req_lock;
assign soclinux_interface_bank4_wdata_ready = soclinux_bankmachine4_req_wdata_ready;
assign soclinux_interface_bank4_rdata_valid = soclinux_bankmachine4_req_rdata_valid;
assign soclinux_bankmachine5_req_valid = soclinux_interface_bank5_valid;
assign soclinux_interface_bank5_ready = soclinux_bankmachine5_req_ready;
assign soclinux_bankmachine5_req_we = soclinux_interface_bank5_we;
assign soclinux_bankmachine5_req_addr = soclinux_interface_bank5_addr;
assign soclinux_interface_bank5_lock = soclinux_bankmachine5_req_lock;
assign soclinux_interface_bank5_wdata_ready = soclinux_bankmachine5_req_wdata_ready;
assign soclinux_interface_bank5_rdata_valid = soclinux_bankmachine5_req_rdata_valid;
assign soclinux_bankmachine6_req_valid = soclinux_interface_bank6_valid;
assign soclinux_interface_bank6_ready = soclinux_bankmachine6_req_ready;
assign soclinux_bankmachine6_req_we = soclinux_interface_bank6_we;
assign soclinux_bankmachine6_req_addr = soclinux_interface_bank6_addr;
assign soclinux_interface_bank6_lock = soclinux_bankmachine6_req_lock;
assign soclinux_interface_bank6_wdata_ready = soclinux_bankmachine6_req_wdata_ready;
assign soclinux_interface_bank6_rdata_valid = soclinux_bankmachine6_req_rdata_valid;
assign soclinux_bankmachine7_req_valid = soclinux_interface_bank7_valid;
assign soclinux_interface_bank7_ready = soclinux_bankmachine7_req_ready;
assign soclinux_bankmachine7_req_we = soclinux_interface_bank7_we;
assign soclinux_bankmachine7_req_addr = soclinux_interface_bank7_addr;
assign soclinux_interface_bank7_lock = soclinux_bankmachine7_req_lock;
assign soclinux_interface_bank7_wdata_ready = soclinux_bankmachine7_req_wdata_ready;
assign soclinux_interface_bank7_rdata_valid = soclinux_bankmachine7_req_rdata_valid;
assign soclinux_timer_wait = (~soclinux_timer_done0);
assign soclinux_postponer_req_i = soclinux_timer_done0;
assign soclinux_wants_refresh = soclinux_postponer_req_o;
assign soclinux_wants_zqcs = soclinux_zqcs_timer_done0;
assign soclinux_zqcs_timer_wait = (~soclinux_zqcs_executer_done);
assign soclinux_timer_done1 = (soclinux_timer_count1 == 1'd0);
assign soclinux_timer_done0 = soclinux_timer_done1;
assign soclinux_timer_count0 = soclinux_timer_count1;
assign soclinux_sequencer_start1 = (soclinux_sequencer_start0 | (soclinux_sequencer_count != 1'd0));
assign soclinux_sequencer_done0 = (soclinux_sequencer_done1 & (soclinux_sequencer_count == 1'd0));
assign soclinux_zqcs_timer_done1 = (soclinux_zqcs_timer_count1 == 1'd0);
assign soclinux_zqcs_timer_done0 = soclinux_zqcs_timer_done1;
assign soclinux_zqcs_timer_count0 = soclinux_zqcs_timer_count1;
always @(*) begin
    refresher_next_state <= 2'd0;
    soclinux_cmd_last <= 1'd0;
    soclinux_cmd_valid <= 1'd0;
    soclinux_sequencer_start0 <= 1'd0;
    soclinux_zqcs_executer_start <= 1'd0;
    refresher_next_state <= refresher_state;
    case (refresher_state)
        1'd1: begin
            soclinux_cmd_valid <= 1'd1;
            if (soclinux_cmd_ready) begin
                soclinux_sequencer_start0 <= 1'd1;
                refresher_next_state <= 2'd2;
            end
        end
        2'd2: begin
            soclinux_cmd_valid <= 1'd1;
            if (soclinux_sequencer_done0) begin
                if (soclinux_wants_zqcs) begin
                    soclinux_zqcs_executer_start <= 1'd1;
                    refresher_next_state <= 2'd3;
                end else begin
                    soclinux_cmd_valid <= 1'd0;
                    soclinux_cmd_last <= 1'd1;
                    refresher_next_state <= 1'd0;
                end
            end
        end
        2'd3: begin
            soclinux_cmd_valid <= 1'd1;
            if (soclinux_zqcs_executer_done) begin
                soclinux_cmd_valid <= 1'd0;
                soclinux_cmd_last <= 1'd1;
                refresher_next_state <= 1'd0;
            end
        end
        default: begin
            if (1'd1) begin
                if (soclinux_wants_refresh) begin
                    refresher_next_state <= 1'd1;
                end
            end
        end
    endcase
end
assign soclinux_bankmachine0_sink_valid = soclinux_bankmachine0_req_valid;
assign soclinux_bankmachine0_req_ready = soclinux_bankmachine0_sink_ready;
assign soclinux_bankmachine0_sink_payload_we = soclinux_bankmachine0_req_we;
assign soclinux_bankmachine0_sink_payload_addr = soclinux_bankmachine0_req_addr;
assign soclinux_bankmachine0_sink_sink_valid = soclinux_bankmachine0_source_valid;
assign soclinux_bankmachine0_source_ready = soclinux_bankmachine0_sink_sink_ready;
assign soclinux_bankmachine0_sink_sink_first = soclinux_bankmachine0_source_first;
assign soclinux_bankmachine0_sink_sink_last = soclinux_bankmachine0_source_last;
assign soclinux_bankmachine0_sink_sink_payload_we = soclinux_bankmachine0_source_payload_we;
assign soclinux_bankmachine0_sink_sink_payload_addr = soclinux_bankmachine0_source_payload_addr;
assign soclinux_bankmachine0_source_source_ready = (soclinux_bankmachine0_req_wdata_ready | soclinux_bankmachine0_req_rdata_valid);
assign soclinux_bankmachine0_req_lock = (soclinux_bankmachine0_source_valid | soclinux_bankmachine0_source_source_valid);
assign soclinux_bankmachine0_row_hit = (soclinux_bankmachine0_row == soclinux_bankmachine0_source_source_payload_addr[20:7]);
assign soclinux_bankmachine0_cmd_payload_ba = 1'd0;
always @(*) begin
    soclinux_bankmachine0_cmd_payload_a <= 14'd0;
    if (soclinux_bankmachine0_row_col_n_addr_sel) begin
        soclinux_bankmachine0_cmd_payload_a <= soclinux_bankmachine0_source_source_payload_addr[20:7];
    end else begin
        soclinux_bankmachine0_cmd_payload_a <= ((soclinux_bankmachine0_auto_precharge <<< 4'd10) | {soclinux_bankmachine0_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign soclinux_bankmachine0_twtpcon_valid = ((soclinux_bankmachine0_cmd_valid & soclinux_bankmachine0_cmd_ready) & soclinux_bankmachine0_cmd_payload_is_write);
assign soclinux_bankmachine0_trccon_valid = ((soclinux_bankmachine0_cmd_valid & soclinux_bankmachine0_cmd_ready) & soclinux_bankmachine0_row_open);
assign soclinux_bankmachine0_trascon_valid = ((soclinux_bankmachine0_cmd_valid & soclinux_bankmachine0_cmd_ready) & soclinux_bankmachine0_row_open);
always @(*) begin
    soclinux_bankmachine0_auto_precharge <= 1'd0;
    if ((soclinux_bankmachine0_source_valid & soclinux_bankmachine0_source_source_valid)) begin
        if ((soclinux_bankmachine0_source_payload_addr[20:7] != soclinux_bankmachine0_source_source_payload_addr[20:7])) begin
            soclinux_bankmachine0_auto_precharge <= (soclinux_bankmachine0_row_close == 1'd0);
        end
    end
end
assign soclinux_bankmachine0_syncfifo0_din = {soclinux_bankmachine0_fifo_in_last, soclinux_bankmachine0_fifo_in_first, soclinux_bankmachine0_fifo_in_payload_addr, soclinux_bankmachine0_fifo_in_payload_we};
assign {soclinux_bankmachine0_fifo_out_last, soclinux_bankmachine0_fifo_out_first, soclinux_bankmachine0_fifo_out_payload_addr, soclinux_bankmachine0_fifo_out_payload_we} = soclinux_bankmachine0_syncfifo0_dout;
assign soclinux_bankmachine0_sink_ready = soclinux_bankmachine0_syncfifo0_writable;
assign soclinux_bankmachine0_syncfifo0_we = soclinux_bankmachine0_sink_valid;
assign soclinux_bankmachine0_fifo_in_first = soclinux_bankmachine0_sink_first;
assign soclinux_bankmachine0_fifo_in_last = soclinux_bankmachine0_sink_last;
assign soclinux_bankmachine0_fifo_in_payload_we = soclinux_bankmachine0_sink_payload_we;
assign soclinux_bankmachine0_fifo_in_payload_addr = soclinux_bankmachine0_sink_payload_addr;
assign soclinux_bankmachine0_source_valid = soclinux_bankmachine0_syncfifo0_readable;
assign soclinux_bankmachine0_source_first = soclinux_bankmachine0_fifo_out_first;
assign soclinux_bankmachine0_source_last = soclinux_bankmachine0_fifo_out_last;
assign soclinux_bankmachine0_source_payload_we = soclinux_bankmachine0_fifo_out_payload_we;
assign soclinux_bankmachine0_source_payload_addr = soclinux_bankmachine0_fifo_out_payload_addr;
assign soclinux_bankmachine0_syncfifo0_re = soclinux_bankmachine0_source_ready;
always @(*) begin
    soclinux_bankmachine0_wrport_adr <= 3'd0;
    if (soclinux_bankmachine0_replace) begin
        soclinux_bankmachine0_wrport_adr <= (soclinux_bankmachine0_produce - 1'd1);
    end else begin
        soclinux_bankmachine0_wrport_adr <= soclinux_bankmachine0_produce;
    end
end
assign soclinux_bankmachine0_wrport_dat_w = soclinux_bankmachine0_syncfifo0_din;
assign soclinux_bankmachine0_wrport_we = (soclinux_bankmachine0_syncfifo0_we & (soclinux_bankmachine0_syncfifo0_writable | soclinux_bankmachine0_replace));
assign soclinux_bankmachine0_do_read = (soclinux_bankmachine0_syncfifo0_readable & soclinux_bankmachine0_syncfifo0_re);
assign soclinux_bankmachine0_rdport_adr = soclinux_bankmachine0_consume;
assign soclinux_bankmachine0_syncfifo0_dout = soclinux_bankmachine0_rdport_dat_r;
assign soclinux_bankmachine0_syncfifo0_writable = (soclinux_bankmachine0_level != 4'd8);
assign soclinux_bankmachine0_syncfifo0_readable = (soclinux_bankmachine0_level != 1'd0);
assign soclinux_bankmachine0_pipe_valid_sink_ready = ((~soclinux_bankmachine0_pipe_valid_source_valid) | soclinux_bankmachine0_pipe_valid_source_ready);
assign soclinux_bankmachine0_pipe_valid_sink_valid = soclinux_bankmachine0_sink_sink_valid;
assign soclinux_bankmachine0_sink_sink_ready = soclinux_bankmachine0_pipe_valid_sink_ready;
assign soclinux_bankmachine0_pipe_valid_sink_first = soclinux_bankmachine0_sink_sink_first;
assign soclinux_bankmachine0_pipe_valid_sink_last = soclinux_bankmachine0_sink_sink_last;
assign soclinux_bankmachine0_pipe_valid_sink_payload_we = soclinux_bankmachine0_sink_sink_payload_we;
assign soclinux_bankmachine0_pipe_valid_sink_payload_addr = soclinux_bankmachine0_sink_sink_payload_addr;
assign soclinux_bankmachine0_source_source_valid = soclinux_bankmachine0_pipe_valid_source_valid;
assign soclinux_bankmachine0_pipe_valid_source_ready = soclinux_bankmachine0_source_source_ready;
assign soclinux_bankmachine0_source_source_first = soclinux_bankmachine0_pipe_valid_source_first;
assign soclinux_bankmachine0_source_source_last = soclinux_bankmachine0_pipe_valid_source_last;
assign soclinux_bankmachine0_source_source_payload_we = soclinux_bankmachine0_pipe_valid_source_payload_we;
assign soclinux_bankmachine0_source_source_payload_addr = soclinux_bankmachine0_pipe_valid_source_payload_addr;
always @(*) begin
    bankmachine0_next_state <= 4'd0;
    soclinux_bankmachine0_cmd_payload_cas <= 1'd0;
    soclinux_bankmachine0_cmd_payload_is_cmd <= 1'd0;
    soclinux_bankmachine0_cmd_payload_is_read <= 1'd0;
    soclinux_bankmachine0_cmd_payload_is_write <= 1'd0;
    soclinux_bankmachine0_cmd_payload_ras <= 1'd0;
    soclinux_bankmachine0_cmd_payload_we <= 1'd0;
    soclinux_bankmachine0_cmd_valid <= 1'd0;
    soclinux_bankmachine0_refresh_gnt <= 1'd0;
    soclinux_bankmachine0_req_rdata_valid <= 1'd0;
    soclinux_bankmachine0_req_wdata_ready <= 1'd0;
    soclinux_bankmachine0_row_close <= 1'd0;
    soclinux_bankmachine0_row_col_n_addr_sel <= 1'd0;
    soclinux_bankmachine0_row_open <= 1'd0;
    bankmachine0_next_state <= bankmachine0_state;
    case (bankmachine0_state)
        1'd1: begin
            if ((soclinux_bankmachine0_twtpcon_ready & soclinux_bankmachine0_trascon_ready)) begin
                soclinux_bankmachine0_cmd_valid <= 1'd1;
                if (soclinux_bankmachine0_cmd_ready) begin
                    bankmachine0_next_state <= 3'd5;
                end
                soclinux_bankmachine0_cmd_payload_ras <= 1'd1;
                soclinux_bankmachine0_cmd_payload_we <= 1'd1;
                soclinux_bankmachine0_cmd_payload_is_cmd <= 1'd1;
            end
            soclinux_bankmachine0_row_close <= 1'd1;
        end
        2'd2: begin
            if ((soclinux_bankmachine0_twtpcon_ready & soclinux_bankmachine0_trascon_ready)) begin
                bankmachine0_next_state <= 3'd5;
            end
            soclinux_bankmachine0_row_close <= 1'd1;
        end
        2'd3: begin
            if (soclinux_bankmachine0_trccon_ready) begin
                soclinux_bankmachine0_row_col_n_addr_sel <= 1'd1;
                soclinux_bankmachine0_row_open <= 1'd1;
                soclinux_bankmachine0_cmd_valid <= 1'd1;
                soclinux_bankmachine0_cmd_payload_is_cmd <= 1'd1;
                if (soclinux_bankmachine0_cmd_ready) begin
                    bankmachine0_next_state <= 3'd7;
                end
                soclinux_bankmachine0_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (soclinux_bankmachine0_twtpcon_ready) begin
                soclinux_bankmachine0_refresh_gnt <= 1'd1;
            end
            soclinux_bankmachine0_row_close <= 1'd1;
            soclinux_bankmachine0_cmd_payload_is_cmd <= 1'd1;
            if ((~soclinux_bankmachine0_refresh_req)) begin
                bankmachine0_next_state <= 1'd0;
            end
        end
        3'd5: begin
            bankmachine0_next_state <= 3'd6;
        end
        3'd6: begin
            bankmachine0_next_state <= 2'd3;
        end
        3'd7: begin
            bankmachine0_next_state <= 4'd8;
        end
        4'd8: begin
            bankmachine0_next_state <= 1'd0;
        end
        default: begin
            if (soclinux_bankmachine0_refresh_req) begin
                bankmachine0_next_state <= 3'd4;
            end else begin
                if (soclinux_bankmachine0_source_source_valid) begin
                    if (soclinux_bankmachine0_row_opened) begin
                        if (soclinux_bankmachine0_row_hit) begin
                            soclinux_bankmachine0_cmd_valid <= 1'd1;
                            if (soclinux_bankmachine0_source_source_payload_we) begin
                                soclinux_bankmachine0_req_wdata_ready <= soclinux_bankmachine0_cmd_ready;
                                soclinux_bankmachine0_cmd_payload_is_write <= 1'd1;
                                soclinux_bankmachine0_cmd_payload_we <= 1'd1;
                            end else begin
                                soclinux_bankmachine0_req_rdata_valid <= soclinux_bankmachine0_cmd_ready;
                                soclinux_bankmachine0_cmd_payload_is_read <= 1'd1;
                            end
                            soclinux_bankmachine0_cmd_payload_cas <= 1'd1;
                            if ((soclinux_bankmachine0_cmd_ready & soclinux_bankmachine0_auto_precharge)) begin
                                bankmachine0_next_state <= 2'd2;
                            end
                        end else begin
                            bankmachine0_next_state <= 1'd1;
                        end
                    end else begin
                        bankmachine0_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign soclinux_bankmachine1_sink_valid = soclinux_bankmachine1_req_valid;
assign soclinux_bankmachine1_req_ready = soclinux_bankmachine1_sink_ready;
assign soclinux_bankmachine1_sink_payload_we = soclinux_bankmachine1_req_we;
assign soclinux_bankmachine1_sink_payload_addr = soclinux_bankmachine1_req_addr;
assign soclinux_bankmachine1_sink_sink_valid = soclinux_bankmachine1_source_valid;
assign soclinux_bankmachine1_source_ready = soclinux_bankmachine1_sink_sink_ready;
assign soclinux_bankmachine1_sink_sink_first = soclinux_bankmachine1_source_first;
assign soclinux_bankmachine1_sink_sink_last = soclinux_bankmachine1_source_last;
assign soclinux_bankmachine1_sink_sink_payload_we = soclinux_bankmachine1_source_payload_we;
assign soclinux_bankmachine1_sink_sink_payload_addr = soclinux_bankmachine1_source_payload_addr;
assign soclinux_bankmachine1_source_source_ready = (soclinux_bankmachine1_req_wdata_ready | soclinux_bankmachine1_req_rdata_valid);
assign soclinux_bankmachine1_req_lock = (soclinux_bankmachine1_source_valid | soclinux_bankmachine1_source_source_valid);
assign soclinux_bankmachine1_row_hit = (soclinux_bankmachine1_row == soclinux_bankmachine1_source_source_payload_addr[20:7]);
assign soclinux_bankmachine1_cmd_payload_ba = 1'd1;
always @(*) begin
    soclinux_bankmachine1_cmd_payload_a <= 14'd0;
    if (soclinux_bankmachine1_row_col_n_addr_sel) begin
        soclinux_bankmachine1_cmd_payload_a <= soclinux_bankmachine1_source_source_payload_addr[20:7];
    end else begin
        soclinux_bankmachine1_cmd_payload_a <= ((soclinux_bankmachine1_auto_precharge <<< 4'd10) | {soclinux_bankmachine1_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign soclinux_bankmachine1_twtpcon_valid = ((soclinux_bankmachine1_cmd_valid & soclinux_bankmachine1_cmd_ready) & soclinux_bankmachine1_cmd_payload_is_write);
assign soclinux_bankmachine1_trccon_valid = ((soclinux_bankmachine1_cmd_valid & soclinux_bankmachine1_cmd_ready) & soclinux_bankmachine1_row_open);
assign soclinux_bankmachine1_trascon_valid = ((soclinux_bankmachine1_cmd_valid & soclinux_bankmachine1_cmd_ready) & soclinux_bankmachine1_row_open);
always @(*) begin
    soclinux_bankmachine1_auto_precharge <= 1'd0;
    if ((soclinux_bankmachine1_source_valid & soclinux_bankmachine1_source_source_valid)) begin
        if ((soclinux_bankmachine1_source_payload_addr[20:7] != soclinux_bankmachine1_source_source_payload_addr[20:7])) begin
            soclinux_bankmachine1_auto_precharge <= (soclinux_bankmachine1_row_close == 1'd0);
        end
    end
end
assign soclinux_bankmachine1_syncfifo1_din = {soclinux_bankmachine1_fifo_in_last, soclinux_bankmachine1_fifo_in_first, soclinux_bankmachine1_fifo_in_payload_addr, soclinux_bankmachine1_fifo_in_payload_we};
assign {soclinux_bankmachine1_fifo_out_last, soclinux_bankmachine1_fifo_out_first, soclinux_bankmachine1_fifo_out_payload_addr, soclinux_bankmachine1_fifo_out_payload_we} = soclinux_bankmachine1_syncfifo1_dout;
assign soclinux_bankmachine1_sink_ready = soclinux_bankmachine1_syncfifo1_writable;
assign soclinux_bankmachine1_syncfifo1_we = soclinux_bankmachine1_sink_valid;
assign soclinux_bankmachine1_fifo_in_first = soclinux_bankmachine1_sink_first;
assign soclinux_bankmachine1_fifo_in_last = soclinux_bankmachine1_sink_last;
assign soclinux_bankmachine1_fifo_in_payload_we = soclinux_bankmachine1_sink_payload_we;
assign soclinux_bankmachine1_fifo_in_payload_addr = soclinux_bankmachine1_sink_payload_addr;
assign soclinux_bankmachine1_source_valid = soclinux_bankmachine1_syncfifo1_readable;
assign soclinux_bankmachine1_source_first = soclinux_bankmachine1_fifo_out_first;
assign soclinux_bankmachine1_source_last = soclinux_bankmachine1_fifo_out_last;
assign soclinux_bankmachine1_source_payload_we = soclinux_bankmachine1_fifo_out_payload_we;
assign soclinux_bankmachine1_source_payload_addr = soclinux_bankmachine1_fifo_out_payload_addr;
assign soclinux_bankmachine1_syncfifo1_re = soclinux_bankmachine1_source_ready;
always @(*) begin
    soclinux_bankmachine1_wrport_adr <= 3'd0;
    if (soclinux_bankmachine1_replace) begin
        soclinux_bankmachine1_wrport_adr <= (soclinux_bankmachine1_produce - 1'd1);
    end else begin
        soclinux_bankmachine1_wrport_adr <= soclinux_bankmachine1_produce;
    end
end
assign soclinux_bankmachine1_wrport_dat_w = soclinux_bankmachine1_syncfifo1_din;
assign soclinux_bankmachine1_wrport_we = (soclinux_bankmachine1_syncfifo1_we & (soclinux_bankmachine1_syncfifo1_writable | soclinux_bankmachine1_replace));
assign soclinux_bankmachine1_do_read = (soclinux_bankmachine1_syncfifo1_readable & soclinux_bankmachine1_syncfifo1_re);
assign soclinux_bankmachine1_rdport_adr = soclinux_bankmachine1_consume;
assign soclinux_bankmachine1_syncfifo1_dout = soclinux_bankmachine1_rdport_dat_r;
assign soclinux_bankmachine1_syncfifo1_writable = (soclinux_bankmachine1_level != 4'd8);
assign soclinux_bankmachine1_syncfifo1_readable = (soclinux_bankmachine1_level != 1'd0);
assign soclinux_bankmachine1_pipe_valid_sink_ready = ((~soclinux_bankmachine1_pipe_valid_source_valid) | soclinux_bankmachine1_pipe_valid_source_ready);
assign soclinux_bankmachine1_pipe_valid_sink_valid = soclinux_bankmachine1_sink_sink_valid;
assign soclinux_bankmachine1_sink_sink_ready = soclinux_bankmachine1_pipe_valid_sink_ready;
assign soclinux_bankmachine1_pipe_valid_sink_first = soclinux_bankmachine1_sink_sink_first;
assign soclinux_bankmachine1_pipe_valid_sink_last = soclinux_bankmachine1_sink_sink_last;
assign soclinux_bankmachine1_pipe_valid_sink_payload_we = soclinux_bankmachine1_sink_sink_payload_we;
assign soclinux_bankmachine1_pipe_valid_sink_payload_addr = soclinux_bankmachine1_sink_sink_payload_addr;
assign soclinux_bankmachine1_source_source_valid = soclinux_bankmachine1_pipe_valid_source_valid;
assign soclinux_bankmachine1_pipe_valid_source_ready = soclinux_bankmachine1_source_source_ready;
assign soclinux_bankmachine1_source_source_first = soclinux_bankmachine1_pipe_valid_source_first;
assign soclinux_bankmachine1_source_source_last = soclinux_bankmachine1_pipe_valid_source_last;
assign soclinux_bankmachine1_source_source_payload_we = soclinux_bankmachine1_pipe_valid_source_payload_we;
assign soclinux_bankmachine1_source_source_payload_addr = soclinux_bankmachine1_pipe_valid_source_payload_addr;
always @(*) begin
    bankmachine1_next_state <= 4'd0;
    soclinux_bankmachine1_cmd_payload_cas <= 1'd0;
    soclinux_bankmachine1_cmd_payload_is_cmd <= 1'd0;
    soclinux_bankmachine1_cmd_payload_is_read <= 1'd0;
    soclinux_bankmachine1_cmd_payload_is_write <= 1'd0;
    soclinux_bankmachine1_cmd_payload_ras <= 1'd0;
    soclinux_bankmachine1_cmd_payload_we <= 1'd0;
    soclinux_bankmachine1_cmd_valid <= 1'd0;
    soclinux_bankmachine1_refresh_gnt <= 1'd0;
    soclinux_bankmachine1_req_rdata_valid <= 1'd0;
    soclinux_bankmachine1_req_wdata_ready <= 1'd0;
    soclinux_bankmachine1_row_close <= 1'd0;
    soclinux_bankmachine1_row_col_n_addr_sel <= 1'd0;
    soclinux_bankmachine1_row_open <= 1'd0;
    bankmachine1_next_state <= bankmachine1_state;
    case (bankmachine1_state)
        1'd1: begin
            if ((soclinux_bankmachine1_twtpcon_ready & soclinux_bankmachine1_trascon_ready)) begin
                soclinux_bankmachine1_cmd_valid <= 1'd1;
                if (soclinux_bankmachine1_cmd_ready) begin
                    bankmachine1_next_state <= 3'd5;
                end
                soclinux_bankmachine1_cmd_payload_ras <= 1'd1;
                soclinux_bankmachine1_cmd_payload_we <= 1'd1;
                soclinux_bankmachine1_cmd_payload_is_cmd <= 1'd1;
            end
            soclinux_bankmachine1_row_close <= 1'd1;
        end
        2'd2: begin
            if ((soclinux_bankmachine1_twtpcon_ready & soclinux_bankmachine1_trascon_ready)) begin
                bankmachine1_next_state <= 3'd5;
            end
            soclinux_bankmachine1_row_close <= 1'd1;
        end
        2'd3: begin
            if (soclinux_bankmachine1_trccon_ready) begin
                soclinux_bankmachine1_row_col_n_addr_sel <= 1'd1;
                soclinux_bankmachine1_row_open <= 1'd1;
                soclinux_bankmachine1_cmd_valid <= 1'd1;
                soclinux_bankmachine1_cmd_payload_is_cmd <= 1'd1;
                if (soclinux_bankmachine1_cmd_ready) begin
                    bankmachine1_next_state <= 3'd7;
                end
                soclinux_bankmachine1_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (soclinux_bankmachine1_twtpcon_ready) begin
                soclinux_bankmachine1_refresh_gnt <= 1'd1;
            end
            soclinux_bankmachine1_row_close <= 1'd1;
            soclinux_bankmachine1_cmd_payload_is_cmd <= 1'd1;
            if ((~soclinux_bankmachine1_refresh_req)) begin
                bankmachine1_next_state <= 1'd0;
            end
        end
        3'd5: begin
            bankmachine1_next_state <= 3'd6;
        end
        3'd6: begin
            bankmachine1_next_state <= 2'd3;
        end
        3'd7: begin
            bankmachine1_next_state <= 4'd8;
        end
        4'd8: begin
            bankmachine1_next_state <= 1'd0;
        end
        default: begin
            if (soclinux_bankmachine1_refresh_req) begin
                bankmachine1_next_state <= 3'd4;
            end else begin
                if (soclinux_bankmachine1_source_source_valid) begin
                    if (soclinux_bankmachine1_row_opened) begin
                        if (soclinux_bankmachine1_row_hit) begin
                            soclinux_bankmachine1_cmd_valid <= 1'd1;
                            if (soclinux_bankmachine1_source_source_payload_we) begin
                                soclinux_bankmachine1_req_wdata_ready <= soclinux_bankmachine1_cmd_ready;
                                soclinux_bankmachine1_cmd_payload_is_write <= 1'd1;
                                soclinux_bankmachine1_cmd_payload_we <= 1'd1;
                            end else begin
                                soclinux_bankmachine1_req_rdata_valid <= soclinux_bankmachine1_cmd_ready;
                                soclinux_bankmachine1_cmd_payload_is_read <= 1'd1;
                            end
                            soclinux_bankmachine1_cmd_payload_cas <= 1'd1;
                            if ((soclinux_bankmachine1_cmd_ready & soclinux_bankmachine1_auto_precharge)) begin
                                bankmachine1_next_state <= 2'd2;
                            end
                        end else begin
                            bankmachine1_next_state <= 1'd1;
                        end
                    end else begin
                        bankmachine1_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign soclinux_bankmachine2_sink_valid = soclinux_bankmachine2_req_valid;
assign soclinux_bankmachine2_req_ready = soclinux_bankmachine2_sink_ready;
assign soclinux_bankmachine2_sink_payload_we = soclinux_bankmachine2_req_we;
assign soclinux_bankmachine2_sink_payload_addr = soclinux_bankmachine2_req_addr;
assign soclinux_bankmachine2_sink_sink_valid = soclinux_bankmachine2_source_valid;
assign soclinux_bankmachine2_source_ready = soclinux_bankmachine2_sink_sink_ready;
assign soclinux_bankmachine2_sink_sink_first = soclinux_bankmachine2_source_first;
assign soclinux_bankmachine2_sink_sink_last = soclinux_bankmachine2_source_last;
assign soclinux_bankmachine2_sink_sink_payload_we = soclinux_bankmachine2_source_payload_we;
assign soclinux_bankmachine2_sink_sink_payload_addr = soclinux_bankmachine2_source_payload_addr;
assign soclinux_bankmachine2_source_source_ready = (soclinux_bankmachine2_req_wdata_ready | soclinux_bankmachine2_req_rdata_valid);
assign soclinux_bankmachine2_req_lock = (soclinux_bankmachine2_source_valid | soclinux_bankmachine2_source_source_valid);
assign soclinux_bankmachine2_row_hit = (soclinux_bankmachine2_row == soclinux_bankmachine2_source_source_payload_addr[20:7]);
assign soclinux_bankmachine2_cmd_payload_ba = 2'd2;
always @(*) begin
    soclinux_bankmachine2_cmd_payload_a <= 14'd0;
    if (soclinux_bankmachine2_row_col_n_addr_sel) begin
        soclinux_bankmachine2_cmd_payload_a <= soclinux_bankmachine2_source_source_payload_addr[20:7];
    end else begin
        soclinux_bankmachine2_cmd_payload_a <= ((soclinux_bankmachine2_auto_precharge <<< 4'd10) | {soclinux_bankmachine2_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign soclinux_bankmachine2_twtpcon_valid = ((soclinux_bankmachine2_cmd_valid & soclinux_bankmachine2_cmd_ready) & soclinux_bankmachine2_cmd_payload_is_write);
assign soclinux_bankmachine2_trccon_valid = ((soclinux_bankmachine2_cmd_valid & soclinux_bankmachine2_cmd_ready) & soclinux_bankmachine2_row_open);
assign soclinux_bankmachine2_trascon_valid = ((soclinux_bankmachine2_cmd_valid & soclinux_bankmachine2_cmd_ready) & soclinux_bankmachine2_row_open);
always @(*) begin
    soclinux_bankmachine2_auto_precharge <= 1'd0;
    if ((soclinux_bankmachine2_source_valid & soclinux_bankmachine2_source_source_valid)) begin
        if ((soclinux_bankmachine2_source_payload_addr[20:7] != soclinux_bankmachine2_source_source_payload_addr[20:7])) begin
            soclinux_bankmachine2_auto_precharge <= (soclinux_bankmachine2_row_close == 1'd0);
        end
    end
end
assign soclinux_bankmachine2_syncfifo2_din = {soclinux_bankmachine2_fifo_in_last, soclinux_bankmachine2_fifo_in_first, soclinux_bankmachine2_fifo_in_payload_addr, soclinux_bankmachine2_fifo_in_payload_we};
assign {soclinux_bankmachine2_fifo_out_last, soclinux_bankmachine2_fifo_out_first, soclinux_bankmachine2_fifo_out_payload_addr, soclinux_bankmachine2_fifo_out_payload_we} = soclinux_bankmachine2_syncfifo2_dout;
assign soclinux_bankmachine2_sink_ready = soclinux_bankmachine2_syncfifo2_writable;
assign soclinux_bankmachine2_syncfifo2_we = soclinux_bankmachine2_sink_valid;
assign soclinux_bankmachine2_fifo_in_first = soclinux_bankmachine2_sink_first;
assign soclinux_bankmachine2_fifo_in_last = soclinux_bankmachine2_sink_last;
assign soclinux_bankmachine2_fifo_in_payload_we = soclinux_bankmachine2_sink_payload_we;
assign soclinux_bankmachine2_fifo_in_payload_addr = soclinux_bankmachine2_sink_payload_addr;
assign soclinux_bankmachine2_source_valid = soclinux_bankmachine2_syncfifo2_readable;
assign soclinux_bankmachine2_source_first = soclinux_bankmachine2_fifo_out_first;
assign soclinux_bankmachine2_source_last = soclinux_bankmachine2_fifo_out_last;
assign soclinux_bankmachine2_source_payload_we = soclinux_bankmachine2_fifo_out_payload_we;
assign soclinux_bankmachine2_source_payload_addr = soclinux_bankmachine2_fifo_out_payload_addr;
assign soclinux_bankmachine2_syncfifo2_re = soclinux_bankmachine2_source_ready;
always @(*) begin
    soclinux_bankmachine2_wrport_adr <= 3'd0;
    if (soclinux_bankmachine2_replace) begin
        soclinux_bankmachine2_wrport_adr <= (soclinux_bankmachine2_produce - 1'd1);
    end else begin
        soclinux_bankmachine2_wrport_adr <= soclinux_bankmachine2_produce;
    end
end
assign soclinux_bankmachine2_wrport_dat_w = soclinux_bankmachine2_syncfifo2_din;
assign soclinux_bankmachine2_wrport_we = (soclinux_bankmachine2_syncfifo2_we & (soclinux_bankmachine2_syncfifo2_writable | soclinux_bankmachine2_replace));
assign soclinux_bankmachine2_do_read = (soclinux_bankmachine2_syncfifo2_readable & soclinux_bankmachine2_syncfifo2_re);
assign soclinux_bankmachine2_rdport_adr = soclinux_bankmachine2_consume;
assign soclinux_bankmachine2_syncfifo2_dout = soclinux_bankmachine2_rdport_dat_r;
assign soclinux_bankmachine2_syncfifo2_writable = (soclinux_bankmachine2_level != 4'd8);
assign soclinux_bankmachine2_syncfifo2_readable = (soclinux_bankmachine2_level != 1'd0);
assign soclinux_bankmachine2_pipe_valid_sink_ready = ((~soclinux_bankmachine2_pipe_valid_source_valid) | soclinux_bankmachine2_pipe_valid_source_ready);
assign soclinux_bankmachine2_pipe_valid_sink_valid = soclinux_bankmachine2_sink_sink_valid;
assign soclinux_bankmachine2_sink_sink_ready = soclinux_bankmachine2_pipe_valid_sink_ready;
assign soclinux_bankmachine2_pipe_valid_sink_first = soclinux_bankmachine2_sink_sink_first;
assign soclinux_bankmachine2_pipe_valid_sink_last = soclinux_bankmachine2_sink_sink_last;
assign soclinux_bankmachine2_pipe_valid_sink_payload_we = soclinux_bankmachine2_sink_sink_payload_we;
assign soclinux_bankmachine2_pipe_valid_sink_payload_addr = soclinux_bankmachine2_sink_sink_payload_addr;
assign soclinux_bankmachine2_source_source_valid = soclinux_bankmachine2_pipe_valid_source_valid;
assign soclinux_bankmachine2_pipe_valid_source_ready = soclinux_bankmachine2_source_source_ready;
assign soclinux_bankmachine2_source_source_first = soclinux_bankmachine2_pipe_valid_source_first;
assign soclinux_bankmachine2_source_source_last = soclinux_bankmachine2_pipe_valid_source_last;
assign soclinux_bankmachine2_source_source_payload_we = soclinux_bankmachine2_pipe_valid_source_payload_we;
assign soclinux_bankmachine2_source_source_payload_addr = soclinux_bankmachine2_pipe_valid_source_payload_addr;
always @(*) begin
    bankmachine2_next_state <= 4'd0;
    soclinux_bankmachine2_cmd_payload_cas <= 1'd0;
    soclinux_bankmachine2_cmd_payload_is_cmd <= 1'd0;
    soclinux_bankmachine2_cmd_payload_is_read <= 1'd0;
    soclinux_bankmachine2_cmd_payload_is_write <= 1'd0;
    soclinux_bankmachine2_cmd_payload_ras <= 1'd0;
    soclinux_bankmachine2_cmd_payload_we <= 1'd0;
    soclinux_bankmachine2_cmd_valid <= 1'd0;
    soclinux_bankmachine2_refresh_gnt <= 1'd0;
    soclinux_bankmachine2_req_rdata_valid <= 1'd0;
    soclinux_bankmachine2_req_wdata_ready <= 1'd0;
    soclinux_bankmachine2_row_close <= 1'd0;
    soclinux_bankmachine2_row_col_n_addr_sel <= 1'd0;
    soclinux_bankmachine2_row_open <= 1'd0;
    bankmachine2_next_state <= bankmachine2_state;
    case (bankmachine2_state)
        1'd1: begin
            if ((soclinux_bankmachine2_twtpcon_ready & soclinux_bankmachine2_trascon_ready)) begin
                soclinux_bankmachine2_cmd_valid <= 1'd1;
                if (soclinux_bankmachine2_cmd_ready) begin
                    bankmachine2_next_state <= 3'd5;
                end
                soclinux_bankmachine2_cmd_payload_ras <= 1'd1;
                soclinux_bankmachine2_cmd_payload_we <= 1'd1;
                soclinux_bankmachine2_cmd_payload_is_cmd <= 1'd1;
            end
            soclinux_bankmachine2_row_close <= 1'd1;
        end
        2'd2: begin
            if ((soclinux_bankmachine2_twtpcon_ready & soclinux_bankmachine2_trascon_ready)) begin
                bankmachine2_next_state <= 3'd5;
            end
            soclinux_bankmachine2_row_close <= 1'd1;
        end
        2'd3: begin
            if (soclinux_bankmachine2_trccon_ready) begin
                soclinux_bankmachine2_row_col_n_addr_sel <= 1'd1;
                soclinux_bankmachine2_row_open <= 1'd1;
                soclinux_bankmachine2_cmd_valid <= 1'd1;
                soclinux_bankmachine2_cmd_payload_is_cmd <= 1'd1;
                if (soclinux_bankmachine2_cmd_ready) begin
                    bankmachine2_next_state <= 3'd7;
                end
                soclinux_bankmachine2_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (soclinux_bankmachine2_twtpcon_ready) begin
                soclinux_bankmachine2_refresh_gnt <= 1'd1;
            end
            soclinux_bankmachine2_row_close <= 1'd1;
            soclinux_bankmachine2_cmd_payload_is_cmd <= 1'd1;
            if ((~soclinux_bankmachine2_refresh_req)) begin
                bankmachine2_next_state <= 1'd0;
            end
        end
        3'd5: begin
            bankmachine2_next_state <= 3'd6;
        end
        3'd6: begin
            bankmachine2_next_state <= 2'd3;
        end
        3'd7: begin
            bankmachine2_next_state <= 4'd8;
        end
        4'd8: begin
            bankmachine2_next_state <= 1'd0;
        end
        default: begin
            if (soclinux_bankmachine2_refresh_req) begin
                bankmachine2_next_state <= 3'd4;
            end else begin
                if (soclinux_bankmachine2_source_source_valid) begin
                    if (soclinux_bankmachine2_row_opened) begin
                        if (soclinux_bankmachine2_row_hit) begin
                            soclinux_bankmachine2_cmd_valid <= 1'd1;
                            if (soclinux_bankmachine2_source_source_payload_we) begin
                                soclinux_bankmachine2_req_wdata_ready <= soclinux_bankmachine2_cmd_ready;
                                soclinux_bankmachine2_cmd_payload_is_write <= 1'd1;
                                soclinux_bankmachine2_cmd_payload_we <= 1'd1;
                            end else begin
                                soclinux_bankmachine2_req_rdata_valid <= soclinux_bankmachine2_cmd_ready;
                                soclinux_bankmachine2_cmd_payload_is_read <= 1'd1;
                            end
                            soclinux_bankmachine2_cmd_payload_cas <= 1'd1;
                            if ((soclinux_bankmachine2_cmd_ready & soclinux_bankmachine2_auto_precharge)) begin
                                bankmachine2_next_state <= 2'd2;
                            end
                        end else begin
                            bankmachine2_next_state <= 1'd1;
                        end
                    end else begin
                        bankmachine2_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign soclinux_bankmachine3_sink_valid = soclinux_bankmachine3_req_valid;
assign soclinux_bankmachine3_req_ready = soclinux_bankmachine3_sink_ready;
assign soclinux_bankmachine3_sink_payload_we = soclinux_bankmachine3_req_we;
assign soclinux_bankmachine3_sink_payload_addr = soclinux_bankmachine3_req_addr;
assign soclinux_bankmachine3_sink_sink_valid = soclinux_bankmachine3_source_valid;
assign soclinux_bankmachine3_source_ready = soclinux_bankmachine3_sink_sink_ready;
assign soclinux_bankmachine3_sink_sink_first = soclinux_bankmachine3_source_first;
assign soclinux_bankmachine3_sink_sink_last = soclinux_bankmachine3_source_last;
assign soclinux_bankmachine3_sink_sink_payload_we = soclinux_bankmachine3_source_payload_we;
assign soclinux_bankmachine3_sink_sink_payload_addr = soclinux_bankmachine3_source_payload_addr;
assign soclinux_bankmachine3_source_source_ready = (soclinux_bankmachine3_req_wdata_ready | soclinux_bankmachine3_req_rdata_valid);
assign soclinux_bankmachine3_req_lock = (soclinux_bankmachine3_source_valid | soclinux_bankmachine3_source_source_valid);
assign soclinux_bankmachine3_row_hit = (soclinux_bankmachine3_row == soclinux_bankmachine3_source_source_payload_addr[20:7]);
assign soclinux_bankmachine3_cmd_payload_ba = 2'd3;
always @(*) begin
    soclinux_bankmachine3_cmd_payload_a <= 14'd0;
    if (soclinux_bankmachine3_row_col_n_addr_sel) begin
        soclinux_bankmachine3_cmd_payload_a <= soclinux_bankmachine3_source_source_payload_addr[20:7];
    end else begin
        soclinux_bankmachine3_cmd_payload_a <= ((soclinux_bankmachine3_auto_precharge <<< 4'd10) | {soclinux_bankmachine3_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign soclinux_bankmachine3_twtpcon_valid = ((soclinux_bankmachine3_cmd_valid & soclinux_bankmachine3_cmd_ready) & soclinux_bankmachine3_cmd_payload_is_write);
assign soclinux_bankmachine3_trccon_valid = ((soclinux_bankmachine3_cmd_valid & soclinux_bankmachine3_cmd_ready) & soclinux_bankmachine3_row_open);
assign soclinux_bankmachine3_trascon_valid = ((soclinux_bankmachine3_cmd_valid & soclinux_bankmachine3_cmd_ready) & soclinux_bankmachine3_row_open);
always @(*) begin
    soclinux_bankmachine3_auto_precharge <= 1'd0;
    if ((soclinux_bankmachine3_source_valid & soclinux_bankmachine3_source_source_valid)) begin
        if ((soclinux_bankmachine3_source_payload_addr[20:7] != soclinux_bankmachine3_source_source_payload_addr[20:7])) begin
            soclinux_bankmachine3_auto_precharge <= (soclinux_bankmachine3_row_close == 1'd0);
        end
    end
end
assign soclinux_bankmachine3_syncfifo3_din = {soclinux_bankmachine3_fifo_in_last, soclinux_bankmachine3_fifo_in_first, soclinux_bankmachine3_fifo_in_payload_addr, soclinux_bankmachine3_fifo_in_payload_we};
assign {soclinux_bankmachine3_fifo_out_last, soclinux_bankmachine3_fifo_out_first, soclinux_bankmachine3_fifo_out_payload_addr, soclinux_bankmachine3_fifo_out_payload_we} = soclinux_bankmachine3_syncfifo3_dout;
assign soclinux_bankmachine3_sink_ready = soclinux_bankmachine3_syncfifo3_writable;
assign soclinux_bankmachine3_syncfifo3_we = soclinux_bankmachine3_sink_valid;
assign soclinux_bankmachine3_fifo_in_first = soclinux_bankmachine3_sink_first;
assign soclinux_bankmachine3_fifo_in_last = soclinux_bankmachine3_sink_last;
assign soclinux_bankmachine3_fifo_in_payload_we = soclinux_bankmachine3_sink_payload_we;
assign soclinux_bankmachine3_fifo_in_payload_addr = soclinux_bankmachine3_sink_payload_addr;
assign soclinux_bankmachine3_source_valid = soclinux_bankmachine3_syncfifo3_readable;
assign soclinux_bankmachine3_source_first = soclinux_bankmachine3_fifo_out_first;
assign soclinux_bankmachine3_source_last = soclinux_bankmachine3_fifo_out_last;
assign soclinux_bankmachine3_source_payload_we = soclinux_bankmachine3_fifo_out_payload_we;
assign soclinux_bankmachine3_source_payload_addr = soclinux_bankmachine3_fifo_out_payload_addr;
assign soclinux_bankmachine3_syncfifo3_re = soclinux_bankmachine3_source_ready;
always @(*) begin
    soclinux_bankmachine3_wrport_adr <= 3'd0;
    if (soclinux_bankmachine3_replace) begin
        soclinux_bankmachine3_wrport_adr <= (soclinux_bankmachine3_produce - 1'd1);
    end else begin
        soclinux_bankmachine3_wrport_adr <= soclinux_bankmachine3_produce;
    end
end
assign soclinux_bankmachine3_wrport_dat_w = soclinux_bankmachine3_syncfifo3_din;
assign soclinux_bankmachine3_wrport_we = (soclinux_bankmachine3_syncfifo3_we & (soclinux_bankmachine3_syncfifo3_writable | soclinux_bankmachine3_replace));
assign soclinux_bankmachine3_do_read = (soclinux_bankmachine3_syncfifo3_readable & soclinux_bankmachine3_syncfifo3_re);
assign soclinux_bankmachine3_rdport_adr = soclinux_bankmachine3_consume;
assign soclinux_bankmachine3_syncfifo3_dout = soclinux_bankmachine3_rdport_dat_r;
assign soclinux_bankmachine3_syncfifo3_writable = (soclinux_bankmachine3_level != 4'd8);
assign soclinux_bankmachine3_syncfifo3_readable = (soclinux_bankmachine3_level != 1'd0);
assign soclinux_bankmachine3_pipe_valid_sink_ready = ((~soclinux_bankmachine3_pipe_valid_source_valid) | soclinux_bankmachine3_pipe_valid_source_ready);
assign soclinux_bankmachine3_pipe_valid_sink_valid = soclinux_bankmachine3_sink_sink_valid;
assign soclinux_bankmachine3_sink_sink_ready = soclinux_bankmachine3_pipe_valid_sink_ready;
assign soclinux_bankmachine3_pipe_valid_sink_first = soclinux_bankmachine3_sink_sink_first;
assign soclinux_bankmachine3_pipe_valid_sink_last = soclinux_bankmachine3_sink_sink_last;
assign soclinux_bankmachine3_pipe_valid_sink_payload_we = soclinux_bankmachine3_sink_sink_payload_we;
assign soclinux_bankmachine3_pipe_valid_sink_payload_addr = soclinux_bankmachine3_sink_sink_payload_addr;
assign soclinux_bankmachine3_source_source_valid = soclinux_bankmachine3_pipe_valid_source_valid;
assign soclinux_bankmachine3_pipe_valid_source_ready = soclinux_bankmachine3_source_source_ready;
assign soclinux_bankmachine3_source_source_first = soclinux_bankmachine3_pipe_valid_source_first;
assign soclinux_bankmachine3_source_source_last = soclinux_bankmachine3_pipe_valid_source_last;
assign soclinux_bankmachine3_source_source_payload_we = soclinux_bankmachine3_pipe_valid_source_payload_we;
assign soclinux_bankmachine3_source_source_payload_addr = soclinux_bankmachine3_pipe_valid_source_payload_addr;
always @(*) begin
    bankmachine3_next_state <= 4'd0;
    soclinux_bankmachine3_cmd_payload_cas <= 1'd0;
    soclinux_bankmachine3_cmd_payload_is_cmd <= 1'd0;
    soclinux_bankmachine3_cmd_payload_is_read <= 1'd0;
    soclinux_bankmachine3_cmd_payload_is_write <= 1'd0;
    soclinux_bankmachine3_cmd_payload_ras <= 1'd0;
    soclinux_bankmachine3_cmd_payload_we <= 1'd0;
    soclinux_bankmachine3_cmd_valid <= 1'd0;
    soclinux_bankmachine3_refresh_gnt <= 1'd0;
    soclinux_bankmachine3_req_rdata_valid <= 1'd0;
    soclinux_bankmachine3_req_wdata_ready <= 1'd0;
    soclinux_bankmachine3_row_close <= 1'd0;
    soclinux_bankmachine3_row_col_n_addr_sel <= 1'd0;
    soclinux_bankmachine3_row_open <= 1'd0;
    bankmachine3_next_state <= bankmachine3_state;
    case (bankmachine3_state)
        1'd1: begin
            if ((soclinux_bankmachine3_twtpcon_ready & soclinux_bankmachine3_trascon_ready)) begin
                soclinux_bankmachine3_cmd_valid <= 1'd1;
                if (soclinux_bankmachine3_cmd_ready) begin
                    bankmachine3_next_state <= 3'd5;
                end
                soclinux_bankmachine3_cmd_payload_ras <= 1'd1;
                soclinux_bankmachine3_cmd_payload_we <= 1'd1;
                soclinux_bankmachine3_cmd_payload_is_cmd <= 1'd1;
            end
            soclinux_bankmachine3_row_close <= 1'd1;
        end
        2'd2: begin
            if ((soclinux_bankmachine3_twtpcon_ready & soclinux_bankmachine3_trascon_ready)) begin
                bankmachine3_next_state <= 3'd5;
            end
            soclinux_bankmachine3_row_close <= 1'd1;
        end
        2'd3: begin
            if (soclinux_bankmachine3_trccon_ready) begin
                soclinux_bankmachine3_row_col_n_addr_sel <= 1'd1;
                soclinux_bankmachine3_row_open <= 1'd1;
                soclinux_bankmachine3_cmd_valid <= 1'd1;
                soclinux_bankmachine3_cmd_payload_is_cmd <= 1'd1;
                if (soclinux_bankmachine3_cmd_ready) begin
                    bankmachine3_next_state <= 3'd7;
                end
                soclinux_bankmachine3_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (soclinux_bankmachine3_twtpcon_ready) begin
                soclinux_bankmachine3_refresh_gnt <= 1'd1;
            end
            soclinux_bankmachine3_row_close <= 1'd1;
            soclinux_bankmachine3_cmd_payload_is_cmd <= 1'd1;
            if ((~soclinux_bankmachine3_refresh_req)) begin
                bankmachine3_next_state <= 1'd0;
            end
        end
        3'd5: begin
            bankmachine3_next_state <= 3'd6;
        end
        3'd6: begin
            bankmachine3_next_state <= 2'd3;
        end
        3'd7: begin
            bankmachine3_next_state <= 4'd8;
        end
        4'd8: begin
            bankmachine3_next_state <= 1'd0;
        end
        default: begin
            if (soclinux_bankmachine3_refresh_req) begin
                bankmachine3_next_state <= 3'd4;
            end else begin
                if (soclinux_bankmachine3_source_source_valid) begin
                    if (soclinux_bankmachine3_row_opened) begin
                        if (soclinux_bankmachine3_row_hit) begin
                            soclinux_bankmachine3_cmd_valid <= 1'd1;
                            if (soclinux_bankmachine3_source_source_payload_we) begin
                                soclinux_bankmachine3_req_wdata_ready <= soclinux_bankmachine3_cmd_ready;
                                soclinux_bankmachine3_cmd_payload_is_write <= 1'd1;
                                soclinux_bankmachine3_cmd_payload_we <= 1'd1;
                            end else begin
                                soclinux_bankmachine3_req_rdata_valid <= soclinux_bankmachine3_cmd_ready;
                                soclinux_bankmachine3_cmd_payload_is_read <= 1'd1;
                            end
                            soclinux_bankmachine3_cmd_payload_cas <= 1'd1;
                            if ((soclinux_bankmachine3_cmd_ready & soclinux_bankmachine3_auto_precharge)) begin
                                bankmachine3_next_state <= 2'd2;
                            end
                        end else begin
                            bankmachine3_next_state <= 1'd1;
                        end
                    end else begin
                        bankmachine3_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign soclinux_bankmachine4_sink_valid = soclinux_bankmachine4_req_valid;
assign soclinux_bankmachine4_req_ready = soclinux_bankmachine4_sink_ready;
assign soclinux_bankmachine4_sink_payload_we = soclinux_bankmachine4_req_we;
assign soclinux_bankmachine4_sink_payload_addr = soclinux_bankmachine4_req_addr;
assign soclinux_bankmachine4_sink_sink_valid = soclinux_bankmachine4_source_valid;
assign soclinux_bankmachine4_source_ready = soclinux_bankmachine4_sink_sink_ready;
assign soclinux_bankmachine4_sink_sink_first = soclinux_bankmachine4_source_first;
assign soclinux_bankmachine4_sink_sink_last = soclinux_bankmachine4_source_last;
assign soclinux_bankmachine4_sink_sink_payload_we = soclinux_bankmachine4_source_payload_we;
assign soclinux_bankmachine4_sink_sink_payload_addr = soclinux_bankmachine4_source_payload_addr;
assign soclinux_bankmachine4_source_source_ready = (soclinux_bankmachine4_req_wdata_ready | soclinux_bankmachine4_req_rdata_valid);
assign soclinux_bankmachine4_req_lock = (soclinux_bankmachine4_source_valid | soclinux_bankmachine4_source_source_valid);
assign soclinux_bankmachine4_row_hit = (soclinux_bankmachine4_row == soclinux_bankmachine4_source_source_payload_addr[20:7]);
assign soclinux_bankmachine4_cmd_payload_ba = 3'd4;
always @(*) begin
    soclinux_bankmachine4_cmd_payload_a <= 14'd0;
    if (soclinux_bankmachine4_row_col_n_addr_sel) begin
        soclinux_bankmachine4_cmd_payload_a <= soclinux_bankmachine4_source_source_payload_addr[20:7];
    end else begin
        soclinux_bankmachine4_cmd_payload_a <= ((soclinux_bankmachine4_auto_precharge <<< 4'd10) | {soclinux_bankmachine4_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign soclinux_bankmachine4_twtpcon_valid = ((soclinux_bankmachine4_cmd_valid & soclinux_bankmachine4_cmd_ready) & soclinux_bankmachine4_cmd_payload_is_write);
assign soclinux_bankmachine4_trccon_valid = ((soclinux_bankmachine4_cmd_valid & soclinux_bankmachine4_cmd_ready) & soclinux_bankmachine4_row_open);
assign soclinux_bankmachine4_trascon_valid = ((soclinux_bankmachine4_cmd_valid & soclinux_bankmachine4_cmd_ready) & soclinux_bankmachine4_row_open);
always @(*) begin
    soclinux_bankmachine4_auto_precharge <= 1'd0;
    if ((soclinux_bankmachine4_source_valid & soclinux_bankmachine4_source_source_valid)) begin
        if ((soclinux_bankmachine4_source_payload_addr[20:7] != soclinux_bankmachine4_source_source_payload_addr[20:7])) begin
            soclinux_bankmachine4_auto_precharge <= (soclinux_bankmachine4_row_close == 1'd0);
        end
    end
end
assign soclinux_bankmachine4_syncfifo4_din = {soclinux_bankmachine4_fifo_in_last, soclinux_bankmachine4_fifo_in_first, soclinux_bankmachine4_fifo_in_payload_addr, soclinux_bankmachine4_fifo_in_payload_we};
assign {soclinux_bankmachine4_fifo_out_last, soclinux_bankmachine4_fifo_out_first, soclinux_bankmachine4_fifo_out_payload_addr, soclinux_bankmachine4_fifo_out_payload_we} = soclinux_bankmachine4_syncfifo4_dout;
assign soclinux_bankmachine4_sink_ready = soclinux_bankmachine4_syncfifo4_writable;
assign soclinux_bankmachine4_syncfifo4_we = soclinux_bankmachine4_sink_valid;
assign soclinux_bankmachine4_fifo_in_first = soclinux_bankmachine4_sink_first;
assign soclinux_bankmachine4_fifo_in_last = soclinux_bankmachine4_sink_last;
assign soclinux_bankmachine4_fifo_in_payload_we = soclinux_bankmachine4_sink_payload_we;
assign soclinux_bankmachine4_fifo_in_payload_addr = soclinux_bankmachine4_sink_payload_addr;
assign soclinux_bankmachine4_source_valid = soclinux_bankmachine4_syncfifo4_readable;
assign soclinux_bankmachine4_source_first = soclinux_bankmachine4_fifo_out_first;
assign soclinux_bankmachine4_source_last = soclinux_bankmachine4_fifo_out_last;
assign soclinux_bankmachine4_source_payload_we = soclinux_bankmachine4_fifo_out_payload_we;
assign soclinux_bankmachine4_source_payload_addr = soclinux_bankmachine4_fifo_out_payload_addr;
assign soclinux_bankmachine4_syncfifo4_re = soclinux_bankmachine4_source_ready;
always @(*) begin
    soclinux_bankmachine4_wrport_adr <= 3'd0;
    if (soclinux_bankmachine4_replace) begin
        soclinux_bankmachine4_wrport_adr <= (soclinux_bankmachine4_produce - 1'd1);
    end else begin
        soclinux_bankmachine4_wrport_adr <= soclinux_bankmachine4_produce;
    end
end
assign soclinux_bankmachine4_wrport_dat_w = soclinux_bankmachine4_syncfifo4_din;
assign soclinux_bankmachine4_wrport_we = (soclinux_bankmachine4_syncfifo4_we & (soclinux_bankmachine4_syncfifo4_writable | soclinux_bankmachine4_replace));
assign soclinux_bankmachine4_do_read = (soclinux_bankmachine4_syncfifo4_readable & soclinux_bankmachine4_syncfifo4_re);
assign soclinux_bankmachine4_rdport_adr = soclinux_bankmachine4_consume;
assign soclinux_bankmachine4_syncfifo4_dout = soclinux_bankmachine4_rdport_dat_r;
assign soclinux_bankmachine4_syncfifo4_writable = (soclinux_bankmachine4_level != 4'd8);
assign soclinux_bankmachine4_syncfifo4_readable = (soclinux_bankmachine4_level != 1'd0);
assign soclinux_bankmachine4_pipe_valid_sink_ready = ((~soclinux_bankmachine4_pipe_valid_source_valid) | soclinux_bankmachine4_pipe_valid_source_ready);
assign soclinux_bankmachine4_pipe_valid_sink_valid = soclinux_bankmachine4_sink_sink_valid;
assign soclinux_bankmachine4_sink_sink_ready = soclinux_bankmachine4_pipe_valid_sink_ready;
assign soclinux_bankmachine4_pipe_valid_sink_first = soclinux_bankmachine4_sink_sink_first;
assign soclinux_bankmachine4_pipe_valid_sink_last = soclinux_bankmachine4_sink_sink_last;
assign soclinux_bankmachine4_pipe_valid_sink_payload_we = soclinux_bankmachine4_sink_sink_payload_we;
assign soclinux_bankmachine4_pipe_valid_sink_payload_addr = soclinux_bankmachine4_sink_sink_payload_addr;
assign soclinux_bankmachine4_source_source_valid = soclinux_bankmachine4_pipe_valid_source_valid;
assign soclinux_bankmachine4_pipe_valid_source_ready = soclinux_bankmachine4_source_source_ready;
assign soclinux_bankmachine4_source_source_first = soclinux_bankmachine4_pipe_valid_source_first;
assign soclinux_bankmachine4_source_source_last = soclinux_bankmachine4_pipe_valid_source_last;
assign soclinux_bankmachine4_source_source_payload_we = soclinux_bankmachine4_pipe_valid_source_payload_we;
assign soclinux_bankmachine4_source_source_payload_addr = soclinux_bankmachine4_pipe_valid_source_payload_addr;
always @(*) begin
    bankmachine4_next_state <= 4'd0;
    soclinux_bankmachine4_cmd_payload_cas <= 1'd0;
    soclinux_bankmachine4_cmd_payload_is_cmd <= 1'd0;
    soclinux_bankmachine4_cmd_payload_is_read <= 1'd0;
    soclinux_bankmachine4_cmd_payload_is_write <= 1'd0;
    soclinux_bankmachine4_cmd_payload_ras <= 1'd0;
    soclinux_bankmachine4_cmd_payload_we <= 1'd0;
    soclinux_bankmachine4_cmd_valid <= 1'd0;
    soclinux_bankmachine4_refresh_gnt <= 1'd0;
    soclinux_bankmachine4_req_rdata_valid <= 1'd0;
    soclinux_bankmachine4_req_wdata_ready <= 1'd0;
    soclinux_bankmachine4_row_close <= 1'd0;
    soclinux_bankmachine4_row_col_n_addr_sel <= 1'd0;
    soclinux_bankmachine4_row_open <= 1'd0;
    bankmachine4_next_state <= bankmachine4_state;
    case (bankmachine4_state)
        1'd1: begin
            if ((soclinux_bankmachine4_twtpcon_ready & soclinux_bankmachine4_trascon_ready)) begin
                soclinux_bankmachine4_cmd_valid <= 1'd1;
                if (soclinux_bankmachine4_cmd_ready) begin
                    bankmachine4_next_state <= 3'd5;
                end
                soclinux_bankmachine4_cmd_payload_ras <= 1'd1;
                soclinux_bankmachine4_cmd_payload_we <= 1'd1;
                soclinux_bankmachine4_cmd_payload_is_cmd <= 1'd1;
            end
            soclinux_bankmachine4_row_close <= 1'd1;
        end
        2'd2: begin
            if ((soclinux_bankmachine4_twtpcon_ready & soclinux_bankmachine4_trascon_ready)) begin
                bankmachine4_next_state <= 3'd5;
            end
            soclinux_bankmachine4_row_close <= 1'd1;
        end
        2'd3: begin
            if (soclinux_bankmachine4_trccon_ready) begin
                soclinux_bankmachine4_row_col_n_addr_sel <= 1'd1;
                soclinux_bankmachine4_row_open <= 1'd1;
                soclinux_bankmachine4_cmd_valid <= 1'd1;
                soclinux_bankmachine4_cmd_payload_is_cmd <= 1'd1;
                if (soclinux_bankmachine4_cmd_ready) begin
                    bankmachine4_next_state <= 3'd7;
                end
                soclinux_bankmachine4_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (soclinux_bankmachine4_twtpcon_ready) begin
                soclinux_bankmachine4_refresh_gnt <= 1'd1;
            end
            soclinux_bankmachine4_row_close <= 1'd1;
            soclinux_bankmachine4_cmd_payload_is_cmd <= 1'd1;
            if ((~soclinux_bankmachine4_refresh_req)) begin
                bankmachine4_next_state <= 1'd0;
            end
        end
        3'd5: begin
            bankmachine4_next_state <= 3'd6;
        end
        3'd6: begin
            bankmachine4_next_state <= 2'd3;
        end
        3'd7: begin
            bankmachine4_next_state <= 4'd8;
        end
        4'd8: begin
            bankmachine4_next_state <= 1'd0;
        end
        default: begin
            if (soclinux_bankmachine4_refresh_req) begin
                bankmachine4_next_state <= 3'd4;
            end else begin
                if (soclinux_bankmachine4_source_source_valid) begin
                    if (soclinux_bankmachine4_row_opened) begin
                        if (soclinux_bankmachine4_row_hit) begin
                            soclinux_bankmachine4_cmd_valid <= 1'd1;
                            if (soclinux_bankmachine4_source_source_payload_we) begin
                                soclinux_bankmachine4_req_wdata_ready <= soclinux_bankmachine4_cmd_ready;
                                soclinux_bankmachine4_cmd_payload_is_write <= 1'd1;
                                soclinux_bankmachine4_cmd_payload_we <= 1'd1;
                            end else begin
                                soclinux_bankmachine4_req_rdata_valid <= soclinux_bankmachine4_cmd_ready;
                                soclinux_bankmachine4_cmd_payload_is_read <= 1'd1;
                            end
                            soclinux_bankmachine4_cmd_payload_cas <= 1'd1;
                            if ((soclinux_bankmachine4_cmd_ready & soclinux_bankmachine4_auto_precharge)) begin
                                bankmachine4_next_state <= 2'd2;
                            end
                        end else begin
                            bankmachine4_next_state <= 1'd1;
                        end
                    end else begin
                        bankmachine4_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign soclinux_bankmachine5_sink_valid = soclinux_bankmachine5_req_valid;
assign soclinux_bankmachine5_req_ready = soclinux_bankmachine5_sink_ready;
assign soclinux_bankmachine5_sink_payload_we = soclinux_bankmachine5_req_we;
assign soclinux_bankmachine5_sink_payload_addr = soclinux_bankmachine5_req_addr;
assign soclinux_bankmachine5_sink_sink_valid = soclinux_bankmachine5_source_valid;
assign soclinux_bankmachine5_source_ready = soclinux_bankmachine5_sink_sink_ready;
assign soclinux_bankmachine5_sink_sink_first = soclinux_bankmachine5_source_first;
assign soclinux_bankmachine5_sink_sink_last = soclinux_bankmachine5_source_last;
assign soclinux_bankmachine5_sink_sink_payload_we = soclinux_bankmachine5_source_payload_we;
assign soclinux_bankmachine5_sink_sink_payload_addr = soclinux_bankmachine5_source_payload_addr;
assign soclinux_bankmachine5_source_source_ready = (soclinux_bankmachine5_req_wdata_ready | soclinux_bankmachine5_req_rdata_valid);
assign soclinux_bankmachine5_req_lock = (soclinux_bankmachine5_source_valid | soclinux_bankmachine5_source_source_valid);
assign soclinux_bankmachine5_row_hit = (soclinux_bankmachine5_row == soclinux_bankmachine5_source_source_payload_addr[20:7]);
assign soclinux_bankmachine5_cmd_payload_ba = 3'd5;
always @(*) begin
    soclinux_bankmachine5_cmd_payload_a <= 14'd0;
    if (soclinux_bankmachine5_row_col_n_addr_sel) begin
        soclinux_bankmachine5_cmd_payload_a <= soclinux_bankmachine5_source_source_payload_addr[20:7];
    end else begin
        soclinux_bankmachine5_cmd_payload_a <= ((soclinux_bankmachine5_auto_precharge <<< 4'd10) | {soclinux_bankmachine5_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign soclinux_bankmachine5_twtpcon_valid = ((soclinux_bankmachine5_cmd_valid & soclinux_bankmachine5_cmd_ready) & soclinux_bankmachine5_cmd_payload_is_write);
assign soclinux_bankmachine5_trccon_valid = ((soclinux_bankmachine5_cmd_valid & soclinux_bankmachine5_cmd_ready) & soclinux_bankmachine5_row_open);
assign soclinux_bankmachine5_trascon_valid = ((soclinux_bankmachine5_cmd_valid & soclinux_bankmachine5_cmd_ready) & soclinux_bankmachine5_row_open);
always @(*) begin
    soclinux_bankmachine5_auto_precharge <= 1'd0;
    if ((soclinux_bankmachine5_source_valid & soclinux_bankmachine5_source_source_valid)) begin
        if ((soclinux_bankmachine5_source_payload_addr[20:7] != soclinux_bankmachine5_source_source_payload_addr[20:7])) begin
            soclinux_bankmachine5_auto_precharge <= (soclinux_bankmachine5_row_close == 1'd0);
        end
    end
end
assign soclinux_bankmachine5_syncfifo5_din = {soclinux_bankmachine5_fifo_in_last, soclinux_bankmachine5_fifo_in_first, soclinux_bankmachine5_fifo_in_payload_addr, soclinux_bankmachine5_fifo_in_payload_we};
assign {soclinux_bankmachine5_fifo_out_last, soclinux_bankmachine5_fifo_out_first, soclinux_bankmachine5_fifo_out_payload_addr, soclinux_bankmachine5_fifo_out_payload_we} = soclinux_bankmachine5_syncfifo5_dout;
assign soclinux_bankmachine5_sink_ready = soclinux_bankmachine5_syncfifo5_writable;
assign soclinux_bankmachine5_syncfifo5_we = soclinux_bankmachine5_sink_valid;
assign soclinux_bankmachine5_fifo_in_first = soclinux_bankmachine5_sink_first;
assign soclinux_bankmachine5_fifo_in_last = soclinux_bankmachine5_sink_last;
assign soclinux_bankmachine5_fifo_in_payload_we = soclinux_bankmachine5_sink_payload_we;
assign soclinux_bankmachine5_fifo_in_payload_addr = soclinux_bankmachine5_sink_payload_addr;
assign soclinux_bankmachine5_source_valid = soclinux_bankmachine5_syncfifo5_readable;
assign soclinux_bankmachine5_source_first = soclinux_bankmachine5_fifo_out_first;
assign soclinux_bankmachine5_source_last = soclinux_bankmachine5_fifo_out_last;
assign soclinux_bankmachine5_source_payload_we = soclinux_bankmachine5_fifo_out_payload_we;
assign soclinux_bankmachine5_source_payload_addr = soclinux_bankmachine5_fifo_out_payload_addr;
assign soclinux_bankmachine5_syncfifo5_re = soclinux_bankmachine5_source_ready;
always @(*) begin
    soclinux_bankmachine5_wrport_adr <= 3'd0;
    if (soclinux_bankmachine5_replace) begin
        soclinux_bankmachine5_wrport_adr <= (soclinux_bankmachine5_produce - 1'd1);
    end else begin
        soclinux_bankmachine5_wrport_adr <= soclinux_bankmachine5_produce;
    end
end
assign soclinux_bankmachine5_wrport_dat_w = soclinux_bankmachine5_syncfifo5_din;
assign soclinux_bankmachine5_wrport_we = (soclinux_bankmachine5_syncfifo5_we & (soclinux_bankmachine5_syncfifo5_writable | soclinux_bankmachine5_replace));
assign soclinux_bankmachine5_do_read = (soclinux_bankmachine5_syncfifo5_readable & soclinux_bankmachine5_syncfifo5_re);
assign soclinux_bankmachine5_rdport_adr = soclinux_bankmachine5_consume;
assign soclinux_bankmachine5_syncfifo5_dout = soclinux_bankmachine5_rdport_dat_r;
assign soclinux_bankmachine5_syncfifo5_writable = (soclinux_bankmachine5_level != 4'd8);
assign soclinux_bankmachine5_syncfifo5_readable = (soclinux_bankmachine5_level != 1'd0);
assign soclinux_bankmachine5_pipe_valid_sink_ready = ((~soclinux_bankmachine5_pipe_valid_source_valid) | soclinux_bankmachine5_pipe_valid_source_ready);
assign soclinux_bankmachine5_pipe_valid_sink_valid = soclinux_bankmachine5_sink_sink_valid;
assign soclinux_bankmachine5_sink_sink_ready = soclinux_bankmachine5_pipe_valid_sink_ready;
assign soclinux_bankmachine5_pipe_valid_sink_first = soclinux_bankmachine5_sink_sink_first;
assign soclinux_bankmachine5_pipe_valid_sink_last = soclinux_bankmachine5_sink_sink_last;
assign soclinux_bankmachine5_pipe_valid_sink_payload_we = soclinux_bankmachine5_sink_sink_payload_we;
assign soclinux_bankmachine5_pipe_valid_sink_payload_addr = soclinux_bankmachine5_sink_sink_payload_addr;
assign soclinux_bankmachine5_source_source_valid = soclinux_bankmachine5_pipe_valid_source_valid;
assign soclinux_bankmachine5_pipe_valid_source_ready = soclinux_bankmachine5_source_source_ready;
assign soclinux_bankmachine5_source_source_first = soclinux_bankmachine5_pipe_valid_source_first;
assign soclinux_bankmachine5_source_source_last = soclinux_bankmachine5_pipe_valid_source_last;
assign soclinux_bankmachine5_source_source_payload_we = soclinux_bankmachine5_pipe_valid_source_payload_we;
assign soclinux_bankmachine5_source_source_payload_addr = soclinux_bankmachine5_pipe_valid_source_payload_addr;
always @(*) begin
    bankmachine5_next_state <= 4'd0;
    soclinux_bankmachine5_cmd_payload_cas <= 1'd0;
    soclinux_bankmachine5_cmd_payload_is_cmd <= 1'd0;
    soclinux_bankmachine5_cmd_payload_is_read <= 1'd0;
    soclinux_bankmachine5_cmd_payload_is_write <= 1'd0;
    soclinux_bankmachine5_cmd_payload_ras <= 1'd0;
    soclinux_bankmachine5_cmd_payload_we <= 1'd0;
    soclinux_bankmachine5_cmd_valid <= 1'd0;
    soclinux_bankmachine5_refresh_gnt <= 1'd0;
    soclinux_bankmachine5_req_rdata_valid <= 1'd0;
    soclinux_bankmachine5_req_wdata_ready <= 1'd0;
    soclinux_bankmachine5_row_close <= 1'd0;
    soclinux_bankmachine5_row_col_n_addr_sel <= 1'd0;
    soclinux_bankmachine5_row_open <= 1'd0;
    bankmachine5_next_state <= bankmachine5_state;
    case (bankmachine5_state)
        1'd1: begin
            if ((soclinux_bankmachine5_twtpcon_ready & soclinux_bankmachine5_trascon_ready)) begin
                soclinux_bankmachine5_cmd_valid <= 1'd1;
                if (soclinux_bankmachine5_cmd_ready) begin
                    bankmachine5_next_state <= 3'd5;
                end
                soclinux_bankmachine5_cmd_payload_ras <= 1'd1;
                soclinux_bankmachine5_cmd_payload_we <= 1'd1;
                soclinux_bankmachine5_cmd_payload_is_cmd <= 1'd1;
            end
            soclinux_bankmachine5_row_close <= 1'd1;
        end
        2'd2: begin
            if ((soclinux_bankmachine5_twtpcon_ready & soclinux_bankmachine5_trascon_ready)) begin
                bankmachine5_next_state <= 3'd5;
            end
            soclinux_bankmachine5_row_close <= 1'd1;
        end
        2'd3: begin
            if (soclinux_bankmachine5_trccon_ready) begin
                soclinux_bankmachine5_row_col_n_addr_sel <= 1'd1;
                soclinux_bankmachine5_row_open <= 1'd1;
                soclinux_bankmachine5_cmd_valid <= 1'd1;
                soclinux_bankmachine5_cmd_payload_is_cmd <= 1'd1;
                if (soclinux_bankmachine5_cmd_ready) begin
                    bankmachine5_next_state <= 3'd7;
                end
                soclinux_bankmachine5_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (soclinux_bankmachine5_twtpcon_ready) begin
                soclinux_bankmachine5_refresh_gnt <= 1'd1;
            end
            soclinux_bankmachine5_row_close <= 1'd1;
            soclinux_bankmachine5_cmd_payload_is_cmd <= 1'd1;
            if ((~soclinux_bankmachine5_refresh_req)) begin
                bankmachine5_next_state <= 1'd0;
            end
        end
        3'd5: begin
            bankmachine5_next_state <= 3'd6;
        end
        3'd6: begin
            bankmachine5_next_state <= 2'd3;
        end
        3'd7: begin
            bankmachine5_next_state <= 4'd8;
        end
        4'd8: begin
            bankmachine5_next_state <= 1'd0;
        end
        default: begin
            if (soclinux_bankmachine5_refresh_req) begin
                bankmachine5_next_state <= 3'd4;
            end else begin
                if (soclinux_bankmachine5_source_source_valid) begin
                    if (soclinux_bankmachine5_row_opened) begin
                        if (soclinux_bankmachine5_row_hit) begin
                            soclinux_bankmachine5_cmd_valid <= 1'd1;
                            if (soclinux_bankmachine5_source_source_payload_we) begin
                                soclinux_bankmachine5_req_wdata_ready <= soclinux_bankmachine5_cmd_ready;
                                soclinux_bankmachine5_cmd_payload_is_write <= 1'd1;
                                soclinux_bankmachine5_cmd_payload_we <= 1'd1;
                            end else begin
                                soclinux_bankmachine5_req_rdata_valid <= soclinux_bankmachine5_cmd_ready;
                                soclinux_bankmachine5_cmd_payload_is_read <= 1'd1;
                            end
                            soclinux_bankmachine5_cmd_payload_cas <= 1'd1;
                            if ((soclinux_bankmachine5_cmd_ready & soclinux_bankmachine5_auto_precharge)) begin
                                bankmachine5_next_state <= 2'd2;
                            end
                        end else begin
                            bankmachine5_next_state <= 1'd1;
                        end
                    end else begin
                        bankmachine5_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign soclinux_bankmachine6_sink_valid = soclinux_bankmachine6_req_valid;
assign soclinux_bankmachine6_req_ready = soclinux_bankmachine6_sink_ready;
assign soclinux_bankmachine6_sink_payload_we = soclinux_bankmachine6_req_we;
assign soclinux_bankmachine6_sink_payload_addr = soclinux_bankmachine6_req_addr;
assign soclinux_bankmachine6_sink_sink_valid = soclinux_bankmachine6_source_valid;
assign soclinux_bankmachine6_source_ready = soclinux_bankmachine6_sink_sink_ready;
assign soclinux_bankmachine6_sink_sink_first = soclinux_bankmachine6_source_first;
assign soclinux_bankmachine6_sink_sink_last = soclinux_bankmachine6_source_last;
assign soclinux_bankmachine6_sink_sink_payload_we = soclinux_bankmachine6_source_payload_we;
assign soclinux_bankmachine6_sink_sink_payload_addr = soclinux_bankmachine6_source_payload_addr;
assign soclinux_bankmachine6_source_source_ready = (soclinux_bankmachine6_req_wdata_ready | soclinux_bankmachine6_req_rdata_valid);
assign soclinux_bankmachine6_req_lock = (soclinux_bankmachine6_source_valid | soclinux_bankmachine6_source_source_valid);
assign soclinux_bankmachine6_row_hit = (soclinux_bankmachine6_row == soclinux_bankmachine6_source_source_payload_addr[20:7]);
assign soclinux_bankmachine6_cmd_payload_ba = 3'd6;
always @(*) begin
    soclinux_bankmachine6_cmd_payload_a <= 14'd0;
    if (soclinux_bankmachine6_row_col_n_addr_sel) begin
        soclinux_bankmachine6_cmd_payload_a <= soclinux_bankmachine6_source_source_payload_addr[20:7];
    end else begin
        soclinux_bankmachine6_cmd_payload_a <= ((soclinux_bankmachine6_auto_precharge <<< 4'd10) | {soclinux_bankmachine6_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign soclinux_bankmachine6_twtpcon_valid = ((soclinux_bankmachine6_cmd_valid & soclinux_bankmachine6_cmd_ready) & soclinux_bankmachine6_cmd_payload_is_write);
assign soclinux_bankmachine6_trccon_valid = ((soclinux_bankmachine6_cmd_valid & soclinux_bankmachine6_cmd_ready) & soclinux_bankmachine6_row_open);
assign soclinux_bankmachine6_trascon_valid = ((soclinux_bankmachine6_cmd_valid & soclinux_bankmachine6_cmd_ready) & soclinux_bankmachine6_row_open);
always @(*) begin
    soclinux_bankmachine6_auto_precharge <= 1'd0;
    if ((soclinux_bankmachine6_source_valid & soclinux_bankmachine6_source_source_valid)) begin
        if ((soclinux_bankmachine6_source_payload_addr[20:7] != soclinux_bankmachine6_source_source_payload_addr[20:7])) begin
            soclinux_bankmachine6_auto_precharge <= (soclinux_bankmachine6_row_close == 1'd0);
        end
    end
end
assign soclinux_bankmachine6_syncfifo6_din = {soclinux_bankmachine6_fifo_in_last, soclinux_bankmachine6_fifo_in_first, soclinux_bankmachine6_fifo_in_payload_addr, soclinux_bankmachine6_fifo_in_payload_we};
assign {soclinux_bankmachine6_fifo_out_last, soclinux_bankmachine6_fifo_out_first, soclinux_bankmachine6_fifo_out_payload_addr, soclinux_bankmachine6_fifo_out_payload_we} = soclinux_bankmachine6_syncfifo6_dout;
assign soclinux_bankmachine6_sink_ready = soclinux_bankmachine6_syncfifo6_writable;
assign soclinux_bankmachine6_syncfifo6_we = soclinux_bankmachine6_sink_valid;
assign soclinux_bankmachine6_fifo_in_first = soclinux_bankmachine6_sink_first;
assign soclinux_bankmachine6_fifo_in_last = soclinux_bankmachine6_sink_last;
assign soclinux_bankmachine6_fifo_in_payload_we = soclinux_bankmachine6_sink_payload_we;
assign soclinux_bankmachine6_fifo_in_payload_addr = soclinux_bankmachine6_sink_payload_addr;
assign soclinux_bankmachine6_source_valid = soclinux_bankmachine6_syncfifo6_readable;
assign soclinux_bankmachine6_source_first = soclinux_bankmachine6_fifo_out_first;
assign soclinux_bankmachine6_source_last = soclinux_bankmachine6_fifo_out_last;
assign soclinux_bankmachine6_source_payload_we = soclinux_bankmachine6_fifo_out_payload_we;
assign soclinux_bankmachine6_source_payload_addr = soclinux_bankmachine6_fifo_out_payload_addr;
assign soclinux_bankmachine6_syncfifo6_re = soclinux_bankmachine6_source_ready;
always @(*) begin
    soclinux_bankmachine6_wrport_adr <= 3'd0;
    if (soclinux_bankmachine6_replace) begin
        soclinux_bankmachine6_wrport_adr <= (soclinux_bankmachine6_produce - 1'd1);
    end else begin
        soclinux_bankmachine6_wrport_adr <= soclinux_bankmachine6_produce;
    end
end
assign soclinux_bankmachine6_wrport_dat_w = soclinux_bankmachine6_syncfifo6_din;
assign soclinux_bankmachine6_wrport_we = (soclinux_bankmachine6_syncfifo6_we & (soclinux_bankmachine6_syncfifo6_writable | soclinux_bankmachine6_replace));
assign soclinux_bankmachine6_do_read = (soclinux_bankmachine6_syncfifo6_readable & soclinux_bankmachine6_syncfifo6_re);
assign soclinux_bankmachine6_rdport_adr = soclinux_bankmachine6_consume;
assign soclinux_bankmachine6_syncfifo6_dout = soclinux_bankmachine6_rdport_dat_r;
assign soclinux_bankmachine6_syncfifo6_writable = (soclinux_bankmachine6_level != 4'd8);
assign soclinux_bankmachine6_syncfifo6_readable = (soclinux_bankmachine6_level != 1'd0);
assign soclinux_bankmachine6_pipe_valid_sink_ready = ((~soclinux_bankmachine6_pipe_valid_source_valid) | soclinux_bankmachine6_pipe_valid_source_ready);
assign soclinux_bankmachine6_pipe_valid_sink_valid = soclinux_bankmachine6_sink_sink_valid;
assign soclinux_bankmachine6_sink_sink_ready = soclinux_bankmachine6_pipe_valid_sink_ready;
assign soclinux_bankmachine6_pipe_valid_sink_first = soclinux_bankmachine6_sink_sink_first;
assign soclinux_bankmachine6_pipe_valid_sink_last = soclinux_bankmachine6_sink_sink_last;
assign soclinux_bankmachine6_pipe_valid_sink_payload_we = soclinux_bankmachine6_sink_sink_payload_we;
assign soclinux_bankmachine6_pipe_valid_sink_payload_addr = soclinux_bankmachine6_sink_sink_payload_addr;
assign soclinux_bankmachine6_source_source_valid = soclinux_bankmachine6_pipe_valid_source_valid;
assign soclinux_bankmachine6_pipe_valid_source_ready = soclinux_bankmachine6_source_source_ready;
assign soclinux_bankmachine6_source_source_first = soclinux_bankmachine6_pipe_valid_source_first;
assign soclinux_bankmachine6_source_source_last = soclinux_bankmachine6_pipe_valid_source_last;
assign soclinux_bankmachine6_source_source_payload_we = soclinux_bankmachine6_pipe_valid_source_payload_we;
assign soclinux_bankmachine6_source_source_payload_addr = soclinux_bankmachine6_pipe_valid_source_payload_addr;
always @(*) begin
    bankmachine6_next_state <= 4'd0;
    soclinux_bankmachine6_cmd_payload_cas <= 1'd0;
    soclinux_bankmachine6_cmd_payload_is_cmd <= 1'd0;
    soclinux_bankmachine6_cmd_payload_is_read <= 1'd0;
    soclinux_bankmachine6_cmd_payload_is_write <= 1'd0;
    soclinux_bankmachine6_cmd_payload_ras <= 1'd0;
    soclinux_bankmachine6_cmd_payload_we <= 1'd0;
    soclinux_bankmachine6_cmd_valid <= 1'd0;
    soclinux_bankmachine6_refresh_gnt <= 1'd0;
    soclinux_bankmachine6_req_rdata_valid <= 1'd0;
    soclinux_bankmachine6_req_wdata_ready <= 1'd0;
    soclinux_bankmachine6_row_close <= 1'd0;
    soclinux_bankmachine6_row_col_n_addr_sel <= 1'd0;
    soclinux_bankmachine6_row_open <= 1'd0;
    bankmachine6_next_state <= bankmachine6_state;
    case (bankmachine6_state)
        1'd1: begin
            if ((soclinux_bankmachine6_twtpcon_ready & soclinux_bankmachine6_trascon_ready)) begin
                soclinux_bankmachine6_cmd_valid <= 1'd1;
                if (soclinux_bankmachine6_cmd_ready) begin
                    bankmachine6_next_state <= 3'd5;
                end
                soclinux_bankmachine6_cmd_payload_ras <= 1'd1;
                soclinux_bankmachine6_cmd_payload_we <= 1'd1;
                soclinux_bankmachine6_cmd_payload_is_cmd <= 1'd1;
            end
            soclinux_bankmachine6_row_close <= 1'd1;
        end
        2'd2: begin
            if ((soclinux_bankmachine6_twtpcon_ready & soclinux_bankmachine6_trascon_ready)) begin
                bankmachine6_next_state <= 3'd5;
            end
            soclinux_bankmachine6_row_close <= 1'd1;
        end
        2'd3: begin
            if (soclinux_bankmachine6_trccon_ready) begin
                soclinux_bankmachine6_row_col_n_addr_sel <= 1'd1;
                soclinux_bankmachine6_row_open <= 1'd1;
                soclinux_bankmachine6_cmd_valid <= 1'd1;
                soclinux_bankmachine6_cmd_payload_is_cmd <= 1'd1;
                if (soclinux_bankmachine6_cmd_ready) begin
                    bankmachine6_next_state <= 3'd7;
                end
                soclinux_bankmachine6_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (soclinux_bankmachine6_twtpcon_ready) begin
                soclinux_bankmachine6_refresh_gnt <= 1'd1;
            end
            soclinux_bankmachine6_row_close <= 1'd1;
            soclinux_bankmachine6_cmd_payload_is_cmd <= 1'd1;
            if ((~soclinux_bankmachine6_refresh_req)) begin
                bankmachine6_next_state <= 1'd0;
            end
        end
        3'd5: begin
            bankmachine6_next_state <= 3'd6;
        end
        3'd6: begin
            bankmachine6_next_state <= 2'd3;
        end
        3'd7: begin
            bankmachine6_next_state <= 4'd8;
        end
        4'd8: begin
            bankmachine6_next_state <= 1'd0;
        end
        default: begin
            if (soclinux_bankmachine6_refresh_req) begin
                bankmachine6_next_state <= 3'd4;
            end else begin
                if (soclinux_bankmachine6_source_source_valid) begin
                    if (soclinux_bankmachine6_row_opened) begin
                        if (soclinux_bankmachine6_row_hit) begin
                            soclinux_bankmachine6_cmd_valid <= 1'd1;
                            if (soclinux_bankmachine6_source_source_payload_we) begin
                                soclinux_bankmachine6_req_wdata_ready <= soclinux_bankmachine6_cmd_ready;
                                soclinux_bankmachine6_cmd_payload_is_write <= 1'd1;
                                soclinux_bankmachine6_cmd_payload_we <= 1'd1;
                            end else begin
                                soclinux_bankmachine6_req_rdata_valid <= soclinux_bankmachine6_cmd_ready;
                                soclinux_bankmachine6_cmd_payload_is_read <= 1'd1;
                            end
                            soclinux_bankmachine6_cmd_payload_cas <= 1'd1;
                            if ((soclinux_bankmachine6_cmd_ready & soclinux_bankmachine6_auto_precharge)) begin
                                bankmachine6_next_state <= 2'd2;
                            end
                        end else begin
                            bankmachine6_next_state <= 1'd1;
                        end
                    end else begin
                        bankmachine6_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign soclinux_bankmachine7_sink_valid = soclinux_bankmachine7_req_valid;
assign soclinux_bankmachine7_req_ready = soclinux_bankmachine7_sink_ready;
assign soclinux_bankmachine7_sink_payload_we = soclinux_bankmachine7_req_we;
assign soclinux_bankmachine7_sink_payload_addr = soclinux_bankmachine7_req_addr;
assign soclinux_bankmachine7_sink_sink_valid = soclinux_bankmachine7_source_valid;
assign soclinux_bankmachine7_source_ready = soclinux_bankmachine7_sink_sink_ready;
assign soclinux_bankmachine7_sink_sink_first = soclinux_bankmachine7_source_first;
assign soclinux_bankmachine7_sink_sink_last = soclinux_bankmachine7_source_last;
assign soclinux_bankmachine7_sink_sink_payload_we = soclinux_bankmachine7_source_payload_we;
assign soclinux_bankmachine7_sink_sink_payload_addr = soclinux_bankmachine7_source_payload_addr;
assign soclinux_bankmachine7_source_source_ready = (soclinux_bankmachine7_req_wdata_ready | soclinux_bankmachine7_req_rdata_valid);
assign soclinux_bankmachine7_req_lock = (soclinux_bankmachine7_source_valid | soclinux_bankmachine7_source_source_valid);
assign soclinux_bankmachine7_row_hit = (soclinux_bankmachine7_row == soclinux_bankmachine7_source_source_payload_addr[20:7]);
assign soclinux_bankmachine7_cmd_payload_ba = 3'd7;
always @(*) begin
    soclinux_bankmachine7_cmd_payload_a <= 14'd0;
    if (soclinux_bankmachine7_row_col_n_addr_sel) begin
        soclinux_bankmachine7_cmd_payload_a <= soclinux_bankmachine7_source_source_payload_addr[20:7];
    end else begin
        soclinux_bankmachine7_cmd_payload_a <= ((soclinux_bankmachine7_auto_precharge <<< 4'd10) | {soclinux_bankmachine7_source_source_payload_addr[6:0], {3{1'd0}}});
    end
end
assign soclinux_bankmachine7_twtpcon_valid = ((soclinux_bankmachine7_cmd_valid & soclinux_bankmachine7_cmd_ready) & soclinux_bankmachine7_cmd_payload_is_write);
assign soclinux_bankmachine7_trccon_valid = ((soclinux_bankmachine7_cmd_valid & soclinux_bankmachine7_cmd_ready) & soclinux_bankmachine7_row_open);
assign soclinux_bankmachine7_trascon_valid = ((soclinux_bankmachine7_cmd_valid & soclinux_bankmachine7_cmd_ready) & soclinux_bankmachine7_row_open);
always @(*) begin
    soclinux_bankmachine7_auto_precharge <= 1'd0;
    if ((soclinux_bankmachine7_source_valid & soclinux_bankmachine7_source_source_valid)) begin
        if ((soclinux_bankmachine7_source_payload_addr[20:7] != soclinux_bankmachine7_source_source_payload_addr[20:7])) begin
            soclinux_bankmachine7_auto_precharge <= (soclinux_bankmachine7_row_close == 1'd0);
        end
    end
end
assign soclinux_bankmachine7_syncfifo7_din = {soclinux_bankmachine7_fifo_in_last, soclinux_bankmachine7_fifo_in_first, soclinux_bankmachine7_fifo_in_payload_addr, soclinux_bankmachine7_fifo_in_payload_we};
assign {soclinux_bankmachine7_fifo_out_last, soclinux_bankmachine7_fifo_out_first, soclinux_bankmachine7_fifo_out_payload_addr, soclinux_bankmachine7_fifo_out_payload_we} = soclinux_bankmachine7_syncfifo7_dout;
assign soclinux_bankmachine7_sink_ready = soclinux_bankmachine7_syncfifo7_writable;
assign soclinux_bankmachine7_syncfifo7_we = soclinux_bankmachine7_sink_valid;
assign soclinux_bankmachine7_fifo_in_first = soclinux_bankmachine7_sink_first;
assign soclinux_bankmachine7_fifo_in_last = soclinux_bankmachine7_sink_last;
assign soclinux_bankmachine7_fifo_in_payload_we = soclinux_bankmachine7_sink_payload_we;
assign soclinux_bankmachine7_fifo_in_payload_addr = soclinux_bankmachine7_sink_payload_addr;
assign soclinux_bankmachine7_source_valid = soclinux_bankmachine7_syncfifo7_readable;
assign soclinux_bankmachine7_source_first = soclinux_bankmachine7_fifo_out_first;
assign soclinux_bankmachine7_source_last = soclinux_bankmachine7_fifo_out_last;
assign soclinux_bankmachine7_source_payload_we = soclinux_bankmachine7_fifo_out_payload_we;
assign soclinux_bankmachine7_source_payload_addr = soclinux_bankmachine7_fifo_out_payload_addr;
assign soclinux_bankmachine7_syncfifo7_re = soclinux_bankmachine7_source_ready;
always @(*) begin
    soclinux_bankmachine7_wrport_adr <= 3'd0;
    if (soclinux_bankmachine7_replace) begin
        soclinux_bankmachine7_wrport_adr <= (soclinux_bankmachine7_produce - 1'd1);
    end else begin
        soclinux_bankmachine7_wrport_adr <= soclinux_bankmachine7_produce;
    end
end
assign soclinux_bankmachine7_wrport_dat_w = soclinux_bankmachine7_syncfifo7_din;
assign soclinux_bankmachine7_wrport_we = (soclinux_bankmachine7_syncfifo7_we & (soclinux_bankmachine7_syncfifo7_writable | soclinux_bankmachine7_replace));
assign soclinux_bankmachine7_do_read = (soclinux_bankmachine7_syncfifo7_readable & soclinux_bankmachine7_syncfifo7_re);
assign soclinux_bankmachine7_rdport_adr = soclinux_bankmachine7_consume;
assign soclinux_bankmachine7_syncfifo7_dout = soclinux_bankmachine7_rdport_dat_r;
assign soclinux_bankmachine7_syncfifo7_writable = (soclinux_bankmachine7_level != 4'd8);
assign soclinux_bankmachine7_syncfifo7_readable = (soclinux_bankmachine7_level != 1'd0);
assign soclinux_bankmachine7_pipe_valid_sink_ready = ((~soclinux_bankmachine7_pipe_valid_source_valid) | soclinux_bankmachine7_pipe_valid_source_ready);
assign soclinux_bankmachine7_pipe_valid_sink_valid = soclinux_bankmachine7_sink_sink_valid;
assign soclinux_bankmachine7_sink_sink_ready = soclinux_bankmachine7_pipe_valid_sink_ready;
assign soclinux_bankmachine7_pipe_valid_sink_first = soclinux_bankmachine7_sink_sink_first;
assign soclinux_bankmachine7_pipe_valid_sink_last = soclinux_bankmachine7_sink_sink_last;
assign soclinux_bankmachine7_pipe_valid_sink_payload_we = soclinux_bankmachine7_sink_sink_payload_we;
assign soclinux_bankmachine7_pipe_valid_sink_payload_addr = soclinux_bankmachine7_sink_sink_payload_addr;
assign soclinux_bankmachine7_source_source_valid = soclinux_bankmachine7_pipe_valid_source_valid;
assign soclinux_bankmachine7_pipe_valid_source_ready = soclinux_bankmachine7_source_source_ready;
assign soclinux_bankmachine7_source_source_first = soclinux_bankmachine7_pipe_valid_source_first;
assign soclinux_bankmachine7_source_source_last = soclinux_bankmachine7_pipe_valid_source_last;
assign soclinux_bankmachine7_source_source_payload_we = soclinux_bankmachine7_pipe_valid_source_payload_we;
assign soclinux_bankmachine7_source_source_payload_addr = soclinux_bankmachine7_pipe_valid_source_payload_addr;
always @(*) begin
    bankmachine7_next_state <= 4'd0;
    soclinux_bankmachine7_cmd_payload_cas <= 1'd0;
    soclinux_bankmachine7_cmd_payload_is_cmd <= 1'd0;
    soclinux_bankmachine7_cmd_payload_is_read <= 1'd0;
    soclinux_bankmachine7_cmd_payload_is_write <= 1'd0;
    soclinux_bankmachine7_cmd_payload_ras <= 1'd0;
    soclinux_bankmachine7_cmd_payload_we <= 1'd0;
    soclinux_bankmachine7_cmd_valid <= 1'd0;
    soclinux_bankmachine7_refresh_gnt <= 1'd0;
    soclinux_bankmachine7_req_rdata_valid <= 1'd0;
    soclinux_bankmachine7_req_wdata_ready <= 1'd0;
    soclinux_bankmachine7_row_close <= 1'd0;
    soclinux_bankmachine7_row_col_n_addr_sel <= 1'd0;
    soclinux_bankmachine7_row_open <= 1'd0;
    bankmachine7_next_state <= bankmachine7_state;
    case (bankmachine7_state)
        1'd1: begin
            if ((soclinux_bankmachine7_twtpcon_ready & soclinux_bankmachine7_trascon_ready)) begin
                soclinux_bankmachine7_cmd_valid <= 1'd1;
                if (soclinux_bankmachine7_cmd_ready) begin
                    bankmachine7_next_state <= 3'd5;
                end
                soclinux_bankmachine7_cmd_payload_ras <= 1'd1;
                soclinux_bankmachine7_cmd_payload_we <= 1'd1;
                soclinux_bankmachine7_cmd_payload_is_cmd <= 1'd1;
            end
            soclinux_bankmachine7_row_close <= 1'd1;
        end
        2'd2: begin
            if ((soclinux_bankmachine7_twtpcon_ready & soclinux_bankmachine7_trascon_ready)) begin
                bankmachine7_next_state <= 3'd5;
            end
            soclinux_bankmachine7_row_close <= 1'd1;
        end
        2'd3: begin
            if (soclinux_bankmachine7_trccon_ready) begin
                soclinux_bankmachine7_row_col_n_addr_sel <= 1'd1;
                soclinux_bankmachine7_row_open <= 1'd1;
                soclinux_bankmachine7_cmd_valid <= 1'd1;
                soclinux_bankmachine7_cmd_payload_is_cmd <= 1'd1;
                if (soclinux_bankmachine7_cmd_ready) begin
                    bankmachine7_next_state <= 3'd7;
                end
                soclinux_bankmachine7_cmd_payload_ras <= 1'd1;
            end
        end
        3'd4: begin
            if (soclinux_bankmachine7_twtpcon_ready) begin
                soclinux_bankmachine7_refresh_gnt <= 1'd1;
            end
            soclinux_bankmachine7_row_close <= 1'd1;
            soclinux_bankmachine7_cmd_payload_is_cmd <= 1'd1;
            if ((~soclinux_bankmachine7_refresh_req)) begin
                bankmachine7_next_state <= 1'd0;
            end
        end
        3'd5: begin
            bankmachine7_next_state <= 3'd6;
        end
        3'd6: begin
            bankmachine7_next_state <= 2'd3;
        end
        3'd7: begin
            bankmachine7_next_state <= 4'd8;
        end
        4'd8: begin
            bankmachine7_next_state <= 1'd0;
        end
        default: begin
            if (soclinux_bankmachine7_refresh_req) begin
                bankmachine7_next_state <= 3'd4;
            end else begin
                if (soclinux_bankmachine7_source_source_valid) begin
                    if (soclinux_bankmachine7_row_opened) begin
                        if (soclinux_bankmachine7_row_hit) begin
                            soclinux_bankmachine7_cmd_valid <= 1'd1;
                            if (soclinux_bankmachine7_source_source_payload_we) begin
                                soclinux_bankmachine7_req_wdata_ready <= soclinux_bankmachine7_cmd_ready;
                                soclinux_bankmachine7_cmd_payload_is_write <= 1'd1;
                                soclinux_bankmachine7_cmd_payload_we <= 1'd1;
                            end else begin
                                soclinux_bankmachine7_req_rdata_valid <= soclinux_bankmachine7_cmd_ready;
                                soclinux_bankmachine7_cmd_payload_is_read <= 1'd1;
                            end
                            soclinux_bankmachine7_cmd_payload_cas <= 1'd1;
                            if ((soclinux_bankmachine7_cmd_ready & soclinux_bankmachine7_auto_precharge)) begin
                                bankmachine7_next_state <= 2'd2;
                            end
                        end else begin
                            bankmachine7_next_state <= 1'd1;
                        end
                    end else begin
                        bankmachine7_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign soclinux_rdcmdphase = (v7ddrphy_rdphase_storage - 1'd1);
assign soclinux_wrcmdphase = (v7ddrphy_wrphase_storage - 1'd1);
assign soclinux_trrdcon_valid = ((soclinux_choose_cmd_cmd_valid & soclinux_choose_cmd_cmd_ready) & ((soclinux_choose_cmd_cmd_payload_ras & (~soclinux_choose_cmd_cmd_payload_cas)) & (~soclinux_choose_cmd_cmd_payload_we)));
assign soclinux_tfawcon_valid = ((soclinux_choose_cmd_cmd_valid & soclinux_choose_cmd_cmd_ready) & ((soclinux_choose_cmd_cmd_payload_ras & (~soclinux_choose_cmd_cmd_payload_cas)) & (~soclinux_choose_cmd_cmd_payload_we)));
assign soclinux_ras_allowed = (soclinux_trrdcon_ready & soclinux_tfawcon_ready);
assign soclinux_tccdcon_valid = ((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & (soclinux_choose_req_cmd_payload_is_write | soclinux_choose_req_cmd_payload_is_read));
assign soclinux_cas_allowed = soclinux_tccdcon_ready;
assign soclinux_twtrcon_valid = ((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & soclinux_choose_req_cmd_payload_is_write);
assign soclinux_read_available = ((((((((soclinux_bankmachine0_cmd_valid & soclinux_bankmachine0_cmd_payload_is_read) | (soclinux_bankmachine1_cmd_valid & soclinux_bankmachine1_cmd_payload_is_read)) | (soclinux_bankmachine2_cmd_valid & soclinux_bankmachine2_cmd_payload_is_read)) | (soclinux_bankmachine3_cmd_valid & soclinux_bankmachine3_cmd_payload_is_read)) | (soclinux_bankmachine4_cmd_valid & soclinux_bankmachine4_cmd_payload_is_read)) | (soclinux_bankmachine5_cmd_valid & soclinux_bankmachine5_cmd_payload_is_read)) | (soclinux_bankmachine6_cmd_valid & soclinux_bankmachine6_cmd_payload_is_read)) | (soclinux_bankmachine7_cmd_valid & soclinux_bankmachine7_cmd_payload_is_read));
assign soclinux_write_available = ((((((((soclinux_bankmachine0_cmd_valid & soclinux_bankmachine0_cmd_payload_is_write) | (soclinux_bankmachine1_cmd_valid & soclinux_bankmachine1_cmd_payload_is_write)) | (soclinux_bankmachine2_cmd_valid & soclinux_bankmachine2_cmd_payload_is_write)) | (soclinux_bankmachine3_cmd_valid & soclinux_bankmachine3_cmd_payload_is_write)) | (soclinux_bankmachine4_cmd_valid & soclinux_bankmachine4_cmd_payload_is_write)) | (soclinux_bankmachine5_cmd_valid & soclinux_bankmachine5_cmd_payload_is_write)) | (soclinux_bankmachine6_cmd_valid & soclinux_bankmachine6_cmd_payload_is_write)) | (soclinux_bankmachine7_cmd_valid & soclinux_bankmachine7_cmd_payload_is_write));
assign soclinux_max_time0 = (soclinux_time0 == 1'd0);
assign soclinux_max_time1 = (soclinux_time1 == 1'd0);
assign soclinux_bankmachine0_refresh_req = soclinux_cmd_valid;
assign soclinux_bankmachine1_refresh_req = soclinux_cmd_valid;
assign soclinux_bankmachine2_refresh_req = soclinux_cmd_valid;
assign soclinux_bankmachine3_refresh_req = soclinux_cmd_valid;
assign soclinux_bankmachine4_refresh_req = soclinux_cmd_valid;
assign soclinux_bankmachine5_refresh_req = soclinux_cmd_valid;
assign soclinux_bankmachine6_refresh_req = soclinux_cmd_valid;
assign soclinux_bankmachine7_refresh_req = soclinux_cmd_valid;
assign soclinux_go_to_refresh = (((((((soclinux_bankmachine0_refresh_gnt & soclinux_bankmachine1_refresh_gnt) & soclinux_bankmachine2_refresh_gnt) & soclinux_bankmachine3_refresh_gnt) & soclinux_bankmachine4_refresh_gnt) & soclinux_bankmachine5_refresh_gnt) & soclinux_bankmachine6_refresh_gnt) & soclinux_bankmachine7_refresh_gnt);
assign soclinux_interface_rdata = {soclinux_dfi_p3_rddata, soclinux_dfi_p2_rddata, soclinux_dfi_p1_rddata, soclinux_dfi_p0_rddata};
assign {soclinux_dfi_p3_wrdata, soclinux_dfi_p2_wrdata, soclinux_dfi_p1_wrdata, soclinux_dfi_p0_wrdata} = soclinux_interface_wdata;
assign {soclinux_dfi_p3_wrdata_mask, soclinux_dfi_p2_wrdata_mask, soclinux_dfi_p1_wrdata_mask, soclinux_dfi_p0_wrdata_mask} = (~soclinux_interface_wdata_we);
always @(*) begin
    soclinux_choose_cmd_valids <= 8'd0;
    soclinux_choose_cmd_valids[0] <= (soclinux_bankmachine0_cmd_valid & (((soclinux_bankmachine0_cmd_payload_is_cmd & soclinux_choose_cmd_want_cmds) & ((~((soclinux_bankmachine0_cmd_payload_ras & (~soclinux_bankmachine0_cmd_payload_cas)) & (~soclinux_bankmachine0_cmd_payload_we))) | soclinux_choose_cmd_want_activates)) | ((soclinux_bankmachine0_cmd_payload_is_read == soclinux_choose_cmd_want_reads) & (soclinux_bankmachine0_cmd_payload_is_write == soclinux_choose_cmd_want_writes))));
    soclinux_choose_cmd_valids[1] <= (soclinux_bankmachine1_cmd_valid & (((soclinux_bankmachine1_cmd_payload_is_cmd & soclinux_choose_cmd_want_cmds) & ((~((soclinux_bankmachine1_cmd_payload_ras & (~soclinux_bankmachine1_cmd_payload_cas)) & (~soclinux_bankmachine1_cmd_payload_we))) | soclinux_choose_cmd_want_activates)) | ((soclinux_bankmachine1_cmd_payload_is_read == soclinux_choose_cmd_want_reads) & (soclinux_bankmachine1_cmd_payload_is_write == soclinux_choose_cmd_want_writes))));
    soclinux_choose_cmd_valids[2] <= (soclinux_bankmachine2_cmd_valid & (((soclinux_bankmachine2_cmd_payload_is_cmd & soclinux_choose_cmd_want_cmds) & ((~((soclinux_bankmachine2_cmd_payload_ras & (~soclinux_bankmachine2_cmd_payload_cas)) & (~soclinux_bankmachine2_cmd_payload_we))) | soclinux_choose_cmd_want_activates)) | ((soclinux_bankmachine2_cmd_payload_is_read == soclinux_choose_cmd_want_reads) & (soclinux_bankmachine2_cmd_payload_is_write == soclinux_choose_cmd_want_writes))));
    soclinux_choose_cmd_valids[3] <= (soclinux_bankmachine3_cmd_valid & (((soclinux_bankmachine3_cmd_payload_is_cmd & soclinux_choose_cmd_want_cmds) & ((~((soclinux_bankmachine3_cmd_payload_ras & (~soclinux_bankmachine3_cmd_payload_cas)) & (~soclinux_bankmachine3_cmd_payload_we))) | soclinux_choose_cmd_want_activates)) | ((soclinux_bankmachine3_cmd_payload_is_read == soclinux_choose_cmd_want_reads) & (soclinux_bankmachine3_cmd_payload_is_write == soclinux_choose_cmd_want_writes))));
    soclinux_choose_cmd_valids[4] <= (soclinux_bankmachine4_cmd_valid & (((soclinux_bankmachine4_cmd_payload_is_cmd & soclinux_choose_cmd_want_cmds) & ((~((soclinux_bankmachine4_cmd_payload_ras & (~soclinux_bankmachine4_cmd_payload_cas)) & (~soclinux_bankmachine4_cmd_payload_we))) | soclinux_choose_cmd_want_activates)) | ((soclinux_bankmachine4_cmd_payload_is_read == soclinux_choose_cmd_want_reads) & (soclinux_bankmachine4_cmd_payload_is_write == soclinux_choose_cmd_want_writes))));
    soclinux_choose_cmd_valids[5] <= (soclinux_bankmachine5_cmd_valid & (((soclinux_bankmachine5_cmd_payload_is_cmd & soclinux_choose_cmd_want_cmds) & ((~((soclinux_bankmachine5_cmd_payload_ras & (~soclinux_bankmachine5_cmd_payload_cas)) & (~soclinux_bankmachine5_cmd_payload_we))) | soclinux_choose_cmd_want_activates)) | ((soclinux_bankmachine5_cmd_payload_is_read == soclinux_choose_cmd_want_reads) & (soclinux_bankmachine5_cmd_payload_is_write == soclinux_choose_cmd_want_writes))));
    soclinux_choose_cmd_valids[6] <= (soclinux_bankmachine6_cmd_valid & (((soclinux_bankmachine6_cmd_payload_is_cmd & soclinux_choose_cmd_want_cmds) & ((~((soclinux_bankmachine6_cmd_payload_ras & (~soclinux_bankmachine6_cmd_payload_cas)) & (~soclinux_bankmachine6_cmd_payload_we))) | soclinux_choose_cmd_want_activates)) | ((soclinux_bankmachine6_cmd_payload_is_read == soclinux_choose_cmd_want_reads) & (soclinux_bankmachine6_cmd_payload_is_write == soclinux_choose_cmd_want_writes))));
    soclinux_choose_cmd_valids[7] <= (soclinux_bankmachine7_cmd_valid & (((soclinux_bankmachine7_cmd_payload_is_cmd & soclinux_choose_cmd_want_cmds) & ((~((soclinux_bankmachine7_cmd_payload_ras & (~soclinux_bankmachine7_cmd_payload_cas)) & (~soclinux_bankmachine7_cmd_payload_we))) | soclinux_choose_cmd_want_activates)) | ((soclinux_bankmachine7_cmd_payload_is_read == soclinux_choose_cmd_want_reads) & (soclinux_bankmachine7_cmd_payload_is_write == soclinux_choose_cmd_want_writes))));
end
assign soclinux_choose_cmd_request = soclinux_choose_cmd_valids;
assign soclinux_choose_cmd_cmd_valid = rhs_array_muxed8;
assign soclinux_choose_cmd_cmd_payload_a = rhs_array_muxed9;
assign soclinux_choose_cmd_cmd_payload_ba = rhs_array_muxed10;
assign soclinux_choose_cmd_cmd_payload_is_read = rhs_array_muxed11;
assign soclinux_choose_cmd_cmd_payload_is_write = rhs_array_muxed12;
assign soclinux_choose_cmd_cmd_payload_is_cmd = rhs_array_muxed13;
always @(*) begin
    soclinux_choose_cmd_cmd_payload_cas <= 1'd0;
    if (soclinux_choose_cmd_cmd_valid) begin
        soclinux_choose_cmd_cmd_payload_cas <= t_array_muxed0;
    end
end
always @(*) begin
    soclinux_choose_cmd_cmd_payload_ras <= 1'd0;
    if (soclinux_choose_cmd_cmd_valid) begin
        soclinux_choose_cmd_cmd_payload_ras <= t_array_muxed1;
    end
end
always @(*) begin
    soclinux_choose_cmd_cmd_payload_we <= 1'd0;
    if (soclinux_choose_cmd_cmd_valid) begin
        soclinux_choose_cmd_cmd_payload_we <= t_array_muxed2;
    end
end
assign soclinux_choose_cmd_ce = (soclinux_choose_cmd_cmd_ready | (~soclinux_choose_cmd_cmd_valid));
always @(*) begin
    soclinux_choose_req_valids <= 8'd0;
    soclinux_choose_req_valids[0] <= (soclinux_bankmachine0_cmd_valid & (((soclinux_bankmachine0_cmd_payload_is_cmd & soclinux_choose_req_want_cmds) & ((~((soclinux_bankmachine0_cmd_payload_ras & (~soclinux_bankmachine0_cmd_payload_cas)) & (~soclinux_bankmachine0_cmd_payload_we))) | soclinux_choose_req_want_activates)) | ((soclinux_bankmachine0_cmd_payload_is_read == soclinux_choose_req_want_reads) & (soclinux_bankmachine0_cmd_payload_is_write == soclinux_choose_req_want_writes))));
    soclinux_choose_req_valids[1] <= (soclinux_bankmachine1_cmd_valid & (((soclinux_bankmachine1_cmd_payload_is_cmd & soclinux_choose_req_want_cmds) & ((~((soclinux_bankmachine1_cmd_payload_ras & (~soclinux_bankmachine1_cmd_payload_cas)) & (~soclinux_bankmachine1_cmd_payload_we))) | soclinux_choose_req_want_activates)) | ((soclinux_bankmachine1_cmd_payload_is_read == soclinux_choose_req_want_reads) & (soclinux_bankmachine1_cmd_payload_is_write == soclinux_choose_req_want_writes))));
    soclinux_choose_req_valids[2] <= (soclinux_bankmachine2_cmd_valid & (((soclinux_bankmachine2_cmd_payload_is_cmd & soclinux_choose_req_want_cmds) & ((~((soclinux_bankmachine2_cmd_payload_ras & (~soclinux_bankmachine2_cmd_payload_cas)) & (~soclinux_bankmachine2_cmd_payload_we))) | soclinux_choose_req_want_activates)) | ((soclinux_bankmachine2_cmd_payload_is_read == soclinux_choose_req_want_reads) & (soclinux_bankmachine2_cmd_payload_is_write == soclinux_choose_req_want_writes))));
    soclinux_choose_req_valids[3] <= (soclinux_bankmachine3_cmd_valid & (((soclinux_bankmachine3_cmd_payload_is_cmd & soclinux_choose_req_want_cmds) & ((~((soclinux_bankmachine3_cmd_payload_ras & (~soclinux_bankmachine3_cmd_payload_cas)) & (~soclinux_bankmachine3_cmd_payload_we))) | soclinux_choose_req_want_activates)) | ((soclinux_bankmachine3_cmd_payload_is_read == soclinux_choose_req_want_reads) & (soclinux_bankmachine3_cmd_payload_is_write == soclinux_choose_req_want_writes))));
    soclinux_choose_req_valids[4] <= (soclinux_bankmachine4_cmd_valid & (((soclinux_bankmachine4_cmd_payload_is_cmd & soclinux_choose_req_want_cmds) & ((~((soclinux_bankmachine4_cmd_payload_ras & (~soclinux_bankmachine4_cmd_payload_cas)) & (~soclinux_bankmachine4_cmd_payload_we))) | soclinux_choose_req_want_activates)) | ((soclinux_bankmachine4_cmd_payload_is_read == soclinux_choose_req_want_reads) & (soclinux_bankmachine4_cmd_payload_is_write == soclinux_choose_req_want_writes))));
    soclinux_choose_req_valids[5] <= (soclinux_bankmachine5_cmd_valid & (((soclinux_bankmachine5_cmd_payload_is_cmd & soclinux_choose_req_want_cmds) & ((~((soclinux_bankmachine5_cmd_payload_ras & (~soclinux_bankmachine5_cmd_payload_cas)) & (~soclinux_bankmachine5_cmd_payload_we))) | soclinux_choose_req_want_activates)) | ((soclinux_bankmachine5_cmd_payload_is_read == soclinux_choose_req_want_reads) & (soclinux_bankmachine5_cmd_payload_is_write == soclinux_choose_req_want_writes))));
    soclinux_choose_req_valids[6] <= (soclinux_bankmachine6_cmd_valid & (((soclinux_bankmachine6_cmd_payload_is_cmd & soclinux_choose_req_want_cmds) & ((~((soclinux_bankmachine6_cmd_payload_ras & (~soclinux_bankmachine6_cmd_payload_cas)) & (~soclinux_bankmachine6_cmd_payload_we))) | soclinux_choose_req_want_activates)) | ((soclinux_bankmachine6_cmd_payload_is_read == soclinux_choose_req_want_reads) & (soclinux_bankmachine6_cmd_payload_is_write == soclinux_choose_req_want_writes))));
    soclinux_choose_req_valids[7] <= (soclinux_bankmachine7_cmd_valid & (((soclinux_bankmachine7_cmd_payload_is_cmd & soclinux_choose_req_want_cmds) & ((~((soclinux_bankmachine7_cmd_payload_ras & (~soclinux_bankmachine7_cmd_payload_cas)) & (~soclinux_bankmachine7_cmd_payload_we))) | soclinux_choose_req_want_activates)) | ((soclinux_bankmachine7_cmd_payload_is_read == soclinux_choose_req_want_reads) & (soclinux_bankmachine7_cmd_payload_is_write == soclinux_choose_req_want_writes))));
end
assign soclinux_choose_req_request = soclinux_choose_req_valids;
assign soclinux_choose_req_cmd_valid = rhs_array_muxed14;
assign soclinux_choose_req_cmd_payload_a = rhs_array_muxed15;
assign soclinux_choose_req_cmd_payload_ba = rhs_array_muxed16;
assign soclinux_choose_req_cmd_payload_is_read = rhs_array_muxed17;
assign soclinux_choose_req_cmd_payload_is_write = rhs_array_muxed18;
assign soclinux_choose_req_cmd_payload_is_cmd = rhs_array_muxed19;
always @(*) begin
    soclinux_choose_req_cmd_payload_cas <= 1'd0;
    if (soclinux_choose_req_cmd_valid) begin
        soclinux_choose_req_cmd_payload_cas <= t_array_muxed3;
    end
end
always @(*) begin
    soclinux_choose_req_cmd_payload_ras <= 1'd0;
    if (soclinux_choose_req_cmd_valid) begin
        soclinux_choose_req_cmd_payload_ras <= t_array_muxed4;
    end
end
always @(*) begin
    soclinux_choose_req_cmd_payload_we <= 1'd0;
    if (soclinux_choose_req_cmd_valid) begin
        soclinux_choose_req_cmd_payload_we <= t_array_muxed5;
    end
end
always @(*) begin
    soclinux_bankmachine0_cmd_ready <= 1'd0;
    if (((soclinux_choose_cmd_cmd_valid & soclinux_choose_cmd_cmd_ready) & (soclinux_choose_cmd_grant == 1'd0))) begin
        soclinux_bankmachine0_cmd_ready <= 1'd1;
    end
    if (((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & (soclinux_choose_req_grant == 1'd0))) begin
        soclinux_bankmachine0_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    soclinux_bankmachine1_cmd_ready <= 1'd0;
    if (((soclinux_choose_cmd_cmd_valid & soclinux_choose_cmd_cmd_ready) & (soclinux_choose_cmd_grant == 1'd1))) begin
        soclinux_bankmachine1_cmd_ready <= 1'd1;
    end
    if (((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & (soclinux_choose_req_grant == 1'd1))) begin
        soclinux_bankmachine1_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    soclinux_bankmachine2_cmd_ready <= 1'd0;
    if (((soclinux_choose_cmd_cmd_valid & soclinux_choose_cmd_cmd_ready) & (soclinux_choose_cmd_grant == 2'd2))) begin
        soclinux_bankmachine2_cmd_ready <= 1'd1;
    end
    if (((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & (soclinux_choose_req_grant == 2'd2))) begin
        soclinux_bankmachine2_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    soclinux_bankmachine3_cmd_ready <= 1'd0;
    if (((soclinux_choose_cmd_cmd_valid & soclinux_choose_cmd_cmd_ready) & (soclinux_choose_cmd_grant == 2'd3))) begin
        soclinux_bankmachine3_cmd_ready <= 1'd1;
    end
    if (((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & (soclinux_choose_req_grant == 2'd3))) begin
        soclinux_bankmachine3_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    soclinux_bankmachine4_cmd_ready <= 1'd0;
    if (((soclinux_choose_cmd_cmd_valid & soclinux_choose_cmd_cmd_ready) & (soclinux_choose_cmd_grant == 3'd4))) begin
        soclinux_bankmachine4_cmd_ready <= 1'd1;
    end
    if (((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & (soclinux_choose_req_grant == 3'd4))) begin
        soclinux_bankmachine4_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    soclinux_bankmachine5_cmd_ready <= 1'd0;
    if (((soclinux_choose_cmd_cmd_valid & soclinux_choose_cmd_cmd_ready) & (soclinux_choose_cmd_grant == 3'd5))) begin
        soclinux_bankmachine5_cmd_ready <= 1'd1;
    end
    if (((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & (soclinux_choose_req_grant == 3'd5))) begin
        soclinux_bankmachine5_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    soclinux_bankmachine6_cmd_ready <= 1'd0;
    if (((soclinux_choose_cmd_cmd_valid & soclinux_choose_cmd_cmd_ready) & (soclinux_choose_cmd_grant == 3'd6))) begin
        soclinux_bankmachine6_cmd_ready <= 1'd1;
    end
    if (((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & (soclinux_choose_req_grant == 3'd6))) begin
        soclinux_bankmachine6_cmd_ready <= 1'd1;
    end
end
always @(*) begin
    soclinux_bankmachine7_cmd_ready <= 1'd0;
    if (((soclinux_choose_cmd_cmd_valid & soclinux_choose_cmd_cmd_ready) & (soclinux_choose_cmd_grant == 3'd7))) begin
        soclinux_bankmachine7_cmd_ready <= 1'd1;
    end
    if (((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & (soclinux_choose_req_grant == 3'd7))) begin
        soclinux_bankmachine7_cmd_ready <= 1'd1;
    end
end
assign soclinux_choose_req_ce = (soclinux_choose_req_cmd_ready | (~soclinux_choose_req_cmd_valid));
assign soclinux_dfi_p0_reset_n = 1'd1;
assign soclinux_dfi_p0_cke = {1{soclinux_steerer0}};
assign soclinux_dfi_p0_odt = {1{soclinux_steerer1}};
assign soclinux_dfi_p1_reset_n = 1'd1;
assign soclinux_dfi_p1_cke = {1{soclinux_steerer2}};
assign soclinux_dfi_p1_odt = {1{soclinux_steerer3}};
assign soclinux_dfi_p2_reset_n = 1'd1;
assign soclinux_dfi_p2_cke = {1{soclinux_steerer4}};
assign soclinux_dfi_p2_odt = {1{soclinux_steerer5}};
assign soclinux_dfi_p3_reset_n = 1'd1;
assign soclinux_dfi_p3_cke = {1{soclinux_steerer6}};
assign soclinux_dfi_p3_odt = {1{soclinux_steerer7}};
assign soclinux_tfawcon_count = ((((soclinux_tfawcon_window[0] + soclinux_tfawcon_window[1]) + soclinux_tfawcon_window[2]) + soclinux_tfawcon_window[3]) + soclinux_tfawcon_window[4]);
always @(*) begin
    multiplexer_next_state <= 4'd0;
    soclinux_choose_cmd_cmd_ready <= 1'd0;
    soclinux_choose_cmd_want_activates <= 1'd0;
    soclinux_choose_req_cmd_ready <= 1'd0;
    soclinux_choose_req_want_reads <= 1'd0;
    soclinux_choose_req_want_writes <= 1'd0;
    soclinux_cmd_ready <= 1'd0;
    soclinux_en0 <= 1'd0;
    soclinux_en1 <= 1'd0;
    soclinux_steerer_sel0 <= 2'd0;
    soclinux_steerer_sel1 <= 2'd0;
    soclinux_steerer_sel2 <= 2'd0;
    soclinux_steerer_sel3 <= 2'd0;
    multiplexer_next_state <= multiplexer_state;
    case (multiplexer_state)
        1'd1: begin
            soclinux_en1 <= 1'd1;
            soclinux_choose_req_want_writes <= 1'd1;
            if (1'd0) begin
                soclinux_choose_req_cmd_ready <= (soclinux_cas_allowed & ((~((soclinux_choose_req_cmd_payload_ras & (~soclinux_choose_req_cmd_payload_cas)) & (~soclinux_choose_req_cmd_payload_we))) | soclinux_ras_allowed));
            end else begin
                soclinux_choose_cmd_want_activates <= soclinux_ras_allowed;
                soclinux_choose_cmd_cmd_ready <= ((~((soclinux_choose_cmd_cmd_payload_ras & (~soclinux_choose_cmd_cmd_payload_cas)) & (~soclinux_choose_cmd_cmd_payload_we))) | soclinux_ras_allowed);
                soclinux_choose_req_cmd_ready <= soclinux_cas_allowed;
            end
            soclinux_steerer_sel0 <= 1'd0;
            if ((v7ddrphy_wrphase_storage == 1'd0)) begin
                soclinux_steerer_sel0 <= 2'd2;
            end
            if ((soclinux_wrcmdphase == 1'd0)) begin
                soclinux_steerer_sel0 <= 1'd1;
            end
            soclinux_steerer_sel1 <= 1'd0;
            if ((v7ddrphy_wrphase_storage == 1'd1)) begin
                soclinux_steerer_sel1 <= 2'd2;
            end
            if ((soclinux_wrcmdphase == 1'd1)) begin
                soclinux_steerer_sel1 <= 1'd1;
            end
            soclinux_steerer_sel2 <= 1'd0;
            if ((v7ddrphy_wrphase_storage == 2'd2)) begin
                soclinux_steerer_sel2 <= 2'd2;
            end
            if ((soclinux_wrcmdphase == 2'd2)) begin
                soclinux_steerer_sel2 <= 1'd1;
            end
            soclinux_steerer_sel3 <= 1'd0;
            if ((v7ddrphy_wrphase_storage == 2'd3)) begin
                soclinux_steerer_sel3 <= 2'd2;
            end
            if ((soclinux_wrcmdphase == 2'd3)) begin
                soclinux_steerer_sel3 <= 1'd1;
            end
            if (soclinux_read_available) begin
                if (((~soclinux_write_available) | soclinux_max_time1)) begin
                    multiplexer_next_state <= 2'd3;
                end
            end
            if (soclinux_go_to_refresh) begin
                multiplexer_next_state <= 2'd2;
            end
        end
        2'd2: begin
            soclinux_steerer_sel0 <= 2'd3;
            soclinux_cmd_ready <= 1'd1;
            if (soclinux_cmd_last) begin
                multiplexer_next_state <= 1'd0;
            end
        end
        2'd3: begin
            if (soclinux_twtrcon_ready) begin
                multiplexer_next_state <= 1'd0;
            end
        end
        3'd4: begin
            multiplexer_next_state <= 3'd5;
        end
        3'd5: begin
            multiplexer_next_state <= 3'd6;
        end
        3'd6: begin
            multiplexer_next_state <= 3'd7;
        end
        3'd7: begin
            multiplexer_next_state <= 4'd8;
        end
        4'd8: begin
            multiplexer_next_state <= 4'd9;
        end
        4'd9: begin
            multiplexer_next_state <= 4'd10;
        end
        4'd10: begin
            multiplexer_next_state <= 1'd1;
        end
        default: begin
            soclinux_en0 <= 1'd1;
            soclinux_choose_req_want_reads <= 1'd1;
            if (1'd0) begin
                soclinux_choose_req_cmd_ready <= (soclinux_cas_allowed & ((~((soclinux_choose_req_cmd_payload_ras & (~soclinux_choose_req_cmd_payload_cas)) & (~soclinux_choose_req_cmd_payload_we))) | soclinux_ras_allowed));
            end else begin
                soclinux_choose_cmd_want_activates <= soclinux_ras_allowed;
                soclinux_choose_cmd_cmd_ready <= ((~((soclinux_choose_cmd_cmd_payload_ras & (~soclinux_choose_cmd_cmd_payload_cas)) & (~soclinux_choose_cmd_cmd_payload_we))) | soclinux_ras_allowed);
                soclinux_choose_req_cmd_ready <= soclinux_cas_allowed;
            end
            soclinux_steerer_sel0 <= 1'd0;
            if ((v7ddrphy_rdphase_storage == 1'd0)) begin
                soclinux_steerer_sel0 <= 2'd2;
            end
            if ((soclinux_rdcmdphase == 1'd0)) begin
                soclinux_steerer_sel0 <= 1'd1;
            end
            soclinux_steerer_sel1 <= 1'd0;
            if ((v7ddrphy_rdphase_storage == 1'd1)) begin
                soclinux_steerer_sel1 <= 2'd2;
            end
            if ((soclinux_rdcmdphase == 1'd1)) begin
                soclinux_steerer_sel1 <= 1'd1;
            end
            soclinux_steerer_sel2 <= 1'd0;
            if ((v7ddrphy_rdphase_storage == 2'd2)) begin
                soclinux_steerer_sel2 <= 2'd2;
            end
            if ((soclinux_rdcmdphase == 2'd2)) begin
                soclinux_steerer_sel2 <= 1'd1;
            end
            soclinux_steerer_sel3 <= 1'd0;
            if ((v7ddrphy_rdphase_storage == 2'd3)) begin
                soclinux_steerer_sel3 <= 2'd2;
            end
            if ((soclinux_rdcmdphase == 2'd3)) begin
                soclinux_steerer_sel3 <= 1'd1;
            end
            if (soclinux_write_available) begin
                if (((~soclinux_read_available) | soclinux_max_time0)) begin
                    multiplexer_next_state <= 3'd4;
                end
            end
            if (soclinux_go_to_refresh) begin
                multiplexer_next_state <= 2'd2;
            end
        end
    endcase
end
assign roundrobin0_request = {(((soclinux_litedramnativeport2_cmd_payload_addr[9:7] == 1'd0) & (~(((((((locked2 | (soclinux_interface_bank1_lock & (roundrobin1_grant == 2'd2))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 2'd2))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 2'd2))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 2'd2))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 2'd2))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 2'd2))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 2'd2))))) & soclinux_litedramnativeport2_cmd_valid), (((soclinux_litedramnativeport1_cmd_payload_addr[9:7] == 1'd0) & (~(((((((locked1 | (soclinux_interface_bank1_lock & (roundrobin1_grant == 1'd1))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 1'd1))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 1'd1))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 1'd1))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 1'd1))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 1'd1))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 1'd1))))) & soclinux_litedramnativeport1_cmd_valid), (((soclinux_litedramnativeport0_cmd_payload_addr[9:7] == 1'd0) & (~(((((((locked0 | (soclinux_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & soclinux_litedramnativeport0_cmd_valid)};
assign roundrobin0_ce = ((~soclinux_interface_bank0_valid) & (~soclinux_interface_bank0_lock));
assign soclinux_interface_bank0_addr = rhs_array_muxed20;
assign soclinux_interface_bank0_we = rhs_array_muxed21;
assign soclinux_interface_bank0_valid = rhs_array_muxed22;
assign roundrobin1_request = {(((soclinux_litedramnativeport2_cmd_payload_addr[9:7] == 1'd1) & (~(((((((locked5 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 2'd2))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 2'd2))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 2'd2))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 2'd2))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 2'd2))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 2'd2))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 2'd2))))) & soclinux_litedramnativeport2_cmd_valid), (((soclinux_litedramnativeport1_cmd_payload_addr[9:7] == 1'd1) & (~(((((((locked4 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 1'd1))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 1'd1))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 1'd1))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 1'd1))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 1'd1))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 1'd1))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 1'd1))))) & soclinux_litedramnativeport1_cmd_valid), (((soclinux_litedramnativeport0_cmd_payload_addr[9:7] == 1'd1) & (~(((((((locked3 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & soclinux_litedramnativeport0_cmd_valid)};
assign roundrobin1_ce = ((~soclinux_interface_bank1_valid) & (~soclinux_interface_bank1_lock));
assign soclinux_interface_bank1_addr = rhs_array_muxed23;
assign soclinux_interface_bank1_we = rhs_array_muxed24;
assign soclinux_interface_bank1_valid = rhs_array_muxed25;
assign roundrobin2_request = {(((soclinux_litedramnativeport2_cmd_payload_addr[9:7] == 2'd2) & (~(((((((locked8 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 2'd2))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 2'd2))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 2'd2))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 2'd2))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 2'd2))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 2'd2))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 2'd2))))) & soclinux_litedramnativeport2_cmd_valid), (((soclinux_litedramnativeport1_cmd_payload_addr[9:7] == 2'd2) & (~(((((((locked7 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 1'd1))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 1'd1))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 1'd1))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 1'd1))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 1'd1))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 1'd1))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 1'd1))))) & soclinux_litedramnativeport1_cmd_valid), (((soclinux_litedramnativeport0_cmd_payload_addr[9:7] == 2'd2) & (~(((((((locked6 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & soclinux_litedramnativeport0_cmd_valid)};
assign roundrobin2_ce = ((~soclinux_interface_bank2_valid) & (~soclinux_interface_bank2_lock));
assign soclinux_interface_bank2_addr = rhs_array_muxed26;
assign soclinux_interface_bank2_we = rhs_array_muxed27;
assign soclinux_interface_bank2_valid = rhs_array_muxed28;
assign roundrobin3_request = {(((soclinux_litedramnativeport2_cmd_payload_addr[9:7] == 2'd3) & (~(((((((locked11 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 2'd2))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 2'd2))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 2'd2))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 2'd2))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 2'd2))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 2'd2))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 2'd2))))) & soclinux_litedramnativeport2_cmd_valid), (((soclinux_litedramnativeport1_cmd_payload_addr[9:7] == 2'd3) & (~(((((((locked10 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 1'd1))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 1'd1))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 1'd1))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 1'd1))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 1'd1))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 1'd1))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 1'd1))))) & soclinux_litedramnativeport1_cmd_valid), (((soclinux_litedramnativeport0_cmd_payload_addr[9:7] == 2'd3) & (~(((((((locked9 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & soclinux_litedramnativeport0_cmd_valid)};
assign roundrobin3_ce = ((~soclinux_interface_bank3_valid) & (~soclinux_interface_bank3_lock));
assign soclinux_interface_bank3_addr = rhs_array_muxed29;
assign soclinux_interface_bank3_we = rhs_array_muxed30;
assign soclinux_interface_bank3_valid = rhs_array_muxed31;
assign roundrobin4_request = {(((soclinux_litedramnativeport2_cmd_payload_addr[9:7] == 3'd4) & (~(((((((locked14 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 2'd2))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 2'd2))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 2'd2))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 2'd2))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 2'd2))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 2'd2))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 2'd2))))) & soclinux_litedramnativeport2_cmd_valid), (((soclinux_litedramnativeport1_cmd_payload_addr[9:7] == 3'd4) & (~(((((((locked13 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 1'd1))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 1'd1))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 1'd1))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 1'd1))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 1'd1))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 1'd1))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 1'd1))))) & soclinux_litedramnativeport1_cmd_valid), (((soclinux_litedramnativeport0_cmd_payload_addr[9:7] == 3'd4) & (~(((((((locked12 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & soclinux_litedramnativeport0_cmd_valid)};
assign roundrobin4_ce = ((~soclinux_interface_bank4_valid) & (~soclinux_interface_bank4_lock));
assign soclinux_interface_bank4_addr = rhs_array_muxed32;
assign soclinux_interface_bank4_we = rhs_array_muxed33;
assign soclinux_interface_bank4_valid = rhs_array_muxed34;
assign roundrobin5_request = {(((soclinux_litedramnativeport2_cmd_payload_addr[9:7] == 3'd5) & (~(((((((locked17 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 2'd2))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 2'd2))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 2'd2))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 2'd2))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 2'd2))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 2'd2))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 2'd2))))) & soclinux_litedramnativeport2_cmd_valid), (((soclinux_litedramnativeport1_cmd_payload_addr[9:7] == 3'd5) & (~(((((((locked16 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 1'd1))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 1'd1))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 1'd1))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 1'd1))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 1'd1))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 1'd1))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 1'd1))))) & soclinux_litedramnativeport1_cmd_valid), (((soclinux_litedramnativeport0_cmd_payload_addr[9:7] == 3'd5) & (~(((((((locked15 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & soclinux_litedramnativeport0_cmd_valid)};
assign roundrobin5_ce = ((~soclinux_interface_bank5_valid) & (~soclinux_interface_bank5_lock));
assign soclinux_interface_bank5_addr = rhs_array_muxed35;
assign soclinux_interface_bank5_we = rhs_array_muxed36;
assign soclinux_interface_bank5_valid = rhs_array_muxed37;
assign roundrobin6_request = {(((soclinux_litedramnativeport2_cmd_payload_addr[9:7] == 3'd6) & (~(((((((locked20 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 2'd2))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 2'd2))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 2'd2))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 2'd2))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 2'd2))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 2'd2))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 2'd2))))) & soclinux_litedramnativeport2_cmd_valid), (((soclinux_litedramnativeport1_cmd_payload_addr[9:7] == 3'd6) & (~(((((((locked19 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 1'd1))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 1'd1))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 1'd1))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 1'd1))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 1'd1))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 1'd1))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 1'd1))))) & soclinux_litedramnativeport1_cmd_valid), (((soclinux_litedramnativeport0_cmd_payload_addr[9:7] == 3'd6) & (~(((((((locked18 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & soclinux_litedramnativeport0_cmd_valid)};
assign roundrobin6_ce = ((~soclinux_interface_bank6_valid) & (~soclinux_interface_bank6_lock));
assign soclinux_interface_bank6_addr = rhs_array_muxed38;
assign soclinux_interface_bank6_we = rhs_array_muxed39;
assign soclinux_interface_bank6_valid = rhs_array_muxed40;
assign roundrobin7_request = {(((soclinux_litedramnativeport2_cmd_payload_addr[9:7] == 3'd7) & (~(((((((locked23 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 2'd2))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 2'd2))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 2'd2))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 2'd2))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 2'd2))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 2'd2))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 2'd2))))) & soclinux_litedramnativeport2_cmd_valid), (((soclinux_litedramnativeport1_cmd_payload_addr[9:7] == 3'd7) & (~(((((((locked22 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 1'd1))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 1'd1))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 1'd1))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 1'd1))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 1'd1))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 1'd1))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 1'd1))))) & soclinux_litedramnativeport1_cmd_valid), (((soclinux_litedramnativeport0_cmd_payload_addr[9:7] == 3'd7) & (~(((((((locked21 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 1'd0))))) & soclinux_litedramnativeport0_cmd_valid)};
assign roundrobin7_ce = ((~soclinux_interface_bank7_valid) & (~soclinux_interface_bank7_lock));
assign soclinux_interface_bank7_addr = rhs_array_muxed41;
assign soclinux_interface_bank7_we = rhs_array_muxed42;
assign soclinux_interface_bank7_valid = rhs_array_muxed43;
assign soclinux_litedramnativeport0_cmd_ready = ((((((((1'd0 | (((roundrobin0_grant == 1'd0) & ((soclinux_litedramnativeport0_cmd_payload_addr[9:7] == 1'd0) & (~(((((((locked0 | (soclinux_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 1'd0)))))) & soclinux_interface_bank0_ready)) | (((roundrobin1_grant == 1'd0) & ((soclinux_litedramnativeport0_cmd_payload_addr[9:7] == 1'd1) & (~(((((((locked3 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 1'd0)))))) & soclinux_interface_bank1_ready)) | (((roundrobin2_grant == 1'd0) & ((soclinux_litedramnativeport0_cmd_payload_addr[9:7] == 2'd2) & (~(((((((locked6 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 1'd0)))))) & soclinux_interface_bank2_ready)) | (((roundrobin3_grant == 1'd0) & ((soclinux_litedramnativeport0_cmd_payload_addr[9:7] == 2'd3) & (~(((((((locked9 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 1'd0)))))) & soclinux_interface_bank3_ready)) | (((roundrobin4_grant == 1'd0) & ((soclinux_litedramnativeport0_cmd_payload_addr[9:7] == 3'd4) & (~(((((((locked12 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 1'd0)))))) & soclinux_interface_bank4_ready)) | (((roundrobin5_grant == 1'd0) & ((soclinux_litedramnativeport0_cmd_payload_addr[9:7] == 3'd5) & (~(((((((locked15 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 1'd0)))))) & soclinux_interface_bank5_ready)) | (((roundrobin6_grant == 1'd0) & ((soclinux_litedramnativeport0_cmd_payload_addr[9:7] == 3'd6) & (~(((((((locked18 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 1'd0)))))) & soclinux_interface_bank6_ready)) | (((roundrobin7_grant == 1'd0) & ((soclinux_litedramnativeport0_cmd_payload_addr[9:7] == 3'd7) & (~(((((((locked21 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 1'd0)))))) & soclinux_interface_bank7_ready));
assign soclinux_litedramnativeport1_cmd_ready = ((((((((1'd0 | (((roundrobin0_grant == 1'd1) & ((soclinux_litedramnativeport1_cmd_payload_addr[9:7] == 1'd0) & (~(((((((locked1 | (soclinux_interface_bank1_lock & (roundrobin1_grant == 1'd1))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 1'd1))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 1'd1))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 1'd1))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 1'd1))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 1'd1))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 1'd1)))))) & soclinux_interface_bank0_ready)) | (((roundrobin1_grant == 1'd1) & ((soclinux_litedramnativeport1_cmd_payload_addr[9:7] == 1'd1) & (~(((((((locked4 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 1'd1))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 1'd1))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 1'd1))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 1'd1))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 1'd1))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 1'd1))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 1'd1)))))) & soclinux_interface_bank1_ready)) | (((roundrobin2_grant == 1'd1) & ((soclinux_litedramnativeport1_cmd_payload_addr[9:7] == 2'd2) & (~(((((((locked7 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 1'd1))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 1'd1))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 1'd1))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 1'd1))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 1'd1))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 1'd1))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 1'd1)))))) & soclinux_interface_bank2_ready)) | (((roundrobin3_grant == 1'd1) & ((soclinux_litedramnativeport1_cmd_payload_addr[9:7] == 2'd3) & (~(((((((locked10 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 1'd1))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 1'd1))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 1'd1))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 1'd1))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 1'd1))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 1'd1))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 1'd1)))))) & soclinux_interface_bank3_ready)) | (((roundrobin4_grant == 1'd1) & ((soclinux_litedramnativeport1_cmd_payload_addr[9:7] == 3'd4) & (~(((((((locked13 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 1'd1))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 1'd1))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 1'd1))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 1'd1))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 1'd1))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 1'd1))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 1'd1)))))) & soclinux_interface_bank4_ready)) | (((roundrobin5_grant == 1'd1) & ((soclinux_litedramnativeport1_cmd_payload_addr[9:7] == 3'd5) & (~(((((((locked16 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 1'd1))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 1'd1))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 1'd1))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 1'd1))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 1'd1))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 1'd1))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 1'd1)))))) & soclinux_interface_bank5_ready)) | (((roundrobin6_grant == 1'd1) & ((soclinux_litedramnativeport1_cmd_payload_addr[9:7] == 3'd6) & (~(((((((locked19 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 1'd1))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 1'd1))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 1'd1))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 1'd1))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 1'd1))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 1'd1))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 1'd1)))))) & soclinux_interface_bank6_ready)) | (((roundrobin7_grant == 1'd1) & ((soclinux_litedramnativeport1_cmd_payload_addr[9:7] == 3'd7) & (~(((((((locked22 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 1'd1))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 1'd1))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 1'd1))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 1'd1))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 1'd1))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 1'd1))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 1'd1)))))) & soclinux_interface_bank7_ready));
assign soclinux_litedramnativeport2_cmd_ready = ((((((((1'd0 | (((roundrobin0_grant == 2'd2) & ((soclinux_litedramnativeport2_cmd_payload_addr[9:7] == 1'd0) & (~(((((((locked2 | (soclinux_interface_bank1_lock & (roundrobin1_grant == 2'd2))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 2'd2))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 2'd2))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 2'd2))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 2'd2))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 2'd2))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 2'd2)))))) & soclinux_interface_bank0_ready)) | (((roundrobin1_grant == 2'd2) & ((soclinux_litedramnativeport2_cmd_payload_addr[9:7] == 1'd1) & (~(((((((locked5 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 2'd2))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 2'd2))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 2'd2))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 2'd2))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 2'd2))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 2'd2))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 2'd2)))))) & soclinux_interface_bank1_ready)) | (((roundrobin2_grant == 2'd2) & ((soclinux_litedramnativeport2_cmd_payload_addr[9:7] == 2'd2) & (~(((((((locked8 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 2'd2))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 2'd2))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 2'd2))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 2'd2))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 2'd2))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 2'd2))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 2'd2)))))) & soclinux_interface_bank2_ready)) | (((roundrobin3_grant == 2'd2) & ((soclinux_litedramnativeport2_cmd_payload_addr[9:7] == 2'd3) & (~(((((((locked11 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 2'd2))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 2'd2))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 2'd2))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 2'd2))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 2'd2))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 2'd2))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 2'd2)))))) & soclinux_interface_bank3_ready)) | (((roundrobin4_grant == 2'd2) & ((soclinux_litedramnativeport2_cmd_payload_addr[9:7] == 3'd4) & (~(((((((locked14 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 2'd2))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 2'd2))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 2'd2))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 2'd2))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 2'd2))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 2'd2))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 2'd2)))))) & soclinux_interface_bank4_ready)) | (((roundrobin5_grant == 2'd2) & ((soclinux_litedramnativeport2_cmd_payload_addr[9:7] == 3'd5) & (~(((((((locked17 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 2'd2))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 2'd2))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 2'd2))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 2'd2))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 2'd2))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 2'd2))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 2'd2)))))) & soclinux_interface_bank5_ready)) | (((roundrobin6_grant == 2'd2) & ((soclinux_litedramnativeport2_cmd_payload_addr[9:7] == 3'd6) & (~(((((((locked20 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 2'd2))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 2'd2))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 2'd2))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 2'd2))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 2'd2))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 2'd2))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 2'd2)))))) & soclinux_interface_bank6_ready)) | (((roundrobin7_grant == 2'd2) & ((soclinux_litedramnativeport2_cmd_payload_addr[9:7] == 3'd7) & (~(((((((locked23 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 2'd2))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 2'd2))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 2'd2))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 2'd2))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 2'd2))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 2'd2))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 2'd2)))))) & soclinux_interface_bank7_ready));
assign soclinux_litedramnativeport0_wdata_ready = new_master_wdata_ready1;
assign soclinux_litedramnativeport1_wdata_ready = new_master_wdata_ready3;
assign soclinux_litedramnativeport2_wdata_ready = new_master_wdata_ready5;
assign soclinux_litedramnativeport0_rdata_valid = new_master_rdata_valid8;
assign soclinux_litedramnativeport1_rdata_valid = new_master_rdata_valid17;
assign soclinux_litedramnativeport2_rdata_valid = new_master_rdata_valid26;
always @(*) begin
    soclinux_interface_wdata <= 256'd0;
    soclinux_interface_wdata_we <= 32'd0;
    case ({new_master_wdata_ready5, new_master_wdata_ready3, new_master_wdata_ready1})
        1'd1: begin
            soclinux_interface_wdata <= soclinux_litedramnativeport0_wdata_payload_data;
            soclinux_interface_wdata_we <= soclinux_litedramnativeport0_wdata_payload_we;
        end
        2'd2: begin
            soclinux_interface_wdata <= soclinux_litedramnativeport1_wdata_payload_data;
            soclinux_interface_wdata_we <= soclinux_litedramnativeport1_wdata_payload_we;
        end
        3'd4: begin
            soclinux_interface_wdata <= soclinux_litedramnativeport2_wdata_payload_data;
            soclinux_interface_wdata_we <= soclinux_litedramnativeport2_wdata_payload_we;
        end
        default: begin
            soclinux_interface_wdata <= 1'd0;
            soclinux_interface_wdata_we <= 1'd0;
        end
    endcase
end
assign soclinux_litedramnativeport0_rdata_payload_data = soclinux_interface_rdata;
assign soclinux_litedramnativeport1_rdata_payload_data = soclinux_interface_rdata;
assign soclinux_litedramnativeport2_rdata_payload_data = soclinux_interface_rdata;
assign soclinux_litedram_wb_cyc = soclinux_wb_sdram_cyc;
assign soclinux_litedram_wb_stb = soclinux_wb_sdram_stb;
assign soclinux_wb_sdram_ack = soclinux_litedram_wb_ack;
assign soclinux_litedram_wb_we = soclinux_wb_sdram_we;
assign soclinux_litedram_wb_cti = soclinux_wb_sdram_cti;
assign soclinux_litedram_wb_bte = soclinux_wb_sdram_bte;
assign soclinux_wb_sdram_err = soclinux_litedram_wb_err;
always @(*) begin
    soclinux_litedram_wb_adr <= 27'd0;
    soclinux_litedram_wb_dat_w <= 256'd0;
    soclinux_litedram_wb_sel <= 32'd0;
    soclinux_wb_sdram_dat_r <= 32'd0;
    case (soclinux_wb_sdram_adr[2:0])
        1'd0: begin
            soclinux_litedram_wb_adr <= soclinux_wb_sdram_adr[29:3];
            soclinux_litedram_wb_sel[3:0] <= soclinux_wb_sdram_sel;
            soclinux_litedram_wb_dat_w[31:0] <= soclinux_wb_sdram_dat_w;
            soclinux_wb_sdram_dat_r <= soclinux_litedram_wb_dat_r[31:0];
        end
        1'd1: begin
            soclinux_litedram_wb_adr <= soclinux_wb_sdram_adr[29:3];
            soclinux_litedram_wb_sel[7:4] <= soclinux_wb_sdram_sel;
            soclinux_litedram_wb_dat_w[63:32] <= soclinux_wb_sdram_dat_w;
            soclinux_wb_sdram_dat_r <= soclinux_litedram_wb_dat_r[63:32];
        end
        2'd2: begin
            soclinux_litedram_wb_adr <= soclinux_wb_sdram_adr[29:3];
            soclinux_litedram_wb_sel[11:8] <= soclinux_wb_sdram_sel;
            soclinux_litedram_wb_dat_w[95:64] <= soclinux_wb_sdram_dat_w;
            soclinux_wb_sdram_dat_r <= soclinux_litedram_wb_dat_r[95:64];
        end
        2'd3: begin
            soclinux_litedram_wb_adr <= soclinux_wb_sdram_adr[29:3];
            soclinux_litedram_wb_sel[15:12] <= soclinux_wb_sdram_sel;
            soclinux_litedram_wb_dat_w[127:96] <= soclinux_wb_sdram_dat_w;
            soclinux_wb_sdram_dat_r <= soclinux_litedram_wb_dat_r[127:96];
        end
        3'd4: begin
            soclinux_litedram_wb_adr <= soclinux_wb_sdram_adr[29:3];
            soclinux_litedram_wb_sel[19:16] <= soclinux_wb_sdram_sel;
            soclinux_litedram_wb_dat_w[159:128] <= soclinux_wb_sdram_dat_w;
            soclinux_wb_sdram_dat_r <= soclinux_litedram_wb_dat_r[159:128];
        end
        3'd5: begin
            soclinux_litedram_wb_adr <= soclinux_wb_sdram_adr[29:3];
            soclinux_litedram_wb_sel[23:20] <= soclinux_wb_sdram_sel;
            soclinux_litedram_wb_dat_w[191:160] <= soclinux_wb_sdram_dat_w;
            soclinux_wb_sdram_dat_r <= soclinux_litedram_wb_dat_r[191:160];
        end
        3'd6: begin
            soclinux_litedram_wb_adr <= soclinux_wb_sdram_adr[29:3];
            soclinux_litedram_wb_sel[27:24] <= soclinux_wb_sdram_sel;
            soclinux_litedram_wb_dat_w[223:192] <= soclinux_wb_sdram_dat_w;
            soclinux_wb_sdram_dat_r <= soclinux_litedram_wb_dat_r[223:192];
        end
        3'd7: begin
            soclinux_litedram_wb_adr <= soclinux_wb_sdram_adr[29:3];
            soclinux_litedram_wb_sel[31:28] <= soclinux_wb_sdram_sel;
            soclinux_litedram_wb_dat_w[255:224] <= soclinux_wb_sdram_dat_w;
            soclinux_wb_sdram_dat_r <= soclinux_litedram_wb_dat_r[255:224];
        end
    endcase
end
assign soclinux_litedramnativeport2_cmd_payload_addr = (soclinux_litedram_wb_adr - 26'd33554432);
assign soclinux_litedramnativeport2_cmd_payload_we = soclinux_litedram_wb_we;
assign soclinux_litedramnativeport2_cmd_last = (~soclinux_litedram_wb_we);
assign soclinux_litedramnativeport2_flush = (~soclinux_litedram_wb_cyc);
always @(*) begin
    soclinux_litedramnativeport2_wdata_valid <= 1'd0;
    soclinux_litedramnativeport2_wdata_valid <= (soclinux_litedram_wb_stb & soclinux_litedram_wb_we);
    if (1'd1) begin
        if ((~soclinux_is_ongoing)) begin
            soclinux_litedramnativeport2_wdata_valid <= 1'd0;
        end
    end
end
assign soclinux_litedramnativeport2_wdata_payload_data = soclinux_litedram_wb_dat_w;
assign soclinux_litedramnativeport2_wdata_payload_we = soclinux_litedram_wb_sel;
assign soclinux_litedramnativeport2_rdata_ready = 1'd1;
always @(*) begin
    litedramwishbone2native_next_state <= 2'd0;
    soclinux_aborted_litedramwishbone2native_next_value <= 1'd0;
    soclinux_aborted_litedramwishbone2native_next_value_ce <= 1'd0;
    soclinux_is_ongoing <= 1'd0;
    soclinux_litedram_wb_ack <= 1'd0;
    soclinux_litedram_wb_dat_r <= 256'd0;
    soclinux_litedramnativeport2_cmd_valid <= 1'd0;
    litedramwishbone2native_next_state <= litedramwishbone2native_state;
    case (litedramwishbone2native_state)
        1'd1: begin
            soclinux_is_ongoing <= 1'd1;
            soclinux_aborted_litedramwishbone2native_next_value <= ((~soclinux_litedram_wb_cyc) | soclinux_aborted);
            soclinux_aborted_litedramwishbone2native_next_value_ce <= 1'd1;
            if ((soclinux_litedramnativeport2_wdata_valid & soclinux_litedramnativeport2_wdata_ready)) begin
                soclinux_litedram_wb_ack <= (soclinux_litedram_wb_cyc & (~soclinux_aborted));
                litedramwishbone2native_next_state <= 1'd0;
            end
        end
        2'd2: begin
            soclinux_aborted_litedramwishbone2native_next_value <= ((~soclinux_litedram_wb_cyc) | soclinux_aborted);
            soclinux_aborted_litedramwishbone2native_next_value_ce <= 1'd1;
            if (soclinux_litedramnativeport2_rdata_valid) begin
                soclinux_litedram_wb_ack <= (soclinux_litedram_wb_cyc & (~soclinux_aborted));
                soclinux_litedram_wb_dat_r <= soclinux_litedramnativeport2_rdata_payload_data;
                litedramwishbone2native_next_state <= 1'd0;
            end
        end
        default: begin
            soclinux_litedramnativeport2_cmd_valid <= (soclinux_litedram_wb_cyc & soclinux_litedram_wb_stb);
            if (((soclinux_litedramnativeport2_cmd_valid & soclinux_litedramnativeport2_cmd_ready) & soclinux_litedram_wb_we)) begin
                litedramwishbone2native_next_state <= 1'd1;
            end
            if (((soclinux_litedramnativeport2_cmd_valid & soclinux_litedramnativeport2_cmd_ready) & (~soclinux_litedram_wb_we))) begin
                litedramwishbone2native_next_state <= 2'd2;
            end
            soclinux_aborted_litedramwishbone2native_next_value <= 1'd0;
            soclinux_aborted_litedramwishbone2native_next_value_ce <= 1'd1;
        end
    endcase
end
assign leds_wait = (~leds_done);
always @(*) begin
    leds_leds <= 8'd0;
    if ((leds_mode == 1'd1)) begin
        leds_leds <= leds_storage;
    end else begin
        leds_leds <= leds_chaser;
    end
end
assign {user_led7, user_led6, user_led5, user_led4, user_led3, user_led2, user_led1, user_led0} = (leds_leds ^ 1'd0);
assign leds_done = (leds_count == 1'd0);
assign card_detect_status0 = 1'd0;
assign sdpads_clk = ((((init_pads_out_payload_clk | cmdw_pads_out_payload_clk) | cmdr_pads_out_payload_clk) | dataw_pads_out_payload_clk) | datar_pads_out_payload_clk);
assign sdpads_cmd_oe = ((((init_pads_out_payload_cmd_oe | cmdw_pads_out_payload_cmd_oe) | cmdr_pads_out_payload_cmd_oe) | dataw_pads_out_payload_cmd_oe) | datar_pads_out_payload_cmd_oe);
assign sdpads_cmd_o = ((((init_pads_out_payload_cmd_o | cmdw_pads_out_payload_cmd_o) | cmdr_pads_out_payload_cmd_o) | dataw_pads_out_payload_cmd_o) | datar_pads_out_payload_cmd_o);
assign sdpads_data_oe = ((((init_pads_out_payload_data_oe | cmdw_pads_out_payload_data_oe) | cmdr_pads_out_payload_data_oe) | dataw_pads_out_payload_data_oe) | datar_pads_out_payload_data_oe);
assign sdpads_data_o = ((((init_pads_out_payload_data_o | cmdw_pads_out_payload_data_o) | cmdr_pads_out_payload_data_o) | dataw_pads_out_payload_data_o) | datar_pads_out_payload_data_o);
assign init_pads_out_ready = clocker_ce;
assign cmdw_pads_out_ready = clocker_ce;
assign cmdr_pads_out_ready = clocker_ce;
assign dataw_pads_out_ready = clocker_ce;
assign datar_pads_out_ready = clocker_ce;
assign clocker_clk_en = sdpads_clk;
assign init_pads_in_valid = sdpads_data_i_ce;
assign init_pads_in_payload_cmd_i = sdpads_cmd_i;
assign init_pads_in_payload_data_i = sdpads_data_i;
assign cmdw_pads_in_valid = sdpads_data_i_ce;
assign cmdw_pads_in_payload_cmd_i = sdpads_cmd_i;
assign cmdw_pads_in_payload_data_i = sdpads_data_i;
assign cmdr_pads_in_pads_in_valid = sdpads_data_i_ce;
assign cmdr_pads_in_pads_in_payload_cmd_i = sdpads_cmd_i;
assign cmdr_pads_in_pads_in_payload_data_i = sdpads_data_i;
assign dataw_pads_in_pads_in_valid = sdpads_data_i_ce;
assign dataw_pads_in_pads_in_payload_cmd_i = sdpads_cmd_i;
assign dataw_pads_in_pads_in_payload_data_i = sdpads_data_i;
assign datar_pads_in_pads_in_valid = sdpads_data_i_ce;
assign datar_pads_in_pads_in_payload_cmd_i = sdpads_cmd_i;
assign datar_pads_in_pads_in_payload_data_i = sdpads_data_i;
assign clocker_stop = (dataw_stop | datar_stop);
assign clocker_ce = (clocker_clk1 & (~clocker_clk_d));
always @(*) begin
    clocker_ce_latched <= 1'd0;
    if (clocker_clk_d) begin
        clocker_ce_latched <= clocker_clk_en;
    end else begin
        clocker_ce_latched <= clocker_ce_delayed;
    end
end
assign clocker_clk0 = ((~clocker_clk1) & clocker_ce_latched);
always @(*) begin
    init_count_sdphyinit_next_value <= 8'd0;
    init_count_sdphyinit_next_value_ce <= 1'd0;
    init_pads_out_payload_clk <= 1'd0;
    init_pads_out_payload_cmd_o <= 1'd0;
    init_pads_out_payload_cmd_oe <= 1'd0;
    init_pads_out_payload_data_o <= 4'd0;
    init_pads_out_payload_data_oe <= 1'd0;
    sdphyinit_next_state <= 1'd0;
    sdphyinit_next_state <= sdphyinit_state;
    case (sdphyinit_state)
        1'd1: begin
            init_pads_out_payload_clk <= 1'd1;
            init_pads_out_payload_cmd_oe <= 1'd1;
            init_pads_out_payload_cmd_o <= 1'd1;
            init_pads_out_payload_data_oe <= 1'd1;
            init_pads_out_payload_data_o <= 4'd15;
            if (init_pads_out_ready) begin
                init_count_sdphyinit_next_value <= (init_count + 1'd1);
                init_count_sdphyinit_next_value_ce <= 1'd1;
                if ((init_count == 7'd79)) begin
                    sdphyinit_next_state <= 1'd0;
                end
            end
        end
        default: begin
            init_count_sdphyinit_next_value <= 1'd0;
            init_count_sdphyinit_next_value_ce <= 1'd1;
            if (init_initialize_re) begin
                sdphyinit_next_state <= 1'd1;
            end
        end
    endcase
end
always @(*) begin
    cmdw_count_sdphycmdw_next_value <= 8'd0;
    cmdw_count_sdphycmdw_next_value_ce <= 1'd0;
    cmdw_done <= 1'd0;
    cmdw_pads_out_payload_clk <= 1'd0;
    cmdw_pads_out_payload_cmd_o <= 1'd0;
    cmdw_pads_out_payload_cmd_oe <= 1'd0;
    cmdw_sink_ready <= 1'd0;
    sdphycmdw_next_state <= 2'd0;
    sdphycmdw_next_state <= sdphycmdw_state;
    case (sdphycmdw_state)
        1'd1: begin
            cmdw_pads_out_payload_clk <= 1'd1;
            cmdw_pads_out_payload_cmd_oe <= 1'd1;
            case (cmdw_count)
                1'd0: begin
                    cmdw_pads_out_payload_cmd_o <= cmdw_sink_payload_data[7];
                end
                1'd1: begin
                    cmdw_pads_out_payload_cmd_o <= cmdw_sink_payload_data[6];
                end
                2'd2: begin
                    cmdw_pads_out_payload_cmd_o <= cmdw_sink_payload_data[5];
                end
                2'd3: begin
                    cmdw_pads_out_payload_cmd_o <= cmdw_sink_payload_data[4];
                end
                3'd4: begin
                    cmdw_pads_out_payload_cmd_o <= cmdw_sink_payload_data[3];
                end
                3'd5: begin
                    cmdw_pads_out_payload_cmd_o <= cmdw_sink_payload_data[2];
                end
                3'd6: begin
                    cmdw_pads_out_payload_cmd_o <= cmdw_sink_payload_data[1];
                end
                3'd7: begin
                    cmdw_pads_out_payload_cmd_o <= cmdw_sink_payload_data[0];
                end
            endcase
            if (cmdw_pads_out_ready) begin
                cmdw_count_sdphycmdw_next_value <= (cmdw_count + 1'd1);
                cmdw_count_sdphycmdw_next_value_ce <= 1'd1;
                if ((cmdw_count == 3'd7)) begin
                    if ((cmdw_sink_last & (cmdw_sink_payload_cmd_type == 1'd0))) begin
                        sdphycmdw_next_state <= 2'd2;
                    end else begin
                        cmdw_sink_ready <= 1'd1;
                        sdphycmdw_next_state <= 1'd0;
                    end
                end
            end
        end
        2'd2: begin
            cmdw_pads_out_payload_clk <= 1'd1;
            cmdw_pads_out_payload_cmd_oe <= 1'd1;
            cmdw_pads_out_payload_cmd_o <= 1'd1;
            if (cmdw_pads_out_ready) begin
                cmdw_count_sdphycmdw_next_value <= (cmdw_count + 1'd1);
                cmdw_count_sdphycmdw_next_value_ce <= 1'd1;
                if ((cmdw_count == 3'd7)) begin
                    cmdw_sink_ready <= 1'd1;
                    sdphycmdw_next_state <= 1'd0;
                end
            end
        end
        default: begin
            cmdw_count_sdphycmdw_next_value <= 1'd0;
            cmdw_count_sdphycmdw_next_value_ce <= 1'd1;
            if ((cmdw_sink_valid & cmdw_pads_out_ready)) begin
                sdphycmdw_next_state <= 1'd1;
            end else begin
                cmdw_done <= 1'd1;
            end
        end
    endcase
end
assign cmdr_cmdr_pads_in_valid = cmdr_pads_in_pads_in_valid;
assign cmdr_pads_in_pads_in_ready = cmdr_cmdr_pads_in_ready;
assign cmdr_cmdr_pads_in_first = cmdr_pads_in_pads_in_first;
assign cmdr_cmdr_pads_in_last = cmdr_pads_in_pads_in_last;
assign cmdr_cmdr_pads_in_payload_clk = cmdr_pads_in_pads_in_payload_clk;
assign cmdr_cmdr_pads_in_payload_cmd_i = cmdr_pads_in_pads_in_payload_cmd_i;
assign cmdr_cmdr_pads_in_payload_cmd_o = cmdr_pads_in_pads_in_payload_cmd_o;
assign cmdr_cmdr_pads_in_payload_cmd_oe = cmdr_pads_in_pads_in_payload_cmd_oe;
assign cmdr_cmdr_pads_in_payload_data_i = cmdr_pads_in_pads_in_payload_data_i;
assign cmdr_cmdr_pads_in_payload_data_o = cmdr_pads_in_pads_in_payload_data_o;
assign cmdr_cmdr_pads_in_payload_data_oe = cmdr_pads_in_pads_in_payload_data_oe;
assign cmdr_cmdr_pads_in_payload_data_i_ce = cmdr_pads_in_pads_in_payload_data_i_ce;
assign cmdr_cmdr_start = (cmdr_cmdr_pads_in_payload_cmd_i == 1'd0);
assign cmdr_cmdr_converter_converter_sink_valid = (cmdr_cmdr_pads_in_valid & (cmdr_cmdr_start | cmdr_cmdr_run));
assign cmdr_cmdr_converter_converter_sink_payload_data = cmdr_cmdr_pads_in_payload_cmd_i;
assign cmdr_cmdr_buf_sink_sink_valid = cmdr_cmdr_converter_source_source_valid;
assign cmdr_cmdr_converter_source_source_ready = cmdr_cmdr_buf_sink_sink_ready;
assign cmdr_cmdr_buf_sink_sink_first = cmdr_cmdr_converter_source_source_first;
assign cmdr_cmdr_buf_sink_sink_last = cmdr_cmdr_converter_source_source_last;
assign cmdr_cmdr_buf_sink_sink_payload_data = cmdr_cmdr_converter_source_source_payload_data;
assign cmdr_cmdr_source_valid = cmdr_cmdr_buf_source_source_valid;
assign cmdr_cmdr_buf_source_source_ready = cmdr_cmdr_source_ready;
assign cmdr_cmdr_source_first = cmdr_cmdr_buf_source_source_first;
assign cmdr_cmdr_source_last = cmdr_cmdr_buf_source_source_last;
assign cmdr_cmdr_source_payload_data = cmdr_cmdr_buf_source_source_payload_data;
assign cmdr_cmdr_converter_source_source_valid = cmdr_cmdr_converter_converter_source_valid;
assign cmdr_cmdr_converter_converter_source_ready = cmdr_cmdr_converter_source_source_ready;
assign cmdr_cmdr_converter_source_source_first = cmdr_cmdr_converter_converter_source_first;
assign cmdr_cmdr_converter_source_source_last = cmdr_cmdr_converter_converter_source_last;
assign cmdr_cmdr_converter_source_source_payload_data = cmdr_cmdr_converter_converter_source_payload_data;
assign cmdr_cmdr_converter_converter_sink_ready = ((~cmdr_cmdr_converter_converter_strobe_all) | cmdr_cmdr_converter_converter_source_ready);
assign cmdr_cmdr_converter_converter_source_valid = cmdr_cmdr_converter_converter_strobe_all;
assign cmdr_cmdr_converter_converter_load_part = (cmdr_cmdr_converter_converter_sink_valid & cmdr_cmdr_converter_converter_sink_ready);
assign cmdr_cmdr_buf_pipe_valid_sink_ready = ((~cmdr_cmdr_buf_pipe_valid_source_valid) | cmdr_cmdr_buf_pipe_valid_source_ready);
assign cmdr_cmdr_buf_pipe_valid_sink_valid = cmdr_cmdr_buf_sink_sink_valid;
assign cmdr_cmdr_buf_sink_sink_ready = cmdr_cmdr_buf_pipe_valid_sink_ready;
assign cmdr_cmdr_buf_pipe_valid_sink_first = cmdr_cmdr_buf_sink_sink_first;
assign cmdr_cmdr_buf_pipe_valid_sink_last = cmdr_cmdr_buf_sink_sink_last;
assign cmdr_cmdr_buf_pipe_valid_sink_payload_data = cmdr_cmdr_buf_sink_sink_payload_data;
assign cmdr_cmdr_buf_source_source_valid = cmdr_cmdr_buf_pipe_valid_source_valid;
assign cmdr_cmdr_buf_pipe_valid_source_ready = cmdr_cmdr_buf_source_source_ready;
assign cmdr_cmdr_buf_source_source_first = cmdr_cmdr_buf_pipe_valid_source_first;
assign cmdr_cmdr_buf_source_source_last = cmdr_cmdr_buf_pipe_valid_source_last;
assign cmdr_cmdr_buf_source_source_payload_data = cmdr_cmdr_buf_pipe_valid_source_payload_data;
always @(*) begin
    cmdr_busy_sdphycmdr_next_value2 <= 1'd0;
    cmdr_busy_sdphycmdr_next_value_ce2 <= 1'd0;
    cmdr_cmdr_reset_sdphycmdr_next_value3 <= 1'd0;
    cmdr_cmdr_reset_sdphycmdr_next_value_ce3 <= 1'd0;
    cmdr_cmdr_source_ready <= 1'd0;
    cmdr_count_sdphycmdr_next_value1 <= 8'd0;
    cmdr_count_sdphycmdr_next_value_ce1 <= 1'd0;
    cmdr_pads_out_payload_clk <= 1'd0;
    cmdr_pads_out_payload_cmd_o <= 1'd0;
    cmdr_pads_out_payload_cmd_oe <= 1'd0;
    cmdr_sink_ready <= 1'd0;
    cmdr_source_source_last <= 1'd0;
    cmdr_source_source_payload_data <= 8'd0;
    cmdr_source_source_payload_status <= 3'd0;
    cmdr_source_source_valid <= 1'd0;
    cmdr_timeout_sdphycmdr_next_value0 <= 32'd0;
    cmdr_timeout_sdphycmdr_next_value_ce0 <= 1'd0;
    sdphycmdr_next_state <= 3'd0;
    sdphycmdr_next_state <= sdphycmdr_state;
    case (sdphycmdr_state)
        1'd1: begin
            cmdr_pads_out_payload_clk <= 1'd1;
            cmdr_cmdr_reset_sdphycmdr_next_value3 <= 1'd0;
            cmdr_cmdr_reset_sdphycmdr_next_value_ce3 <= 1'd1;
            if (cmdr_cmdr_source_valid) begin
                sdphycmdr_next_state <= 2'd2;
            end
            cmdr_timeout_sdphycmdr_next_value0 <= (cmdr_timeout - 1'd1);
            cmdr_timeout_sdphycmdr_next_value_ce0 <= 1'd1;
            if ((cmdr_timeout == 1'd0)) begin
                sdphycmdr_next_state <= 3'd5;
            end
        end
        2'd2: begin
            cmdr_pads_out_payload_clk <= 1'd1;
            cmdr_source_source_valid <= cmdr_cmdr_source_valid;
            cmdr_source_source_payload_status <= 1'd0;
            cmdr_source_source_last <= (cmdr_count == (cmdr_sink_payload_length - 1'd1));
            cmdr_source_source_payload_data <= cmdr_cmdr_source_payload_data;
            if ((cmdr_cmdr_source_valid & cmdr_source_source_ready)) begin
                cmdr_cmdr_source_ready <= 1'd1;
                cmdr_count_sdphycmdr_next_value1 <= (cmdr_count + 1'd1);
                cmdr_count_sdphycmdr_next_value_ce1 <= 1'd1;
                if (cmdr_source_source_last) begin
                    cmdr_sink_ready <= 1'd1;
                    if ((cmdr_sink_payload_cmd_type == 2'd3)) begin
                        cmdr_source_source_valid <= 1'd0;
                        cmdr_timeout_sdphycmdr_next_value0 <= 27'd125000000;
                        cmdr_timeout_sdphycmdr_next_value_ce0 <= 1'd1;
                        sdphycmdr_next_state <= 2'd3;
                    end else begin
                        if ((cmdr_sink_payload_data_type == 1'd0)) begin
                            cmdr_count_sdphycmdr_next_value1 <= 1'd0;
                            cmdr_count_sdphycmdr_next_value_ce1 <= 1'd1;
                            sdphycmdr_next_state <= 3'd4;
                        end else begin
                            sdphycmdr_next_state <= 1'd0;
                        end
                    end
                end
            end
            cmdr_timeout_sdphycmdr_next_value0 <= (cmdr_timeout - 1'd1);
            cmdr_timeout_sdphycmdr_next_value_ce0 <= 1'd1;
            if ((cmdr_timeout == 1'd0)) begin
                sdphycmdr_next_state <= 3'd5;
            end
        end
        2'd3: begin
            cmdr_pads_out_payload_clk <= 1'd1;
            if ((cmdr_pads_in_pads_in_valid & cmdr_pads_in_pads_in_payload_data_i[0])) begin
                cmdr_busy_sdphycmdr_next_value2 <= 1'd0;
                cmdr_busy_sdphycmdr_next_value_ce2 <= 1'd1;
            end
            if ((~cmdr_busy)) begin
                cmdr_source_source_valid <= 1'd1;
                cmdr_source_source_last <= 1'd1;
                cmdr_source_source_payload_status <= 1'd0;
                if (cmdr_source_source_ready) begin
                    cmdr_count_sdphycmdr_next_value1 <= 1'd0;
                    cmdr_count_sdphycmdr_next_value_ce1 <= 1'd1;
                    sdphycmdr_next_state <= 3'd4;
                end
            end
            cmdr_timeout_sdphycmdr_next_value0 <= (cmdr_timeout - 1'd1);
            cmdr_timeout_sdphycmdr_next_value_ce0 <= 1'd1;
            if ((cmdr_timeout == 1'd0)) begin
                sdphycmdr_next_state <= 3'd5;
            end
        end
        3'd4: begin
            cmdr_pads_out_payload_clk <= 1'd1;
            cmdr_pads_out_payload_cmd_oe <= 1'd1;
            cmdr_pads_out_payload_cmd_o <= 1'd1;
            if (cmdr_pads_out_ready) begin
                cmdr_count_sdphycmdr_next_value1 <= (cmdr_count + 1'd1);
                cmdr_count_sdphycmdr_next_value_ce1 <= 1'd1;
                if ((cmdr_count == 3'd7)) begin
                    sdphycmdr_next_state <= 1'd0;
                end
            end
        end
        3'd5: begin
            cmdr_sink_ready <= 1'd1;
            cmdr_source_source_valid <= 1'd1;
            cmdr_source_source_last <= 1'd1;
            cmdr_source_source_payload_status <= 1'd1;
            if (cmdr_source_source_ready) begin
                sdphycmdr_next_state <= 1'd0;
            end
        end
        default: begin
            cmdr_timeout_sdphycmdr_next_value0 <= 27'd125000000;
            cmdr_timeout_sdphycmdr_next_value_ce0 <= 1'd1;
            cmdr_count_sdphycmdr_next_value1 <= 1'd0;
            cmdr_count_sdphycmdr_next_value_ce1 <= 1'd1;
            cmdr_busy_sdphycmdr_next_value2 <= 1'd1;
            cmdr_busy_sdphycmdr_next_value_ce2 <= 1'd1;
            if (((cmdr_sink_valid & cmdr_pads_out_ready) & cmdw_done)) begin
                cmdr_cmdr_reset_sdphycmdr_next_value3 <= 1'd1;
                cmdr_cmdr_reset_sdphycmdr_next_value_ce3 <= 1'd1;
                sdphycmdr_next_state <= 1'd1;
            end
        end
    endcase
end
assign dataw_accepted0 = dataw_accepted1;
assign dataw_crc_error0 = dataw_crc_error1;
assign dataw_write_error0 = dataw_write_error1;
assign dataw_crc_pads_in_valid = dataw_pads_in_pads_in_valid;
assign dataw_crc_pads_in_ready = dataw_pads_in_pads_in_ready;
assign dataw_crc_pads_in_first = dataw_pads_in_pads_in_first;
assign dataw_crc_pads_in_last = dataw_pads_in_pads_in_last;
assign dataw_crc_pads_in_payload_clk = dataw_pads_in_pads_in_payload_clk;
assign dataw_crc_pads_in_payload_cmd_i = dataw_pads_in_pads_in_payload_cmd_i;
assign dataw_crc_pads_in_payload_cmd_o = dataw_pads_in_pads_in_payload_cmd_o;
assign dataw_crc_pads_in_payload_cmd_oe = dataw_pads_in_pads_in_payload_cmd_oe;
assign dataw_crc_pads_in_payload_data_i = dataw_pads_in_pads_in_payload_data_i;
assign dataw_crc_pads_in_payload_data_o = dataw_pads_in_pads_in_payload_data_o;
assign dataw_crc_pads_in_payload_data_oe = dataw_pads_in_pads_in_payload_data_oe;
assign dataw_crc_pads_in_payload_data_i_ce = dataw_pads_in_pads_in_payload_data_i_ce;
assign dataw_crc_start = (dataw_crc_pads_in_payload_data_i[0] == 1'd0);
assign dataw_crc_converter_converter_sink_valid = (dataw_crc_pads_in_valid & dataw_crc_run);
assign dataw_crc_converter_converter_sink_payload_data = dataw_crc_pads_in_payload_data_i[0];
assign dataw_crc_buf_sink_sink_valid = dataw_crc_converter_source_source_valid;
assign dataw_crc_converter_source_source_ready = dataw_crc_buf_sink_sink_ready;
assign dataw_crc_buf_sink_sink_first = dataw_crc_converter_source_source_first;
assign dataw_crc_buf_sink_sink_last = dataw_crc_converter_source_source_last;
assign dataw_crc_buf_sink_sink_payload_data = dataw_crc_converter_source_source_payload_data;
assign dataw_crc_source_valid = dataw_crc_buf_source_source_valid;
assign dataw_crc_buf_source_source_ready = dataw_crc_source_ready;
assign dataw_crc_source_first = dataw_crc_buf_source_source_first;
assign dataw_crc_source_last = dataw_crc_buf_source_source_last;
assign dataw_crc_source_payload_data = dataw_crc_buf_source_source_payload_data;
assign dataw_crc_converter_source_source_valid = dataw_crc_converter_converter_source_valid;
assign dataw_crc_converter_converter_source_ready = dataw_crc_converter_source_source_ready;
assign dataw_crc_converter_source_source_first = dataw_crc_converter_converter_source_first;
assign dataw_crc_converter_source_source_last = dataw_crc_converter_converter_source_last;
assign dataw_crc_converter_source_source_payload_data = dataw_crc_converter_converter_source_payload_data;
assign dataw_crc_converter_converter_sink_ready = ((~dataw_crc_converter_converter_strobe_all) | dataw_crc_converter_converter_source_ready);
assign dataw_crc_converter_converter_source_valid = dataw_crc_converter_converter_strobe_all;
assign dataw_crc_converter_converter_load_part = (dataw_crc_converter_converter_sink_valid & dataw_crc_converter_converter_sink_ready);
assign dataw_crc_buf_pipe_valid_sink_ready = ((~dataw_crc_buf_pipe_valid_source_valid) | dataw_crc_buf_pipe_valid_source_ready);
assign dataw_crc_buf_pipe_valid_sink_valid = dataw_crc_buf_sink_sink_valid;
assign dataw_crc_buf_sink_sink_ready = dataw_crc_buf_pipe_valid_sink_ready;
assign dataw_crc_buf_pipe_valid_sink_first = dataw_crc_buf_sink_sink_first;
assign dataw_crc_buf_pipe_valid_sink_last = dataw_crc_buf_sink_sink_last;
assign dataw_crc_buf_pipe_valid_sink_payload_data = dataw_crc_buf_sink_sink_payload_data;
assign dataw_crc_buf_source_source_valid = dataw_crc_buf_pipe_valid_source_valid;
assign dataw_crc_buf_pipe_valid_source_ready = dataw_crc_buf_source_source_ready;
assign dataw_crc_buf_source_source_first = dataw_crc_buf_pipe_valid_source_first;
assign dataw_crc_buf_source_source_last = dataw_crc_buf_pipe_valid_source_last;
assign dataw_crc_buf_source_source_payload_data = dataw_crc_buf_pipe_valid_source_payload_data;
always @(*) begin
    dataw_accepted1_sdphydataw_next_value0 <= 1'd0;
    dataw_accepted1_sdphydataw_next_value_ce0 <= 1'd0;
    dataw_count_sdphydataw_next_value3 <= 8'd0;
    dataw_count_sdphydataw_next_value_ce3 <= 1'd0;
    dataw_crc_error1_sdphydataw_next_value1 <= 1'd0;
    dataw_crc_error1_sdphydataw_next_value_ce1 <= 1'd0;
    dataw_crc_reset <= 1'd0;
    dataw_pads_out_payload_clk <= 1'd0;
    dataw_pads_out_payload_cmd_o <= 1'd0;
    dataw_pads_out_payload_cmd_oe <= 1'd0;
    dataw_pads_out_payload_data_o <= 4'd0;
    dataw_pads_out_payload_data_oe <= 1'd0;
    dataw_sink_ready <= 1'd0;
    dataw_stop <= 1'd0;
    dataw_write_error1_sdphydataw_next_value2 <= 1'd0;
    dataw_write_error1_sdphydataw_next_value_ce2 <= 1'd0;
    sdphydataw_next_state <= 3'd0;
    sdphydataw_next_state <= sdphydataw_state;
    case (sdphydataw_state)
        1'd1: begin
            dataw_pads_out_payload_clk <= 1'd1;
            dataw_pads_out_payload_cmd_oe <= 1'd1;
            dataw_pads_out_payload_cmd_o <= 1'd1;
            if (dataw_pads_out_ready) begin
                dataw_count_sdphydataw_next_value3 <= (dataw_count + 1'd1);
                dataw_count_sdphydataw_next_value_ce3 <= 1'd1;
                if ((dataw_count == 3'd7)) begin
                    dataw_count_sdphydataw_next_value3 <= 1'd0;
                    dataw_count_sdphydataw_next_value_ce3 <= 1'd1;
                    sdphydataw_next_state <= 2'd2;
                end
            end
        end
        2'd2: begin
            dataw_pads_out_payload_clk <= 1'd1;
            dataw_pads_out_payload_data_oe <= 1'd1;
            dataw_pads_out_payload_data_o <= 1'd0;
            if (dataw_pads_out_ready) begin
                sdphydataw_next_state <= 2'd3;
            end
        end
        2'd3: begin
            dataw_stop <= (~dataw_sink_valid);
            dataw_pads_out_payload_clk <= 1'd1;
            dataw_pads_out_payload_data_oe <= 1'd1;
            case (dataw_count)
                1'd0: begin
                    dataw_pads_out_payload_data_o <= dataw_sink_payload_data[7:4];
                end
                1'd1: begin
                    dataw_pads_out_payload_data_o <= dataw_sink_payload_data[3:0];
                end
            endcase
            if (dataw_pads_out_ready) begin
                dataw_count_sdphydataw_next_value3 <= (dataw_count + 1'd1);
                dataw_count_sdphydataw_next_value_ce3 <= 1'd1;
                if ((dataw_count == 1'd1)) begin
                    dataw_count_sdphydataw_next_value3 <= 1'd0;
                    dataw_count_sdphydataw_next_value_ce3 <= 1'd1;
                    if (dataw_sink_last) begin
                        sdphydataw_next_state <= 3'd4;
                    end else begin
                        dataw_sink_ready <= 1'd1;
                    end
                end
            end
        end
        3'd4: begin
            dataw_pads_out_payload_clk <= 1'd1;
            dataw_pads_out_payload_data_oe <= 1'd1;
            dataw_pads_out_payload_data_o <= 4'd15;
            if (dataw_pads_out_ready) begin
                dataw_crc_reset <= 1'd1;
                sdphydataw_next_state <= 3'd5;
            end
        end
        3'd5: begin
            dataw_pads_out_payload_clk <= 1'd1;
            if (dataw_crc_source_valid) begin
                dataw_accepted1_sdphydataw_next_value0 <= (dataw_crc_source_payload_data[7:5] == 2'd2);
                dataw_accepted1_sdphydataw_next_value_ce0 <= 1'd1;
                dataw_crc_error1_sdphydataw_next_value1 <= (dataw_crc_source_payload_data[7:5] == 3'd5);
                dataw_crc_error1_sdphydataw_next_value_ce1 <= 1'd1;
                dataw_write_error1_sdphydataw_next_value2 <= (dataw_crc_source_payload_data[7:5] == 3'd6);
                dataw_write_error1_sdphydataw_next_value_ce2 <= 1'd1;
                sdphydataw_next_state <= 3'd6;
            end
        end
        3'd6: begin
            dataw_pads_out_payload_clk <= 1'd1;
            if ((dataw_pads_in_pads_in_valid & dataw_pads_in_pads_in_payload_data_i[0])) begin
                dataw_sink_ready <= 1'd1;
                sdphydataw_next_state <= 1'd0;
            end
        end
        default: begin
            dataw_accepted1_sdphydataw_next_value0 <= 1'd0;
            dataw_accepted1_sdphydataw_next_value_ce0 <= 1'd1;
            dataw_crc_error1_sdphydataw_next_value1 <= 1'd0;
            dataw_crc_error1_sdphydataw_next_value_ce1 <= 1'd1;
            dataw_write_error1_sdphydataw_next_value2 <= 1'd0;
            dataw_write_error1_sdphydataw_next_value_ce2 <= 1'd1;
            dataw_count_sdphydataw_next_value3 <= 1'd0;
            dataw_count_sdphydataw_next_value_ce3 <= 1'd1;
            if ((dataw_sink_valid & dataw_pads_out_ready)) begin
                sdphydataw_next_state <= 1'd1;
            end
        end
    endcase
end
assign datar_datar_pads_in_valid = datar_pads_in_pads_in_valid;
assign datar_pads_in_pads_in_ready = datar_datar_pads_in_ready;
assign datar_datar_pads_in_first = datar_pads_in_pads_in_first;
assign datar_datar_pads_in_last = datar_pads_in_pads_in_last;
assign datar_datar_pads_in_payload_clk = datar_pads_in_pads_in_payload_clk;
assign datar_datar_pads_in_payload_cmd_i = datar_pads_in_pads_in_payload_cmd_i;
assign datar_datar_pads_in_payload_cmd_o = datar_pads_in_pads_in_payload_cmd_o;
assign datar_datar_pads_in_payload_cmd_oe = datar_pads_in_pads_in_payload_cmd_oe;
assign datar_datar_pads_in_payload_data_i = datar_pads_in_pads_in_payload_data_i;
assign datar_datar_pads_in_payload_data_o = datar_pads_in_pads_in_payload_data_o;
assign datar_datar_pads_in_payload_data_oe = datar_pads_in_pads_in_payload_data_oe;
assign datar_datar_pads_in_payload_data_i_ce = datar_pads_in_pads_in_payload_data_i_ce;
assign datar_datar_start = (datar_datar_pads_in_payload_data_i[3:0] == 1'd0);
assign datar_datar_converter_converter_sink_valid = (datar_datar_pads_in_valid & datar_datar_run);
assign datar_datar_converter_converter_sink_payload_data = datar_datar_pads_in_payload_data_i[3:0];
assign datar_datar_buf_sink_sink_valid = datar_datar_converter_source_source_valid;
assign datar_datar_converter_source_source_ready = datar_datar_buf_sink_sink_ready;
assign datar_datar_buf_sink_sink_first = datar_datar_converter_source_source_first;
assign datar_datar_buf_sink_sink_last = datar_datar_converter_source_source_last;
assign datar_datar_buf_sink_sink_payload_data = datar_datar_converter_source_source_payload_data;
assign datar_datar_source_valid = datar_datar_buf_source_source_valid;
assign datar_datar_buf_source_source_ready = datar_datar_source_ready;
assign datar_datar_source_first = datar_datar_buf_source_source_first;
assign datar_datar_source_last = datar_datar_buf_source_source_last;
assign datar_datar_source_payload_data = datar_datar_buf_source_source_payload_data;
assign datar_datar_converter_source_source_valid = datar_datar_converter_converter_source_valid;
assign datar_datar_converter_converter_source_ready = datar_datar_converter_source_source_ready;
assign datar_datar_converter_source_source_first = datar_datar_converter_converter_source_first;
assign datar_datar_converter_source_source_last = datar_datar_converter_converter_source_last;
assign datar_datar_converter_source_source_payload_data = datar_datar_converter_converter_source_payload_data;
assign datar_datar_converter_converter_sink_ready = ((~datar_datar_converter_converter_strobe_all) | datar_datar_converter_converter_source_ready);
assign datar_datar_converter_converter_source_valid = datar_datar_converter_converter_strobe_all;
assign datar_datar_converter_converter_load_part = (datar_datar_converter_converter_sink_valid & datar_datar_converter_converter_sink_ready);
assign datar_datar_buf_pipe_valid_sink_ready = ((~datar_datar_buf_pipe_valid_source_valid) | datar_datar_buf_pipe_valid_source_ready);
assign datar_datar_buf_pipe_valid_sink_valid = datar_datar_buf_sink_sink_valid;
assign datar_datar_buf_sink_sink_ready = datar_datar_buf_pipe_valid_sink_ready;
assign datar_datar_buf_pipe_valid_sink_first = datar_datar_buf_sink_sink_first;
assign datar_datar_buf_pipe_valid_sink_last = datar_datar_buf_sink_sink_last;
assign datar_datar_buf_pipe_valid_sink_payload_data = datar_datar_buf_sink_sink_payload_data;
assign datar_datar_buf_source_source_valid = datar_datar_buf_pipe_valid_source_valid;
assign datar_datar_buf_pipe_valid_source_ready = datar_datar_buf_source_source_ready;
assign datar_datar_buf_source_source_first = datar_datar_buf_pipe_valid_source_first;
assign datar_datar_buf_source_source_last = datar_datar_buf_pipe_valid_source_last;
assign datar_datar_buf_source_source_payload_data = datar_datar_buf_pipe_valid_source_payload_data;
always @(*) begin
    datar_count_sdphydatar_next_value0 <= 10'd0;
    datar_count_sdphydatar_next_value_ce0 <= 1'd0;
    datar_datar_reset_sdphydatar_next_value2 <= 1'd0;
    datar_datar_reset_sdphydatar_next_value_ce2 <= 1'd0;
    datar_datar_source_ready <= 1'd0;
    datar_pads_out_payload_clk <= 1'd0;
    datar_sink_ready <= 1'd0;
    datar_source_source_first <= 1'd0;
    datar_source_source_last <= 1'd0;
    datar_source_source_payload_data <= 8'd0;
    datar_source_source_payload_status <= 3'd0;
    datar_source_source_valid <= 1'd0;
    datar_stop <= 1'd0;
    datar_timeout_sdphydatar_next_value1 <= 32'd0;
    datar_timeout_sdphydatar_next_value_ce1 <= 1'd0;
    sdphydatar_next_state <= 3'd0;
    sdphydatar_next_state <= sdphydatar_state;
    case (sdphydatar_state)
        1'd1: begin
            datar_pads_out_payload_clk <= 1'd1;
            datar_datar_reset_sdphydatar_next_value2 <= 1'd0;
            datar_datar_reset_sdphydatar_next_value_ce2 <= 1'd1;
            datar_timeout_sdphydatar_next_value1 <= (datar_timeout - 1'd1);
            datar_timeout_sdphydatar_next_value_ce1 <= 1'd1;
            if (datar_datar_source_valid) begin
                sdphydatar_next_state <= 2'd2;
            end
            datar_timeout_sdphydatar_next_value1 <= (datar_timeout - 1'd1);
            datar_timeout_sdphydatar_next_value_ce1 <= 1'd1;
            if ((datar_timeout == 1'd0)) begin
                datar_sink_ready <= 1'd1;
                sdphydatar_next_state <= 3'd4;
            end
        end
        2'd2: begin
            datar_pads_out_payload_clk <= 1'd1;
            datar_source_source_valid <= datar_datar_source_valid;
            datar_source_source_payload_status <= 1'd0;
            datar_source_source_first <= (datar_count == 1'd0);
            datar_source_source_last <= (datar_count == ((datar_sink_payload_block_length + 4'd8) - 1'd1));
            datar_source_source_payload_data <= datar_datar_source_payload_data;
            if (datar_source_source_valid) begin
                if (datar_source_source_ready) begin
                    datar_datar_source_ready <= 1'd1;
                    datar_count_sdphydatar_next_value0 <= (datar_count + 1'd1);
                    datar_count_sdphydatar_next_value_ce0 <= 1'd1;
                    if (datar_source_source_last) begin
                        datar_sink_ready <= 1'd1;
                        if (datar_sink_last) begin
                            datar_count_sdphydatar_next_value0 <= 1'd0;
                            datar_count_sdphydatar_next_value_ce0 <= 1'd1;
                            sdphydatar_next_state <= 2'd3;
                        end else begin
                            sdphydatar_next_state <= 1'd0;
                        end
                    end
                end else begin
                    datar_stop <= 1'd1;
                end
            end
            datar_timeout_sdphydatar_next_value1 <= (datar_timeout - 1'd1);
            datar_timeout_sdphydatar_next_value_ce1 <= 1'd1;
            if ((datar_timeout == 1'd0)) begin
                datar_sink_ready <= 1'd1;
                sdphydatar_next_state <= 3'd4;
            end
        end
        2'd3: begin
            datar_pads_out_payload_clk <= 1'd1;
            if (datar_pads_out_ready) begin
                datar_count_sdphydatar_next_value0 <= (datar_count + 1'd1);
                datar_count_sdphydatar_next_value_ce0 <= 1'd1;
                if ((datar_count == 6'd39)) begin
                    sdphydatar_next_state <= 1'd0;
                end
            end
        end
        3'd4: begin
            datar_source_source_valid <= 1'd1;
            datar_source_source_payload_status <= 1'd1;
            datar_source_source_last <= 1'd1;
            if (datar_source_source_ready) begin
                sdphydatar_next_state <= 1'd0;
            end
        end
        default: begin
            datar_count_sdphydatar_next_value0 <= 1'd0;
            datar_count_sdphydatar_next_value_ce0 <= 1'd1;
            if ((datar_sink_valid & datar_pads_out_ready)) begin
                datar_pads_out_payload_clk <= 1'd1;
                datar_timeout_sdphydatar_next_value1 <= 32'd125000000;
                datar_timeout_sdphydatar_next_value_ce1 <= 1'd1;
                datar_count_sdphydatar_next_value0 <= 1'd0;
                datar_count_sdphydatar_next_value_ce0 <= 1'd1;
                datar_datar_reset_sdphydatar_next_value2 <= 1'd1;
                datar_datar_reset_sdphydatar_next_value_ce2 <= 1'd1;
                sdphydatar_next_state <= 1'd1;
            end
        end
    endcase
end
assign sdpads_data_i_ce = (clk_i & (~clk_i_d));
assign sdcard_core_crc16_inserter_sink_valid = sdcard_core_sink_sink_valid0;
assign sdcard_core_sink_sink_ready0 = sdcard_core_crc16_inserter_sink_ready;
assign sdcard_core_crc16_inserter_sink_first = sdcard_core_sink_sink_first0;
assign sdcard_core_crc16_inserter_sink_last = sdcard_core_sink_sink_last0;
assign sdcard_core_crc16_inserter_sink_payload_data = sdcard_core_sink_sink_payload_data0;
assign sdcard_core_source_source_valid0 = sdcard_core_source_source_valid1;
assign sdcard_core_source_source_ready1 = sdcard_core_source_source_ready0;
assign sdcard_core_source_source_first0 = sdcard_core_source_source_first1;
assign sdcard_core_source_source_last0 = sdcard_core_source_source_last1;
assign sdcard_core_source_source_payload_data0 = sdcard_core_source_source_payload_data1;
assign sdcard_core_cmd_type = sdcard_core_csrfield_cmd_type;
assign sdcard_core_data_type = sdcard_core_csrfield_data_type;
assign sdcard_core_cmd = sdcard_core_csrfield_cmd;
assign sdcard_core_csrfield_done0 = sdcard_core_cmd_done;
assign sdcard_core_csrfield_error0 = sdcard_core_cmd_error;
assign sdcard_core_csrfield_timeout0 = sdcard_core_cmd_timeout;
assign sdcard_core_csrfield_crc0 = 1'd0;
assign sdcard_core_csrfield_done1 = sdcard_core_data_done;
assign sdcard_core_csrfield_error1 = sdcard_core_data_error;
assign sdcard_core_csrfield_timeout1 = sdcard_core_data_timeout;
assign sdcard_core_csrfield_crc1 = 1'd0;
assign sdcard_core_crc7_inserter_din = {1'd0, 1'd1, sdcard_core_cmd, sdcard_core_cmd_argument_storage};
assign sdcard_core_crc7_inserter_reset = 1'd1;
assign sdcard_core_crc7_inserter_enable = 1'd1;
assign sdcard_core_crc7_inserter_reg1 = {sdcard_core_crc7_inserter_reg0[5], sdcard_core_crc7_inserter_reg0[4], sdcard_core_crc7_inserter_reg0[3], (sdcard_core_crc7_inserter_reg0[2] ^ (sdcard_core_crc7_inserter_din[39] ^ sdcard_core_crc7_inserter_reg0[6])), sdcard_core_crc7_inserter_reg0[1], sdcard_core_crc7_inserter_reg0[0], (sdcard_core_crc7_inserter_din[39] ^ sdcard_core_crc7_inserter_reg0[6])};
assign sdcard_core_crc7_inserter_reg2 = {sdcard_core_crc7_inserter_reg1[5], sdcard_core_crc7_inserter_reg1[4], sdcard_core_crc7_inserter_reg1[3], (sdcard_core_crc7_inserter_reg1[2] ^ (sdcard_core_crc7_inserter_din[38] ^ sdcard_core_crc7_inserter_reg1[6])), sdcard_core_crc7_inserter_reg1[1], sdcard_core_crc7_inserter_reg1[0], (sdcard_core_crc7_inserter_din[38] ^ sdcard_core_crc7_inserter_reg1[6])};
assign sdcard_core_crc7_inserter_reg3 = {sdcard_core_crc7_inserter_reg2[5], sdcard_core_crc7_inserter_reg2[4], sdcard_core_crc7_inserter_reg2[3], (sdcard_core_crc7_inserter_reg2[2] ^ (sdcard_core_crc7_inserter_din[37] ^ sdcard_core_crc7_inserter_reg2[6])), sdcard_core_crc7_inserter_reg2[1], sdcard_core_crc7_inserter_reg2[0], (sdcard_core_crc7_inserter_din[37] ^ sdcard_core_crc7_inserter_reg2[6])};
assign sdcard_core_crc7_inserter_reg4 = {sdcard_core_crc7_inserter_reg3[5], sdcard_core_crc7_inserter_reg3[4], sdcard_core_crc7_inserter_reg3[3], (sdcard_core_crc7_inserter_reg3[2] ^ (sdcard_core_crc7_inserter_din[36] ^ sdcard_core_crc7_inserter_reg3[6])), sdcard_core_crc7_inserter_reg3[1], sdcard_core_crc7_inserter_reg3[0], (sdcard_core_crc7_inserter_din[36] ^ sdcard_core_crc7_inserter_reg3[6])};
assign sdcard_core_crc7_inserter_reg5 = {sdcard_core_crc7_inserter_reg4[5], sdcard_core_crc7_inserter_reg4[4], sdcard_core_crc7_inserter_reg4[3], (sdcard_core_crc7_inserter_reg4[2] ^ (sdcard_core_crc7_inserter_din[35] ^ sdcard_core_crc7_inserter_reg4[6])), sdcard_core_crc7_inserter_reg4[1], sdcard_core_crc7_inserter_reg4[0], (sdcard_core_crc7_inserter_din[35] ^ sdcard_core_crc7_inserter_reg4[6])};
assign sdcard_core_crc7_inserter_reg6 = {sdcard_core_crc7_inserter_reg5[5], sdcard_core_crc7_inserter_reg5[4], sdcard_core_crc7_inserter_reg5[3], (sdcard_core_crc7_inserter_reg5[2] ^ (sdcard_core_crc7_inserter_din[34] ^ sdcard_core_crc7_inserter_reg5[6])), sdcard_core_crc7_inserter_reg5[1], sdcard_core_crc7_inserter_reg5[0], (sdcard_core_crc7_inserter_din[34] ^ sdcard_core_crc7_inserter_reg5[6])};
assign sdcard_core_crc7_inserter_reg7 = {sdcard_core_crc7_inserter_reg6[5], sdcard_core_crc7_inserter_reg6[4], sdcard_core_crc7_inserter_reg6[3], (sdcard_core_crc7_inserter_reg6[2] ^ (sdcard_core_crc7_inserter_din[33] ^ sdcard_core_crc7_inserter_reg6[6])), sdcard_core_crc7_inserter_reg6[1], sdcard_core_crc7_inserter_reg6[0], (sdcard_core_crc7_inserter_din[33] ^ sdcard_core_crc7_inserter_reg6[6])};
assign sdcard_core_crc7_inserter_reg8 = {sdcard_core_crc7_inserter_reg7[5], sdcard_core_crc7_inserter_reg7[4], sdcard_core_crc7_inserter_reg7[3], (sdcard_core_crc7_inserter_reg7[2] ^ (sdcard_core_crc7_inserter_din[32] ^ sdcard_core_crc7_inserter_reg7[6])), sdcard_core_crc7_inserter_reg7[1], sdcard_core_crc7_inserter_reg7[0], (sdcard_core_crc7_inserter_din[32] ^ sdcard_core_crc7_inserter_reg7[6])};
assign sdcard_core_crc7_inserter_reg9 = {sdcard_core_crc7_inserter_reg8[5], sdcard_core_crc7_inserter_reg8[4], sdcard_core_crc7_inserter_reg8[3], (sdcard_core_crc7_inserter_reg8[2] ^ (sdcard_core_crc7_inserter_din[31] ^ sdcard_core_crc7_inserter_reg8[6])), sdcard_core_crc7_inserter_reg8[1], sdcard_core_crc7_inserter_reg8[0], (sdcard_core_crc7_inserter_din[31] ^ sdcard_core_crc7_inserter_reg8[6])};
assign sdcard_core_crc7_inserter_reg10 = {sdcard_core_crc7_inserter_reg9[5], sdcard_core_crc7_inserter_reg9[4], sdcard_core_crc7_inserter_reg9[3], (sdcard_core_crc7_inserter_reg9[2] ^ (sdcard_core_crc7_inserter_din[30] ^ sdcard_core_crc7_inserter_reg9[6])), sdcard_core_crc7_inserter_reg9[1], sdcard_core_crc7_inserter_reg9[0], (sdcard_core_crc7_inserter_din[30] ^ sdcard_core_crc7_inserter_reg9[6])};
assign sdcard_core_crc7_inserter_reg11 = {sdcard_core_crc7_inserter_reg10[5], sdcard_core_crc7_inserter_reg10[4], sdcard_core_crc7_inserter_reg10[3], (sdcard_core_crc7_inserter_reg10[2] ^ (sdcard_core_crc7_inserter_din[29] ^ sdcard_core_crc7_inserter_reg10[6])), sdcard_core_crc7_inserter_reg10[1], sdcard_core_crc7_inserter_reg10[0], (sdcard_core_crc7_inserter_din[29] ^ sdcard_core_crc7_inserter_reg10[6])};
assign sdcard_core_crc7_inserter_reg12 = {sdcard_core_crc7_inserter_reg11[5], sdcard_core_crc7_inserter_reg11[4], sdcard_core_crc7_inserter_reg11[3], (sdcard_core_crc7_inserter_reg11[2] ^ (sdcard_core_crc7_inserter_din[28] ^ sdcard_core_crc7_inserter_reg11[6])), sdcard_core_crc7_inserter_reg11[1], sdcard_core_crc7_inserter_reg11[0], (sdcard_core_crc7_inserter_din[28] ^ sdcard_core_crc7_inserter_reg11[6])};
assign sdcard_core_crc7_inserter_reg13 = {sdcard_core_crc7_inserter_reg12[5], sdcard_core_crc7_inserter_reg12[4], sdcard_core_crc7_inserter_reg12[3], (sdcard_core_crc7_inserter_reg12[2] ^ (sdcard_core_crc7_inserter_din[27] ^ sdcard_core_crc7_inserter_reg12[6])), sdcard_core_crc7_inserter_reg12[1], sdcard_core_crc7_inserter_reg12[0], (sdcard_core_crc7_inserter_din[27] ^ sdcard_core_crc7_inserter_reg12[6])};
assign sdcard_core_crc7_inserter_reg14 = {sdcard_core_crc7_inserter_reg13[5], sdcard_core_crc7_inserter_reg13[4], sdcard_core_crc7_inserter_reg13[3], (sdcard_core_crc7_inserter_reg13[2] ^ (sdcard_core_crc7_inserter_din[26] ^ sdcard_core_crc7_inserter_reg13[6])), sdcard_core_crc7_inserter_reg13[1], sdcard_core_crc7_inserter_reg13[0], (sdcard_core_crc7_inserter_din[26] ^ sdcard_core_crc7_inserter_reg13[6])};
assign sdcard_core_crc7_inserter_reg15 = {sdcard_core_crc7_inserter_reg14[5], sdcard_core_crc7_inserter_reg14[4], sdcard_core_crc7_inserter_reg14[3], (sdcard_core_crc7_inserter_reg14[2] ^ (sdcard_core_crc7_inserter_din[25] ^ sdcard_core_crc7_inserter_reg14[6])), sdcard_core_crc7_inserter_reg14[1], sdcard_core_crc7_inserter_reg14[0], (sdcard_core_crc7_inserter_din[25] ^ sdcard_core_crc7_inserter_reg14[6])};
assign sdcard_core_crc7_inserter_reg16 = {sdcard_core_crc7_inserter_reg15[5], sdcard_core_crc7_inserter_reg15[4], sdcard_core_crc7_inserter_reg15[3], (sdcard_core_crc7_inserter_reg15[2] ^ (sdcard_core_crc7_inserter_din[24] ^ sdcard_core_crc7_inserter_reg15[6])), sdcard_core_crc7_inserter_reg15[1], sdcard_core_crc7_inserter_reg15[0], (sdcard_core_crc7_inserter_din[24] ^ sdcard_core_crc7_inserter_reg15[6])};
assign sdcard_core_crc7_inserter_reg17 = {sdcard_core_crc7_inserter_reg16[5], sdcard_core_crc7_inserter_reg16[4], sdcard_core_crc7_inserter_reg16[3], (sdcard_core_crc7_inserter_reg16[2] ^ (sdcard_core_crc7_inserter_din[23] ^ sdcard_core_crc7_inserter_reg16[6])), sdcard_core_crc7_inserter_reg16[1], sdcard_core_crc7_inserter_reg16[0], (sdcard_core_crc7_inserter_din[23] ^ sdcard_core_crc7_inserter_reg16[6])};
assign sdcard_core_crc7_inserter_reg18 = {sdcard_core_crc7_inserter_reg17[5], sdcard_core_crc7_inserter_reg17[4], sdcard_core_crc7_inserter_reg17[3], (sdcard_core_crc7_inserter_reg17[2] ^ (sdcard_core_crc7_inserter_din[22] ^ sdcard_core_crc7_inserter_reg17[6])), sdcard_core_crc7_inserter_reg17[1], sdcard_core_crc7_inserter_reg17[0], (sdcard_core_crc7_inserter_din[22] ^ sdcard_core_crc7_inserter_reg17[6])};
assign sdcard_core_crc7_inserter_reg19 = {sdcard_core_crc7_inserter_reg18[5], sdcard_core_crc7_inserter_reg18[4], sdcard_core_crc7_inserter_reg18[3], (sdcard_core_crc7_inserter_reg18[2] ^ (sdcard_core_crc7_inserter_din[21] ^ sdcard_core_crc7_inserter_reg18[6])), sdcard_core_crc7_inserter_reg18[1], sdcard_core_crc7_inserter_reg18[0], (sdcard_core_crc7_inserter_din[21] ^ sdcard_core_crc7_inserter_reg18[6])};
assign sdcard_core_crc7_inserter_reg20 = {sdcard_core_crc7_inserter_reg19[5], sdcard_core_crc7_inserter_reg19[4], sdcard_core_crc7_inserter_reg19[3], (sdcard_core_crc7_inserter_reg19[2] ^ (sdcard_core_crc7_inserter_din[20] ^ sdcard_core_crc7_inserter_reg19[6])), sdcard_core_crc7_inserter_reg19[1], sdcard_core_crc7_inserter_reg19[0], (sdcard_core_crc7_inserter_din[20] ^ sdcard_core_crc7_inserter_reg19[6])};
assign sdcard_core_crc7_inserter_reg21 = {sdcard_core_crc7_inserter_reg20[5], sdcard_core_crc7_inserter_reg20[4], sdcard_core_crc7_inserter_reg20[3], (sdcard_core_crc7_inserter_reg20[2] ^ (sdcard_core_crc7_inserter_din[19] ^ sdcard_core_crc7_inserter_reg20[6])), sdcard_core_crc7_inserter_reg20[1], sdcard_core_crc7_inserter_reg20[0], (sdcard_core_crc7_inserter_din[19] ^ sdcard_core_crc7_inserter_reg20[6])};
assign sdcard_core_crc7_inserter_reg22 = {sdcard_core_crc7_inserter_reg21[5], sdcard_core_crc7_inserter_reg21[4], sdcard_core_crc7_inserter_reg21[3], (sdcard_core_crc7_inserter_reg21[2] ^ (sdcard_core_crc7_inserter_din[18] ^ sdcard_core_crc7_inserter_reg21[6])), sdcard_core_crc7_inserter_reg21[1], sdcard_core_crc7_inserter_reg21[0], (sdcard_core_crc7_inserter_din[18] ^ sdcard_core_crc7_inserter_reg21[6])};
assign sdcard_core_crc7_inserter_reg23 = {sdcard_core_crc7_inserter_reg22[5], sdcard_core_crc7_inserter_reg22[4], sdcard_core_crc7_inserter_reg22[3], (sdcard_core_crc7_inserter_reg22[2] ^ (sdcard_core_crc7_inserter_din[17] ^ sdcard_core_crc7_inserter_reg22[6])), sdcard_core_crc7_inserter_reg22[1], sdcard_core_crc7_inserter_reg22[0], (sdcard_core_crc7_inserter_din[17] ^ sdcard_core_crc7_inserter_reg22[6])};
assign sdcard_core_crc7_inserter_reg24 = {sdcard_core_crc7_inserter_reg23[5], sdcard_core_crc7_inserter_reg23[4], sdcard_core_crc7_inserter_reg23[3], (sdcard_core_crc7_inserter_reg23[2] ^ (sdcard_core_crc7_inserter_din[16] ^ sdcard_core_crc7_inserter_reg23[6])), sdcard_core_crc7_inserter_reg23[1], sdcard_core_crc7_inserter_reg23[0], (sdcard_core_crc7_inserter_din[16] ^ sdcard_core_crc7_inserter_reg23[6])};
assign sdcard_core_crc7_inserter_reg25 = {sdcard_core_crc7_inserter_reg24[5], sdcard_core_crc7_inserter_reg24[4], sdcard_core_crc7_inserter_reg24[3], (sdcard_core_crc7_inserter_reg24[2] ^ (sdcard_core_crc7_inserter_din[15] ^ sdcard_core_crc7_inserter_reg24[6])), sdcard_core_crc7_inserter_reg24[1], sdcard_core_crc7_inserter_reg24[0], (sdcard_core_crc7_inserter_din[15] ^ sdcard_core_crc7_inserter_reg24[6])};
assign sdcard_core_crc7_inserter_reg26 = {sdcard_core_crc7_inserter_reg25[5], sdcard_core_crc7_inserter_reg25[4], sdcard_core_crc7_inserter_reg25[3], (sdcard_core_crc7_inserter_reg25[2] ^ (sdcard_core_crc7_inserter_din[14] ^ sdcard_core_crc7_inserter_reg25[6])), sdcard_core_crc7_inserter_reg25[1], sdcard_core_crc7_inserter_reg25[0], (sdcard_core_crc7_inserter_din[14] ^ sdcard_core_crc7_inserter_reg25[6])};
assign sdcard_core_crc7_inserter_reg27 = {sdcard_core_crc7_inserter_reg26[5], sdcard_core_crc7_inserter_reg26[4], sdcard_core_crc7_inserter_reg26[3], (sdcard_core_crc7_inserter_reg26[2] ^ (sdcard_core_crc7_inserter_din[13] ^ sdcard_core_crc7_inserter_reg26[6])), sdcard_core_crc7_inserter_reg26[1], sdcard_core_crc7_inserter_reg26[0], (sdcard_core_crc7_inserter_din[13] ^ sdcard_core_crc7_inserter_reg26[6])};
assign sdcard_core_crc7_inserter_reg28 = {sdcard_core_crc7_inserter_reg27[5], sdcard_core_crc7_inserter_reg27[4], sdcard_core_crc7_inserter_reg27[3], (sdcard_core_crc7_inserter_reg27[2] ^ (sdcard_core_crc7_inserter_din[12] ^ sdcard_core_crc7_inserter_reg27[6])), sdcard_core_crc7_inserter_reg27[1], sdcard_core_crc7_inserter_reg27[0], (sdcard_core_crc7_inserter_din[12] ^ sdcard_core_crc7_inserter_reg27[6])};
assign sdcard_core_crc7_inserter_reg29 = {sdcard_core_crc7_inserter_reg28[5], sdcard_core_crc7_inserter_reg28[4], sdcard_core_crc7_inserter_reg28[3], (sdcard_core_crc7_inserter_reg28[2] ^ (sdcard_core_crc7_inserter_din[11] ^ sdcard_core_crc7_inserter_reg28[6])), sdcard_core_crc7_inserter_reg28[1], sdcard_core_crc7_inserter_reg28[0], (sdcard_core_crc7_inserter_din[11] ^ sdcard_core_crc7_inserter_reg28[6])};
assign sdcard_core_crc7_inserter_reg30 = {sdcard_core_crc7_inserter_reg29[5], sdcard_core_crc7_inserter_reg29[4], sdcard_core_crc7_inserter_reg29[3], (sdcard_core_crc7_inserter_reg29[2] ^ (sdcard_core_crc7_inserter_din[10] ^ sdcard_core_crc7_inserter_reg29[6])), sdcard_core_crc7_inserter_reg29[1], sdcard_core_crc7_inserter_reg29[0], (sdcard_core_crc7_inserter_din[10] ^ sdcard_core_crc7_inserter_reg29[6])};
assign sdcard_core_crc7_inserter_reg31 = {sdcard_core_crc7_inserter_reg30[5], sdcard_core_crc7_inserter_reg30[4], sdcard_core_crc7_inserter_reg30[3], (sdcard_core_crc7_inserter_reg30[2] ^ (sdcard_core_crc7_inserter_din[9] ^ sdcard_core_crc7_inserter_reg30[6])), sdcard_core_crc7_inserter_reg30[1], sdcard_core_crc7_inserter_reg30[0], (sdcard_core_crc7_inserter_din[9] ^ sdcard_core_crc7_inserter_reg30[6])};
assign sdcard_core_crc7_inserter_reg32 = {sdcard_core_crc7_inserter_reg31[5], sdcard_core_crc7_inserter_reg31[4], sdcard_core_crc7_inserter_reg31[3], (sdcard_core_crc7_inserter_reg31[2] ^ (sdcard_core_crc7_inserter_din[8] ^ sdcard_core_crc7_inserter_reg31[6])), sdcard_core_crc7_inserter_reg31[1], sdcard_core_crc7_inserter_reg31[0], (sdcard_core_crc7_inserter_din[8] ^ sdcard_core_crc7_inserter_reg31[6])};
assign sdcard_core_crc7_inserter_reg33 = {sdcard_core_crc7_inserter_reg32[5], sdcard_core_crc7_inserter_reg32[4], sdcard_core_crc7_inserter_reg32[3], (sdcard_core_crc7_inserter_reg32[2] ^ (sdcard_core_crc7_inserter_din[7] ^ sdcard_core_crc7_inserter_reg32[6])), sdcard_core_crc7_inserter_reg32[1], sdcard_core_crc7_inserter_reg32[0], (sdcard_core_crc7_inserter_din[7] ^ sdcard_core_crc7_inserter_reg32[6])};
assign sdcard_core_crc7_inserter_reg34 = {sdcard_core_crc7_inserter_reg33[5], sdcard_core_crc7_inserter_reg33[4], sdcard_core_crc7_inserter_reg33[3], (sdcard_core_crc7_inserter_reg33[2] ^ (sdcard_core_crc7_inserter_din[6] ^ sdcard_core_crc7_inserter_reg33[6])), sdcard_core_crc7_inserter_reg33[1], sdcard_core_crc7_inserter_reg33[0], (sdcard_core_crc7_inserter_din[6] ^ sdcard_core_crc7_inserter_reg33[6])};
assign sdcard_core_crc7_inserter_reg35 = {sdcard_core_crc7_inserter_reg34[5], sdcard_core_crc7_inserter_reg34[4], sdcard_core_crc7_inserter_reg34[3], (sdcard_core_crc7_inserter_reg34[2] ^ (sdcard_core_crc7_inserter_din[5] ^ sdcard_core_crc7_inserter_reg34[6])), sdcard_core_crc7_inserter_reg34[1], sdcard_core_crc7_inserter_reg34[0], (sdcard_core_crc7_inserter_din[5] ^ sdcard_core_crc7_inserter_reg34[6])};
assign sdcard_core_crc7_inserter_reg36 = {sdcard_core_crc7_inserter_reg35[5], sdcard_core_crc7_inserter_reg35[4], sdcard_core_crc7_inserter_reg35[3], (sdcard_core_crc7_inserter_reg35[2] ^ (sdcard_core_crc7_inserter_din[4] ^ sdcard_core_crc7_inserter_reg35[6])), sdcard_core_crc7_inserter_reg35[1], sdcard_core_crc7_inserter_reg35[0], (sdcard_core_crc7_inserter_din[4] ^ sdcard_core_crc7_inserter_reg35[6])};
assign sdcard_core_crc7_inserter_reg37 = {sdcard_core_crc7_inserter_reg36[5], sdcard_core_crc7_inserter_reg36[4], sdcard_core_crc7_inserter_reg36[3], (sdcard_core_crc7_inserter_reg36[2] ^ (sdcard_core_crc7_inserter_din[3] ^ sdcard_core_crc7_inserter_reg36[6])), sdcard_core_crc7_inserter_reg36[1], sdcard_core_crc7_inserter_reg36[0], (sdcard_core_crc7_inserter_din[3] ^ sdcard_core_crc7_inserter_reg36[6])};
assign sdcard_core_crc7_inserter_reg38 = {sdcard_core_crc7_inserter_reg37[5], sdcard_core_crc7_inserter_reg37[4], sdcard_core_crc7_inserter_reg37[3], (sdcard_core_crc7_inserter_reg37[2] ^ (sdcard_core_crc7_inserter_din[2] ^ sdcard_core_crc7_inserter_reg37[6])), sdcard_core_crc7_inserter_reg37[1], sdcard_core_crc7_inserter_reg37[0], (sdcard_core_crc7_inserter_din[2] ^ sdcard_core_crc7_inserter_reg37[6])};
assign sdcard_core_crc7_inserter_reg39 = {sdcard_core_crc7_inserter_reg38[5], sdcard_core_crc7_inserter_reg38[4], sdcard_core_crc7_inserter_reg38[3], (sdcard_core_crc7_inserter_reg38[2] ^ (sdcard_core_crc7_inserter_din[1] ^ sdcard_core_crc7_inserter_reg38[6])), sdcard_core_crc7_inserter_reg38[1], sdcard_core_crc7_inserter_reg38[0], (sdcard_core_crc7_inserter_din[1] ^ sdcard_core_crc7_inserter_reg38[6])};
assign sdcard_core_crc7_inserter_reg40 = {sdcard_core_crc7_inserter_reg39[5], sdcard_core_crc7_inserter_reg39[4], sdcard_core_crc7_inserter_reg39[3], (sdcard_core_crc7_inserter_reg39[2] ^ (sdcard_core_crc7_inserter_din[0] ^ sdcard_core_crc7_inserter_reg39[6])), sdcard_core_crc7_inserter_reg39[1], sdcard_core_crc7_inserter_reg39[0], (sdcard_core_crc7_inserter_din[0] ^ sdcard_core_crc7_inserter_reg39[6])};
always @(*) begin
    sdcard_core_crc7_inserter_crc <= 7'd0;
    if (sdcard_core_crc7_inserter_enable) begin
        sdcard_core_crc7_inserter_crc <= sdcard_core_crc7_inserter_reg40;
    end else begin
        sdcard_core_crc7_inserter_crc <= sdcard_core_crc7_inserter_reg0;
    end
end
assign sdcard_core_crc16_inserter_crc0_reset = ((sdcard_core_crc16_inserter_source_valid & sdcard_core_crc16_inserter_source_ready) & sdcard_core_crc16_inserter_source_last);
assign sdcard_core_crc16_inserter_crc0_enable = (sdcard_core_crc16_inserter_sink_valid & sdcard_core_crc16_inserter_sink_ready);
always @(*) begin
    sdcard_core_crc16_inserter_crc0_din <= 2'd0;
    sdcard_core_crc16_inserter_crc0_din[0] <= sdcard_core_crc16_inserter_sink_payload_data[0];
    sdcard_core_crc16_inserter_crc0_din[1] <= sdcard_core_crc16_inserter_sink_payload_data[4];
end
assign sdcard_core_crc16_inserter_crc1_reset = ((sdcard_core_crc16_inserter_source_valid & sdcard_core_crc16_inserter_source_ready) & sdcard_core_crc16_inserter_source_last);
assign sdcard_core_crc16_inserter_crc1_enable = (sdcard_core_crc16_inserter_sink_valid & sdcard_core_crc16_inserter_sink_ready);
always @(*) begin
    sdcard_core_crc16_inserter_crc1_din <= 2'd0;
    sdcard_core_crc16_inserter_crc1_din[0] <= sdcard_core_crc16_inserter_sink_payload_data[1];
    sdcard_core_crc16_inserter_crc1_din[1] <= sdcard_core_crc16_inserter_sink_payload_data[5];
end
assign sdcard_core_crc16_inserter_crc2_reset = ((sdcard_core_crc16_inserter_source_valid & sdcard_core_crc16_inserter_source_ready) & sdcard_core_crc16_inserter_source_last);
assign sdcard_core_crc16_inserter_crc2_enable = (sdcard_core_crc16_inserter_sink_valid & sdcard_core_crc16_inserter_sink_ready);
always @(*) begin
    sdcard_core_crc16_inserter_crc2_din <= 2'd0;
    sdcard_core_crc16_inserter_crc2_din[0] <= sdcard_core_crc16_inserter_sink_payload_data[2];
    sdcard_core_crc16_inserter_crc2_din[1] <= sdcard_core_crc16_inserter_sink_payload_data[6];
end
assign sdcard_core_crc16_inserter_crc3_reset = ((sdcard_core_crc16_inserter_source_valid & sdcard_core_crc16_inserter_source_ready) & sdcard_core_crc16_inserter_source_last);
assign sdcard_core_crc16_inserter_crc3_enable = (sdcard_core_crc16_inserter_sink_valid & sdcard_core_crc16_inserter_sink_ready);
always @(*) begin
    sdcard_core_crc16_inserter_crc3_din <= 2'd0;
    sdcard_core_crc16_inserter_crc3_din[0] <= sdcard_core_crc16_inserter_sink_payload_data[3];
    sdcard_core_crc16_inserter_crc3_din[1] <= sdcard_core_crc16_inserter_sink_payload_data[7];
end
assign sdcard_core_crc16_inserter_crc0_reg1 = {sdcard_core_crc16_inserter_crc0_reg0[14], sdcard_core_crc16_inserter_crc0_reg0[13], sdcard_core_crc16_inserter_crc0_reg0[12], (sdcard_core_crc16_inserter_crc0_reg0[11] ^ (sdcard_core_crc16_inserter_crc0_din[1] ^ sdcard_core_crc16_inserter_crc0_reg0[15])), sdcard_core_crc16_inserter_crc0_reg0[10], sdcard_core_crc16_inserter_crc0_reg0[9], sdcard_core_crc16_inserter_crc0_reg0[8], sdcard_core_crc16_inserter_crc0_reg0[7], sdcard_core_crc16_inserter_crc0_reg0[6], sdcard_core_crc16_inserter_crc0_reg0[5], (sdcard_core_crc16_inserter_crc0_reg0[4] ^ (sdcard_core_crc16_inserter_crc0_din[1] ^ sdcard_core_crc16_inserter_crc0_reg0[15])), sdcard_core_crc16_inserter_crc0_reg0[3], sdcard_core_crc16_inserter_crc0_reg0[2], sdcard_core_crc16_inserter_crc0_reg0[1], sdcard_core_crc16_inserter_crc0_reg0[0], (sdcard_core_crc16_inserter_crc0_din[1] ^ sdcard_core_crc16_inserter_crc0_reg0[15])};
assign sdcard_core_crc16_inserter_crc0_reg2 = {sdcard_core_crc16_inserter_crc0_reg1[14], sdcard_core_crc16_inserter_crc0_reg1[13], sdcard_core_crc16_inserter_crc0_reg1[12], (sdcard_core_crc16_inserter_crc0_reg1[11] ^ (sdcard_core_crc16_inserter_crc0_din[0] ^ sdcard_core_crc16_inserter_crc0_reg1[15])), sdcard_core_crc16_inserter_crc0_reg1[10], sdcard_core_crc16_inserter_crc0_reg1[9], sdcard_core_crc16_inserter_crc0_reg1[8], sdcard_core_crc16_inserter_crc0_reg1[7], sdcard_core_crc16_inserter_crc0_reg1[6], sdcard_core_crc16_inserter_crc0_reg1[5], (sdcard_core_crc16_inserter_crc0_reg1[4] ^ (sdcard_core_crc16_inserter_crc0_din[0] ^ sdcard_core_crc16_inserter_crc0_reg1[15])), sdcard_core_crc16_inserter_crc0_reg1[3], sdcard_core_crc16_inserter_crc0_reg1[2], sdcard_core_crc16_inserter_crc0_reg1[1], sdcard_core_crc16_inserter_crc0_reg1[0], (sdcard_core_crc16_inserter_crc0_din[0] ^ sdcard_core_crc16_inserter_crc0_reg1[15])};
always @(*) begin
    sdcard_core_crc16_inserter_crc0_crc <= 16'd0;
    if (sdcard_core_crc16_inserter_crc0_enable) begin
        sdcard_core_crc16_inserter_crc0_crc <= sdcard_core_crc16_inserter_crc0_reg2;
    end else begin
        sdcard_core_crc16_inserter_crc0_crc <= sdcard_core_crc16_inserter_crc0_reg0;
    end
end
assign sdcard_core_crc16_inserter_crc1_reg1 = {sdcard_core_crc16_inserter_crc1_reg0[14], sdcard_core_crc16_inserter_crc1_reg0[13], sdcard_core_crc16_inserter_crc1_reg0[12], (sdcard_core_crc16_inserter_crc1_reg0[11] ^ (sdcard_core_crc16_inserter_crc1_din[1] ^ sdcard_core_crc16_inserter_crc1_reg0[15])), sdcard_core_crc16_inserter_crc1_reg0[10], sdcard_core_crc16_inserter_crc1_reg0[9], sdcard_core_crc16_inserter_crc1_reg0[8], sdcard_core_crc16_inserter_crc1_reg0[7], sdcard_core_crc16_inserter_crc1_reg0[6], sdcard_core_crc16_inserter_crc1_reg0[5], (sdcard_core_crc16_inserter_crc1_reg0[4] ^ (sdcard_core_crc16_inserter_crc1_din[1] ^ sdcard_core_crc16_inserter_crc1_reg0[15])), sdcard_core_crc16_inserter_crc1_reg0[3], sdcard_core_crc16_inserter_crc1_reg0[2], sdcard_core_crc16_inserter_crc1_reg0[1], sdcard_core_crc16_inserter_crc1_reg0[0], (sdcard_core_crc16_inserter_crc1_din[1] ^ sdcard_core_crc16_inserter_crc1_reg0[15])};
assign sdcard_core_crc16_inserter_crc1_reg2 = {sdcard_core_crc16_inserter_crc1_reg1[14], sdcard_core_crc16_inserter_crc1_reg1[13], sdcard_core_crc16_inserter_crc1_reg1[12], (sdcard_core_crc16_inserter_crc1_reg1[11] ^ (sdcard_core_crc16_inserter_crc1_din[0] ^ sdcard_core_crc16_inserter_crc1_reg1[15])), sdcard_core_crc16_inserter_crc1_reg1[10], sdcard_core_crc16_inserter_crc1_reg1[9], sdcard_core_crc16_inserter_crc1_reg1[8], sdcard_core_crc16_inserter_crc1_reg1[7], sdcard_core_crc16_inserter_crc1_reg1[6], sdcard_core_crc16_inserter_crc1_reg1[5], (sdcard_core_crc16_inserter_crc1_reg1[4] ^ (sdcard_core_crc16_inserter_crc1_din[0] ^ sdcard_core_crc16_inserter_crc1_reg1[15])), sdcard_core_crc16_inserter_crc1_reg1[3], sdcard_core_crc16_inserter_crc1_reg1[2], sdcard_core_crc16_inserter_crc1_reg1[1], sdcard_core_crc16_inserter_crc1_reg1[0], (sdcard_core_crc16_inserter_crc1_din[0] ^ sdcard_core_crc16_inserter_crc1_reg1[15])};
always @(*) begin
    sdcard_core_crc16_inserter_crc1_crc <= 16'd0;
    if (sdcard_core_crc16_inserter_crc1_enable) begin
        sdcard_core_crc16_inserter_crc1_crc <= sdcard_core_crc16_inserter_crc1_reg2;
    end else begin
        sdcard_core_crc16_inserter_crc1_crc <= sdcard_core_crc16_inserter_crc1_reg0;
    end
end
assign sdcard_core_crc16_inserter_crc2_reg1 = {sdcard_core_crc16_inserter_crc2_reg0[14], sdcard_core_crc16_inserter_crc2_reg0[13], sdcard_core_crc16_inserter_crc2_reg0[12], (sdcard_core_crc16_inserter_crc2_reg0[11] ^ (sdcard_core_crc16_inserter_crc2_din[1] ^ sdcard_core_crc16_inserter_crc2_reg0[15])), sdcard_core_crc16_inserter_crc2_reg0[10], sdcard_core_crc16_inserter_crc2_reg0[9], sdcard_core_crc16_inserter_crc2_reg0[8], sdcard_core_crc16_inserter_crc2_reg0[7], sdcard_core_crc16_inserter_crc2_reg0[6], sdcard_core_crc16_inserter_crc2_reg0[5], (sdcard_core_crc16_inserter_crc2_reg0[4] ^ (sdcard_core_crc16_inserter_crc2_din[1] ^ sdcard_core_crc16_inserter_crc2_reg0[15])), sdcard_core_crc16_inserter_crc2_reg0[3], sdcard_core_crc16_inserter_crc2_reg0[2], sdcard_core_crc16_inserter_crc2_reg0[1], sdcard_core_crc16_inserter_crc2_reg0[0], (sdcard_core_crc16_inserter_crc2_din[1] ^ sdcard_core_crc16_inserter_crc2_reg0[15])};
assign sdcard_core_crc16_inserter_crc2_reg2 = {sdcard_core_crc16_inserter_crc2_reg1[14], sdcard_core_crc16_inserter_crc2_reg1[13], sdcard_core_crc16_inserter_crc2_reg1[12], (sdcard_core_crc16_inserter_crc2_reg1[11] ^ (sdcard_core_crc16_inserter_crc2_din[0] ^ sdcard_core_crc16_inserter_crc2_reg1[15])), sdcard_core_crc16_inserter_crc2_reg1[10], sdcard_core_crc16_inserter_crc2_reg1[9], sdcard_core_crc16_inserter_crc2_reg1[8], sdcard_core_crc16_inserter_crc2_reg1[7], sdcard_core_crc16_inserter_crc2_reg1[6], sdcard_core_crc16_inserter_crc2_reg1[5], (sdcard_core_crc16_inserter_crc2_reg1[4] ^ (sdcard_core_crc16_inserter_crc2_din[0] ^ sdcard_core_crc16_inserter_crc2_reg1[15])), sdcard_core_crc16_inserter_crc2_reg1[3], sdcard_core_crc16_inserter_crc2_reg1[2], sdcard_core_crc16_inserter_crc2_reg1[1], sdcard_core_crc16_inserter_crc2_reg1[0], (sdcard_core_crc16_inserter_crc2_din[0] ^ sdcard_core_crc16_inserter_crc2_reg1[15])};
always @(*) begin
    sdcard_core_crc16_inserter_crc2_crc <= 16'd0;
    if (sdcard_core_crc16_inserter_crc2_enable) begin
        sdcard_core_crc16_inserter_crc2_crc <= sdcard_core_crc16_inserter_crc2_reg2;
    end else begin
        sdcard_core_crc16_inserter_crc2_crc <= sdcard_core_crc16_inserter_crc2_reg0;
    end
end
assign sdcard_core_crc16_inserter_crc3_reg1 = {sdcard_core_crc16_inserter_crc3_reg0[14], sdcard_core_crc16_inserter_crc3_reg0[13], sdcard_core_crc16_inserter_crc3_reg0[12], (sdcard_core_crc16_inserter_crc3_reg0[11] ^ (sdcard_core_crc16_inserter_crc3_din[1] ^ sdcard_core_crc16_inserter_crc3_reg0[15])), sdcard_core_crc16_inserter_crc3_reg0[10], sdcard_core_crc16_inserter_crc3_reg0[9], sdcard_core_crc16_inserter_crc3_reg0[8], sdcard_core_crc16_inserter_crc3_reg0[7], sdcard_core_crc16_inserter_crc3_reg0[6], sdcard_core_crc16_inserter_crc3_reg0[5], (sdcard_core_crc16_inserter_crc3_reg0[4] ^ (sdcard_core_crc16_inserter_crc3_din[1] ^ sdcard_core_crc16_inserter_crc3_reg0[15])), sdcard_core_crc16_inserter_crc3_reg0[3], sdcard_core_crc16_inserter_crc3_reg0[2], sdcard_core_crc16_inserter_crc3_reg0[1], sdcard_core_crc16_inserter_crc3_reg0[0], (sdcard_core_crc16_inserter_crc3_din[1] ^ sdcard_core_crc16_inserter_crc3_reg0[15])};
assign sdcard_core_crc16_inserter_crc3_reg2 = {sdcard_core_crc16_inserter_crc3_reg1[14], sdcard_core_crc16_inserter_crc3_reg1[13], sdcard_core_crc16_inserter_crc3_reg1[12], (sdcard_core_crc16_inserter_crc3_reg1[11] ^ (sdcard_core_crc16_inserter_crc3_din[0] ^ sdcard_core_crc16_inserter_crc3_reg1[15])), sdcard_core_crc16_inserter_crc3_reg1[10], sdcard_core_crc16_inserter_crc3_reg1[9], sdcard_core_crc16_inserter_crc3_reg1[8], sdcard_core_crc16_inserter_crc3_reg1[7], sdcard_core_crc16_inserter_crc3_reg1[6], sdcard_core_crc16_inserter_crc3_reg1[5], (sdcard_core_crc16_inserter_crc3_reg1[4] ^ (sdcard_core_crc16_inserter_crc3_din[0] ^ sdcard_core_crc16_inserter_crc3_reg1[15])), sdcard_core_crc16_inserter_crc3_reg1[3], sdcard_core_crc16_inserter_crc3_reg1[2], sdcard_core_crc16_inserter_crc3_reg1[1], sdcard_core_crc16_inserter_crc3_reg1[0], (sdcard_core_crc16_inserter_crc3_din[0] ^ sdcard_core_crc16_inserter_crc3_reg1[15])};
always @(*) begin
    sdcard_core_crc16_inserter_crc3_crc <= 16'd0;
    if (sdcard_core_crc16_inserter_crc3_enable) begin
        sdcard_core_crc16_inserter_crc3_crc <= sdcard_core_crc16_inserter_crc3_reg2;
    end else begin
        sdcard_core_crc16_inserter_crc3_crc <= sdcard_core_crc16_inserter_crc3_reg0;
    end
end
always @(*) begin
    crc16inserter_next_state <= 1'd0;
    sdcard_core_crc16_inserter_count_crc16inserter_next_value <= 3'd0;
    sdcard_core_crc16_inserter_count_crc16inserter_next_value_ce <= 1'd0;
    sdcard_core_crc16_inserter_sink_ready <= 1'd0;
    sdcard_core_crc16_inserter_source_first <= 1'd0;
    sdcard_core_crc16_inserter_source_last <= 1'd0;
    sdcard_core_crc16_inserter_source_payload_data <= 8'd0;
    sdcard_core_crc16_inserter_source_valid <= 1'd0;
    crc16inserter_next_state <= crc16inserter_state;
    case (crc16inserter_state)
        1'd1: begin
            sdcard_core_crc16_inserter_source_valid <= 1'd1;
            sdcard_core_crc16_inserter_source_last <= (sdcard_core_crc16_inserter_count == 3'd7);
            case (sdcard_core_crc16_inserter_count)
                1'd0: begin
                    sdcard_core_crc16_inserter_source_payload_data[0] <= sdcard_core_crc16_inserter_crc0_crc[14];
                    sdcard_core_crc16_inserter_source_payload_data[1] <= sdcard_core_crc16_inserter_crc1_crc[14];
                    sdcard_core_crc16_inserter_source_payload_data[2] <= sdcard_core_crc16_inserter_crc2_crc[14];
                    sdcard_core_crc16_inserter_source_payload_data[3] <= sdcard_core_crc16_inserter_crc3_crc[14];
                    sdcard_core_crc16_inserter_source_payload_data[4] <= sdcard_core_crc16_inserter_crc0_crc[15];
                    sdcard_core_crc16_inserter_source_payload_data[5] <= sdcard_core_crc16_inserter_crc1_crc[15];
                    sdcard_core_crc16_inserter_source_payload_data[6] <= sdcard_core_crc16_inserter_crc2_crc[15];
                    sdcard_core_crc16_inserter_source_payload_data[7] <= sdcard_core_crc16_inserter_crc3_crc[15];
                end
                1'd1: begin
                    sdcard_core_crc16_inserter_source_payload_data[0] <= sdcard_core_crc16_inserter_crc0_crc[12];
                    sdcard_core_crc16_inserter_source_payload_data[1] <= sdcard_core_crc16_inserter_crc1_crc[12];
                    sdcard_core_crc16_inserter_source_payload_data[2] <= sdcard_core_crc16_inserter_crc2_crc[12];
                    sdcard_core_crc16_inserter_source_payload_data[3] <= sdcard_core_crc16_inserter_crc3_crc[12];
                    sdcard_core_crc16_inserter_source_payload_data[4] <= sdcard_core_crc16_inserter_crc0_crc[13];
                    sdcard_core_crc16_inserter_source_payload_data[5] <= sdcard_core_crc16_inserter_crc1_crc[13];
                    sdcard_core_crc16_inserter_source_payload_data[6] <= sdcard_core_crc16_inserter_crc2_crc[13];
                    sdcard_core_crc16_inserter_source_payload_data[7] <= sdcard_core_crc16_inserter_crc3_crc[13];
                end
                2'd2: begin
                    sdcard_core_crc16_inserter_source_payload_data[0] <= sdcard_core_crc16_inserter_crc0_crc[10];
                    sdcard_core_crc16_inserter_source_payload_data[1] <= sdcard_core_crc16_inserter_crc1_crc[10];
                    sdcard_core_crc16_inserter_source_payload_data[2] <= sdcard_core_crc16_inserter_crc2_crc[10];
                    sdcard_core_crc16_inserter_source_payload_data[3] <= sdcard_core_crc16_inserter_crc3_crc[10];
                    sdcard_core_crc16_inserter_source_payload_data[4] <= sdcard_core_crc16_inserter_crc0_crc[11];
                    sdcard_core_crc16_inserter_source_payload_data[5] <= sdcard_core_crc16_inserter_crc1_crc[11];
                    sdcard_core_crc16_inserter_source_payload_data[6] <= sdcard_core_crc16_inserter_crc2_crc[11];
                    sdcard_core_crc16_inserter_source_payload_data[7] <= sdcard_core_crc16_inserter_crc3_crc[11];
                end
                2'd3: begin
                    sdcard_core_crc16_inserter_source_payload_data[0] <= sdcard_core_crc16_inserter_crc0_crc[8];
                    sdcard_core_crc16_inserter_source_payload_data[1] <= sdcard_core_crc16_inserter_crc1_crc[8];
                    sdcard_core_crc16_inserter_source_payload_data[2] <= sdcard_core_crc16_inserter_crc2_crc[8];
                    sdcard_core_crc16_inserter_source_payload_data[3] <= sdcard_core_crc16_inserter_crc3_crc[8];
                    sdcard_core_crc16_inserter_source_payload_data[4] <= sdcard_core_crc16_inserter_crc0_crc[9];
                    sdcard_core_crc16_inserter_source_payload_data[5] <= sdcard_core_crc16_inserter_crc1_crc[9];
                    sdcard_core_crc16_inserter_source_payload_data[6] <= sdcard_core_crc16_inserter_crc2_crc[9];
                    sdcard_core_crc16_inserter_source_payload_data[7] <= sdcard_core_crc16_inserter_crc3_crc[9];
                end
                3'd4: begin
                    sdcard_core_crc16_inserter_source_payload_data[0] <= sdcard_core_crc16_inserter_crc0_crc[6];
                    sdcard_core_crc16_inserter_source_payload_data[1] <= sdcard_core_crc16_inserter_crc1_crc[6];
                    sdcard_core_crc16_inserter_source_payload_data[2] <= sdcard_core_crc16_inserter_crc2_crc[6];
                    sdcard_core_crc16_inserter_source_payload_data[3] <= sdcard_core_crc16_inserter_crc3_crc[6];
                    sdcard_core_crc16_inserter_source_payload_data[4] <= sdcard_core_crc16_inserter_crc0_crc[7];
                    sdcard_core_crc16_inserter_source_payload_data[5] <= sdcard_core_crc16_inserter_crc1_crc[7];
                    sdcard_core_crc16_inserter_source_payload_data[6] <= sdcard_core_crc16_inserter_crc2_crc[7];
                    sdcard_core_crc16_inserter_source_payload_data[7] <= sdcard_core_crc16_inserter_crc3_crc[7];
                end
                3'd5: begin
                    sdcard_core_crc16_inserter_source_payload_data[0] <= sdcard_core_crc16_inserter_crc0_crc[4];
                    sdcard_core_crc16_inserter_source_payload_data[1] <= sdcard_core_crc16_inserter_crc1_crc[4];
                    sdcard_core_crc16_inserter_source_payload_data[2] <= sdcard_core_crc16_inserter_crc2_crc[4];
                    sdcard_core_crc16_inserter_source_payload_data[3] <= sdcard_core_crc16_inserter_crc3_crc[4];
                    sdcard_core_crc16_inserter_source_payload_data[4] <= sdcard_core_crc16_inserter_crc0_crc[5];
                    sdcard_core_crc16_inserter_source_payload_data[5] <= sdcard_core_crc16_inserter_crc1_crc[5];
                    sdcard_core_crc16_inserter_source_payload_data[6] <= sdcard_core_crc16_inserter_crc2_crc[5];
                    sdcard_core_crc16_inserter_source_payload_data[7] <= sdcard_core_crc16_inserter_crc3_crc[5];
                end
                3'd6: begin
                    sdcard_core_crc16_inserter_source_payload_data[0] <= sdcard_core_crc16_inserter_crc0_crc[2];
                    sdcard_core_crc16_inserter_source_payload_data[1] <= sdcard_core_crc16_inserter_crc1_crc[2];
                    sdcard_core_crc16_inserter_source_payload_data[2] <= sdcard_core_crc16_inserter_crc2_crc[2];
                    sdcard_core_crc16_inserter_source_payload_data[3] <= sdcard_core_crc16_inserter_crc3_crc[2];
                    sdcard_core_crc16_inserter_source_payload_data[4] <= sdcard_core_crc16_inserter_crc0_crc[3];
                    sdcard_core_crc16_inserter_source_payload_data[5] <= sdcard_core_crc16_inserter_crc1_crc[3];
                    sdcard_core_crc16_inserter_source_payload_data[6] <= sdcard_core_crc16_inserter_crc2_crc[3];
                    sdcard_core_crc16_inserter_source_payload_data[7] <= sdcard_core_crc16_inserter_crc3_crc[3];
                end
                3'd7: begin
                    sdcard_core_crc16_inserter_source_payload_data[0] <= sdcard_core_crc16_inserter_crc0_crc[0];
                    sdcard_core_crc16_inserter_source_payload_data[1] <= sdcard_core_crc16_inserter_crc1_crc[0];
                    sdcard_core_crc16_inserter_source_payload_data[2] <= sdcard_core_crc16_inserter_crc2_crc[0];
                    sdcard_core_crc16_inserter_source_payload_data[3] <= sdcard_core_crc16_inserter_crc3_crc[0];
                    sdcard_core_crc16_inserter_source_payload_data[4] <= sdcard_core_crc16_inserter_crc0_crc[1];
                    sdcard_core_crc16_inserter_source_payload_data[5] <= sdcard_core_crc16_inserter_crc1_crc[1];
                    sdcard_core_crc16_inserter_source_payload_data[6] <= sdcard_core_crc16_inserter_crc2_crc[1];
                    sdcard_core_crc16_inserter_source_payload_data[7] <= sdcard_core_crc16_inserter_crc3_crc[1];
                end
            endcase
            if ((sdcard_core_crc16_inserter_source_valid & sdcard_core_crc16_inserter_source_ready)) begin
                sdcard_core_crc16_inserter_count_crc16inserter_next_value <= (sdcard_core_crc16_inserter_count + 1'd1);
                sdcard_core_crc16_inserter_count_crc16inserter_next_value_ce <= 1'd1;
                if (sdcard_core_crc16_inserter_source_last) begin
                    crc16inserter_next_state <= 1'd0;
                end
            end
        end
        default: begin
            sdcard_core_crc16_inserter_count_crc16inserter_next_value <= 1'd0;
            sdcard_core_crc16_inserter_count_crc16inserter_next_value_ce <= 1'd1;
            sdcard_core_crc16_inserter_source_valid <= sdcard_core_crc16_inserter_sink_valid;
            sdcard_core_crc16_inserter_sink_ready <= sdcard_core_crc16_inserter_source_ready;
            sdcard_core_crc16_inserter_source_first <= sdcard_core_crc16_inserter_sink_first;
            sdcard_core_crc16_inserter_source_payload_data <= sdcard_core_crc16_inserter_sink_payload_data;
            sdcard_core_crc16_inserter_source_last <= 1'd0;
            if ((sdcard_core_crc16_inserter_sink_valid & sdcard_core_crc16_inserter_sink_ready)) begin
                if (sdcard_core_crc16_inserter_sink_last) begin
                    crc16inserter_next_state <= 1'd1;
                end
            end
        end
    endcase
end
assign sdcard_core_fifo_sink_valid = sdcard_core_sink_sink_valid1;
assign sdcard_core_sink_sink_ready1 = sdcard_core_fifo_sink_ready;
assign sdcard_core_fifo_sink_first = sdcard_core_sink_sink_first1;
assign sdcard_core_fifo_sink_last = sdcard_core_sink_sink_last1;
assign sdcard_core_fifo_sink_payload_data = sdcard_core_sink_sink_payload_data1;
assign sdcard_core_source_source_first1 = sdcard_core_fifo_source_first;
assign sdcard_core_source_source_last1 = sdcard_core_fifo_source_last;
assign sdcard_core_source_source_payload_data1 = sdcard_core_fifo_source_payload_data;
assign sdcard_core_source_source_valid1 = (sdcard_core_fifo_level >= 4'd8);
assign sdcard_core_fifo_source_ready = (sdcard_core_source_source_valid1 & sdcard_core_source_source_ready1);
assign sdcard_core_fifo_reset = ((sdcard_core_sink_sink_valid1 & sdcard_core_sink_sink_ready1) & sdcard_core_sink_sink_last1);
assign sdcard_core_fifo_syncfifo_din = {sdcard_core_fifo_fifo_in_last, sdcard_core_fifo_fifo_in_first, sdcard_core_fifo_fifo_in_payload_data};
assign {sdcard_core_fifo_fifo_out_last, sdcard_core_fifo_fifo_out_first, sdcard_core_fifo_fifo_out_payload_data} = sdcard_core_fifo_syncfifo_dout;
assign sdcard_core_fifo_sink_ready = sdcard_core_fifo_syncfifo_writable;
assign sdcard_core_fifo_syncfifo_we = sdcard_core_fifo_sink_valid;
assign sdcard_core_fifo_fifo_in_first = sdcard_core_fifo_sink_first;
assign sdcard_core_fifo_fifo_in_last = sdcard_core_fifo_sink_last;
assign sdcard_core_fifo_fifo_in_payload_data = sdcard_core_fifo_sink_payload_data;
assign sdcard_core_fifo_source_valid = sdcard_core_fifo_syncfifo_readable;
assign sdcard_core_fifo_source_first = sdcard_core_fifo_fifo_out_first;
assign sdcard_core_fifo_source_last = sdcard_core_fifo_fifo_out_last;
assign sdcard_core_fifo_source_payload_data = sdcard_core_fifo_fifo_out_payload_data;
assign sdcard_core_fifo_syncfifo_re = sdcard_core_fifo_source_ready;
always @(*) begin
    sdcard_core_fifo_wrport_adr <= 3'd0;
    if (sdcard_core_fifo_replace) begin
        sdcard_core_fifo_wrport_adr <= (sdcard_core_fifo_produce - 1'd1);
    end else begin
        sdcard_core_fifo_wrport_adr <= sdcard_core_fifo_produce;
    end
end
assign sdcard_core_fifo_wrport_dat_w = sdcard_core_fifo_syncfifo_din;
assign sdcard_core_fifo_wrport_we = (sdcard_core_fifo_syncfifo_we & (sdcard_core_fifo_syncfifo_writable | sdcard_core_fifo_replace));
assign sdcard_core_fifo_do_read = (sdcard_core_fifo_syncfifo_readable & sdcard_core_fifo_syncfifo_re);
assign sdcard_core_fifo_rdport_adr = sdcard_core_fifo_consume;
assign sdcard_core_fifo_syncfifo_dout = sdcard_core_fifo_rdport_dat_r;
assign sdcard_core_fifo_syncfifo_writable = (sdcard_core_fifo_level != 4'd8);
assign sdcard_core_fifo_syncfifo_readable = (sdcard_core_fifo_level != 1'd0);
always @(*) begin
    cmdr_sink_payload_cmd_type <= 2'd0;
    cmdr_sink_payload_data_type <= 2'd0;
    cmdr_sink_payload_length <= 8'd0;
    cmdr_sink_valid <= 1'd0;
    cmdr_source_source_ready <= 1'd0;
    cmdw_sink_last <= 1'd0;
    cmdw_sink_payload_cmd_type <= 2'd0;
    cmdw_sink_payload_data <= 8'd0;
    cmdw_sink_valid <= 1'd0;
    datar_sink_last <= 1'd0;
    datar_sink_payload_block_length <= 10'd0;
    datar_sink_valid <= 1'd0;
    datar_source_source_ready <= 1'd0;
    dataw_sink_first <= 1'd0;
    dataw_sink_last <= 1'd0;
    dataw_sink_payload_data <= 8'd0;
    dataw_sink_valid <= 1'd0;
    fsm_next_state <= 3'd0;
    sdcard_core_cmd_count_fsm_next_value2 <= 3'd0;
    sdcard_core_cmd_count_fsm_next_value_ce2 <= 1'd0;
    sdcard_core_cmd_done_fsm_next_value0 <= 1'd0;
    sdcard_core_cmd_done_fsm_next_value_ce0 <= 1'd0;
    sdcard_core_cmd_error_fsm_next_value4 <= 1'd0;
    sdcard_core_cmd_error_fsm_next_value_ce4 <= 1'd0;
    sdcard_core_cmd_response_status_fsm_next_value8 <= 128'd0;
    sdcard_core_cmd_response_status_fsm_next_value_ce8 <= 1'd0;
    sdcard_core_cmd_timeout_fsm_next_value5 <= 1'd0;
    sdcard_core_cmd_timeout_fsm_next_value_ce5 <= 1'd0;
    sdcard_core_crc16_inserter_source_ready <= 1'd0;
    sdcard_core_data_count_fsm_next_value3 <= 32'd0;
    sdcard_core_data_count_fsm_next_value_ce3 <= 1'd0;
    sdcard_core_data_done_fsm_next_value1 <= 1'd0;
    sdcard_core_data_done_fsm_next_value_ce1 <= 1'd0;
    sdcard_core_data_error_fsm_next_value6 <= 1'd0;
    sdcard_core_data_error_fsm_next_value_ce6 <= 1'd0;
    sdcard_core_data_timeout_fsm_next_value7 <= 1'd0;
    sdcard_core_data_timeout_fsm_next_value_ce7 <= 1'd0;
    sdcard_core_sink_sink_first1 <= 1'd0;
    sdcard_core_sink_sink_last1 <= 1'd0;
    sdcard_core_sink_sink_payload_data1 <= 8'd0;
    sdcard_core_sink_sink_valid1 <= 1'd0;
    fsm_next_state <= fsm_state;
    case (fsm_state)
        1'd1: begin
            cmdw_sink_valid <= 1'd1;
            cmdw_sink_last <= (sdcard_core_cmd_count == 3'd5);
            cmdw_sink_payload_cmd_type <= sdcard_core_cmd_type;
            case (sdcard_core_cmd_count)
                1'd0: begin
                    cmdw_sink_payload_data <= {1'd0, 1'd1, sdcard_core_cmd};
                end
                1'd1: begin
                    cmdw_sink_payload_data <= sdcard_core_cmd_argument_storage[31:24];
                end
                2'd2: begin
                    cmdw_sink_payload_data <= sdcard_core_cmd_argument_storage[23:16];
                end
                2'd3: begin
                    cmdw_sink_payload_data <= sdcard_core_cmd_argument_storage[15:8];
                end
                3'd4: begin
                    cmdw_sink_payload_data <= sdcard_core_cmd_argument_storage[7:0];
                end
                3'd5: begin
                    cmdw_sink_payload_data <= {sdcard_core_crc7_inserter_crc, 1'd1};
                end
            endcase
            if (cmdw_sink_ready) begin
                sdcard_core_cmd_count_fsm_next_value2 <= (sdcard_core_cmd_count + 1'd1);
                sdcard_core_cmd_count_fsm_next_value_ce2 <= 1'd1;
                if (cmdw_sink_last) begin
                    if ((sdcard_core_cmd_type == 1'd0)) begin
                        fsm_next_state <= 1'd0;
                    end else begin
                        fsm_next_state <= 2'd2;
                    end
                end
            end
        end
        2'd2: begin
            cmdr_sink_valid <= 1'd1;
            cmdr_sink_payload_cmd_type <= sdcard_core_cmd_type;
            cmdr_sink_payload_data_type <= sdcard_core_data_type;
            if ((sdcard_core_cmd_type == 2'd2)) begin
                cmdr_sink_payload_length <= 5'd18;
            end else begin
                cmdr_sink_payload_length <= 3'd6;
            end
            cmdr_source_source_ready <= 1'd1;
            if (cmdr_source_source_valid) begin
                if ((cmdr_source_source_payload_status == 1'd1)) begin
                    sdcard_core_cmd_timeout_fsm_next_value5 <= 1'd1;
                    sdcard_core_cmd_timeout_fsm_next_value_ce5 <= 1'd1;
                    fsm_next_state <= 1'd0;
                end else begin
                    if (cmdr_source_source_last) begin
                        if ((sdcard_core_data_type == 2'd2)) begin
                            fsm_next_state <= 2'd3;
                        end else begin
                            if ((sdcard_core_data_type == 1'd1)) begin
                                fsm_next_state <= 3'd4;
                            end else begin
                                fsm_next_state <= 1'd0;
                            end
                        end
                    end else begin
                        sdcard_core_cmd_response_status_fsm_next_value8 <= {sdcard_core_cmd_response_status, cmdr_source_source_payload_data};
                        sdcard_core_cmd_response_status_fsm_next_value_ce8 <= 1'd1;
                    end
                end
            end
        end
        2'd3: begin
            dataw_sink_valid <= sdcard_core_crc16_inserter_source_valid;
            sdcard_core_crc16_inserter_source_ready <= dataw_sink_ready;
            dataw_sink_first <= sdcard_core_crc16_inserter_source_first;
            dataw_sink_last <= sdcard_core_crc16_inserter_source_last;
            dataw_sink_payload_data <= sdcard_core_crc16_inserter_source_payload_data;
            if (((dataw_sink_valid & dataw_sink_ready) & dataw_sink_last)) begin
                sdcard_core_data_count_fsm_next_value3 <= (sdcard_core_data_count + 1'd1);
                sdcard_core_data_count_fsm_next_value_ce3 <= 1'd1;
                if ((sdcard_core_data_count == (sdcard_core_block_count_storage - 1'd1))) begin
                    fsm_next_state <= 1'd0;
                end
            end
            datar_source_source_ready <= 1'd1;
            if (datar_source_source_valid) begin
                if ((datar_source_source_payload_status != 2'd2)) begin
                    sdcard_core_data_error_fsm_next_value6 <= 1'd1;
                    sdcard_core_data_error_fsm_next_value_ce6 <= 1'd1;
                end
            end
        end
        3'd4: begin
            datar_sink_valid <= 1'd1;
            datar_sink_payload_block_length <= sdcard_core_block_length_storage;
            datar_sink_last <= (sdcard_core_data_count == (sdcard_core_block_count_storage - 1'd1));
            if (datar_source_source_valid) begin
                if ((datar_source_source_payload_status == 1'd0)) begin
                    sdcard_core_sink_sink_valid1 <= datar_source_source_valid;
                    datar_source_source_ready <= sdcard_core_sink_sink_ready1;
                    sdcard_core_sink_sink_first1 <= datar_source_source_first;
                    sdcard_core_sink_sink_last1 <= datar_source_source_last;
                    sdcard_core_sink_sink_payload_data1 <= datar_source_source_payload_data;
                    if ((datar_source_source_last & datar_source_source_ready)) begin
                        sdcard_core_data_count_fsm_next_value3 <= (sdcard_core_data_count + 1'd1);
                        sdcard_core_data_count_fsm_next_value_ce3 <= 1'd1;
                        if ((sdcard_core_data_count == (sdcard_core_block_count_storage - 1'd1))) begin
                            fsm_next_state <= 1'd0;
                        end
                    end
                end else begin
                    if ((datar_source_source_payload_status == 1'd1)) begin
                        sdcard_core_data_timeout_fsm_next_value7 <= 1'd1;
                        sdcard_core_data_timeout_fsm_next_value_ce7 <= 1'd1;
                        datar_source_source_ready <= 1'd1;
                        fsm_next_state <= 1'd0;
                    end
                end
            end
        end
        default: begin
            sdcard_core_cmd_done_fsm_next_value0 <= 1'd1;
            sdcard_core_cmd_done_fsm_next_value_ce0 <= 1'd1;
            sdcard_core_data_done_fsm_next_value1 <= 1'd1;
            sdcard_core_data_done_fsm_next_value_ce1 <= 1'd1;
            sdcard_core_cmd_count_fsm_next_value2 <= 1'd0;
            sdcard_core_cmd_count_fsm_next_value_ce2 <= 1'd1;
            sdcard_core_data_count_fsm_next_value3 <= 1'd0;
            sdcard_core_data_count_fsm_next_value_ce3 <= 1'd1;
            if (sdcard_core_cmd_send_re) begin
                sdcard_core_cmd_done_fsm_next_value0 <= 1'd0;
                sdcard_core_cmd_done_fsm_next_value_ce0 <= 1'd1;
                sdcard_core_cmd_error_fsm_next_value4 <= 1'd0;
                sdcard_core_cmd_error_fsm_next_value_ce4 <= 1'd1;
                sdcard_core_cmd_timeout_fsm_next_value5 <= 1'd0;
                sdcard_core_cmd_timeout_fsm_next_value_ce5 <= 1'd1;
                sdcard_core_data_done_fsm_next_value1 <= 1'd0;
                sdcard_core_data_done_fsm_next_value_ce1 <= 1'd1;
                sdcard_core_data_error_fsm_next_value6 <= 1'd0;
                sdcard_core_data_error_fsm_next_value_ce6 <= 1'd1;
                sdcard_core_data_timeout_fsm_next_value7 <= 1'd0;
                sdcard_core_data_timeout_fsm_next_value_ce7 <= 1'd1;
                fsm_next_state <= 1'd1;
            end
        end
    endcase
end
assign sdcard_block2mem_start = (sdcard_block2mem_sink_sink_valid0 & sdcard_block2mem_sink_sink_first);
always @(*) begin
    sdcard_block2mem_fifo_sink_first <= 1'd0;
    sdcard_block2mem_fifo_sink_last <= 1'd0;
    sdcard_block2mem_fifo_sink_payload_data <= 8'd0;
    sdcard_block2mem_fifo_sink_valid <= 1'd0;
    sdcard_block2mem_sink_sink_ready0 <= 1'd0;
    if ((sdcard_block2mem_wishbonedmawriter_enable_storage & (sdcard_block2mem_start | sdcard_block2mem_connect))) begin
        sdcard_block2mem_fifo_sink_valid <= sdcard_block2mem_sink_sink_valid0;
        sdcard_block2mem_sink_sink_ready0 <= sdcard_block2mem_fifo_sink_ready;
        sdcard_block2mem_fifo_sink_first <= sdcard_block2mem_sink_sink_first;
        sdcard_block2mem_fifo_sink_last <= sdcard_block2mem_sink_sink_last0;
        sdcard_block2mem_fifo_sink_payload_data <= sdcard_block2mem_sink_sink_payload_data0;
    end else begin
        sdcard_block2mem_sink_sink_ready0 <= 1'd1;
    end
end
assign sdcard_block2mem_converter_sink_valid = sdcard_block2mem_fifo_source_valid;
assign sdcard_block2mem_fifo_source_ready = sdcard_block2mem_converter_sink_ready;
assign sdcard_block2mem_converter_sink_first = sdcard_block2mem_fifo_source_first;
assign sdcard_block2mem_converter_sink_last = sdcard_block2mem_fifo_source_last;
assign sdcard_block2mem_converter_sink_payload_data = sdcard_block2mem_fifo_source_payload_data;
assign sdcard_block2mem_wishbonedmawriter_sink_valid = sdcard_block2mem_source_source_valid;
assign sdcard_block2mem_source_source_ready = sdcard_block2mem_wishbonedmawriter_sink_ready;
assign sdcard_block2mem_wishbonedmawriter_sink_first = sdcard_block2mem_source_source_first;
assign sdcard_block2mem_wishbonedmawriter_sink_last = sdcard_block2mem_source_source_last;
assign sdcard_block2mem_wishbonedmawriter_sink_payload_data = sdcard_block2mem_source_source_payload_data;
assign sdcard_block2mem_fifo_syncfifo_din = {sdcard_block2mem_fifo_fifo_in_last, sdcard_block2mem_fifo_fifo_in_first, sdcard_block2mem_fifo_fifo_in_payload_data};
assign {sdcard_block2mem_fifo_fifo_out_last, sdcard_block2mem_fifo_fifo_out_first, sdcard_block2mem_fifo_fifo_out_payload_data} = sdcard_block2mem_fifo_syncfifo_dout;
assign sdcard_block2mem_fifo_sink_ready = sdcard_block2mem_fifo_syncfifo_writable;
assign sdcard_block2mem_fifo_syncfifo_we = sdcard_block2mem_fifo_sink_valid;
assign sdcard_block2mem_fifo_fifo_in_first = sdcard_block2mem_fifo_sink_first;
assign sdcard_block2mem_fifo_fifo_in_last = sdcard_block2mem_fifo_sink_last;
assign sdcard_block2mem_fifo_fifo_in_payload_data = sdcard_block2mem_fifo_sink_payload_data;
assign sdcard_block2mem_fifo_source_valid = sdcard_block2mem_fifo_readable;
assign sdcard_block2mem_fifo_source_first = sdcard_block2mem_fifo_fifo_out_first;
assign sdcard_block2mem_fifo_source_last = sdcard_block2mem_fifo_fifo_out_last;
assign sdcard_block2mem_fifo_source_payload_data = sdcard_block2mem_fifo_fifo_out_payload_data;
assign sdcard_block2mem_fifo_re = sdcard_block2mem_fifo_source_ready;
assign sdcard_block2mem_fifo_syncfifo_re = (sdcard_block2mem_fifo_syncfifo_readable & ((~sdcard_block2mem_fifo_readable) | sdcard_block2mem_fifo_re));
assign sdcard_block2mem_fifo_level1 = (sdcard_block2mem_fifo_level0 + sdcard_block2mem_fifo_readable);
always @(*) begin
    sdcard_block2mem_fifo_wrport_adr <= 9'd0;
    if (sdcard_block2mem_fifo_replace) begin
        sdcard_block2mem_fifo_wrport_adr <= (sdcard_block2mem_fifo_produce - 1'd1);
    end else begin
        sdcard_block2mem_fifo_wrport_adr <= sdcard_block2mem_fifo_produce;
    end
end
assign sdcard_block2mem_fifo_wrport_dat_w = sdcard_block2mem_fifo_syncfifo_din;
assign sdcard_block2mem_fifo_wrport_we = (sdcard_block2mem_fifo_syncfifo_we & (sdcard_block2mem_fifo_syncfifo_writable | sdcard_block2mem_fifo_replace));
assign sdcard_block2mem_fifo_do_read = (sdcard_block2mem_fifo_syncfifo_readable & sdcard_block2mem_fifo_syncfifo_re);
assign sdcard_block2mem_fifo_rdport_adr = sdcard_block2mem_fifo_consume;
assign sdcard_block2mem_fifo_syncfifo_dout = sdcard_block2mem_fifo_rdport_dat_r;
assign sdcard_block2mem_fifo_rdport_re = sdcard_block2mem_fifo_do_read;
assign sdcard_block2mem_fifo_syncfifo_writable = (sdcard_block2mem_fifo_level0 != 10'd512);
assign sdcard_block2mem_fifo_syncfifo_readable = (sdcard_block2mem_fifo_level0 != 1'd0);
assign sdcard_block2mem_source_source_valid = sdcard_block2mem_converter_source_valid;
assign sdcard_block2mem_converter_source_ready = sdcard_block2mem_source_source_ready;
assign sdcard_block2mem_source_source_first = sdcard_block2mem_converter_source_first;
assign sdcard_block2mem_source_source_last = sdcard_block2mem_converter_source_last;
assign sdcard_block2mem_source_source_payload_data = sdcard_block2mem_converter_source_payload_data;
assign sdcard_block2mem_converter_sink_ready = ((~sdcard_block2mem_converter_strobe_all) | sdcard_block2mem_converter_source_ready);
assign sdcard_block2mem_converter_source_valid = sdcard_block2mem_converter_strobe_all;
assign sdcard_block2mem_converter_load_part = (sdcard_block2mem_converter_sink_valid & sdcard_block2mem_converter_sink_ready);
assign interface0_bus_stb = sdcard_block2mem_sink_sink_valid1;
assign interface0_bus_cyc = sdcard_block2mem_sink_sink_valid1;
assign interface0_bus_we = 1'd1;
assign interface0_bus_sel = 4'd15;
assign interface0_bus_adr = sdcard_block2mem_sink_sink_payload_address;
assign interface0_bus_dat_w = {sdcard_block2mem_sink_sink_payload_data1[7:0], sdcard_block2mem_sink_sink_payload_data1[15:8], sdcard_block2mem_sink_sink_payload_data1[23:16], sdcard_block2mem_sink_sink_payload_data1[31:24]};
assign sdcard_block2mem_sink_sink_ready1 = interface0_bus_ack;
assign sdcard_block2mem_wishbonedmawriter_base1 = sdcard_block2mem_wishbonedmawriter_base0[63:2];
assign sdcard_block2mem_wishbonedmawriter_length1 = sdcard_block2mem_wishbonedmawriter_length0[31:2];
assign sdcard_block2mem_wishbonedmawriter_offset0 = sdcard_block2mem_wishbonedmawriter_offset1;
assign sdcard_block2mem_wishbonedmawriter_reset = (~sdcard_block2mem_wishbonedmawriter_enable);
assign sdcard_block2mem_wishbonedmawriter_base0 = sdcard_block2mem_wishbonedmawriter_base_storage;
assign sdcard_block2mem_wishbonedmawriter_length0 = sdcard_block2mem_wishbonedmawriter_length_storage;
assign sdcard_block2mem_wishbonedmawriter_enable = sdcard_block2mem_wishbonedmawriter_enable_storage;
assign sdcard_block2mem_wishbonedmawriter_loop = sdcard_block2mem_wishbonedmawriter_loop_storage;
assign sdcard_block2mem_wishbonedmawriter_done_status = sdcard_block2mem_wishbonedmawriter_done;
assign sdcard_block2mem_wishbonedmawriter_offset_status = sdcard_block2mem_wishbonedmawriter_offset0;
always @(*) begin
    sdblock2memdma_next_state <= 2'd0;
    sdcard_block2mem_sink_sink_last1 <= 1'd0;
    sdcard_block2mem_sink_sink_payload_address <= 32'd0;
    sdcard_block2mem_sink_sink_payload_data1 <= 32'd0;
    sdcard_block2mem_sink_sink_valid1 <= 1'd0;
    sdcard_block2mem_wishbonedmawriter_done <= 1'd0;
    sdcard_block2mem_wishbonedmawriter_offset1_sdblock2memdma_next_value <= 32'd0;
    sdcard_block2mem_wishbonedmawriter_offset1_sdblock2memdma_next_value_ce <= 1'd0;
    sdcard_block2mem_wishbonedmawriter_sink_ready <= 1'd0;
    sdblock2memdma_next_state <= sdblock2memdma_state;
    case (sdblock2memdma_state)
        1'd1: begin
            sdcard_block2mem_sink_sink_valid1 <= sdcard_block2mem_wishbonedmawriter_sink_valid;
            sdcard_block2mem_sink_sink_last1 <= (sdcard_block2mem_wishbonedmawriter_sink_last | ((sdcard_block2mem_wishbonedmawriter_offset1 + 1'd1) == sdcard_block2mem_wishbonedmawriter_length1));
            sdcard_block2mem_sink_sink_payload_address <= (sdcard_block2mem_wishbonedmawriter_base1 + sdcard_block2mem_wishbonedmawriter_offset1);
            sdcard_block2mem_sink_sink_payload_data1 <= sdcard_block2mem_wishbonedmawriter_sink_payload_data;
            sdcard_block2mem_wishbonedmawriter_sink_ready <= sdcard_block2mem_sink_sink_ready1;
            if ((sdcard_block2mem_wishbonedmawriter_sink_valid & sdcard_block2mem_wishbonedmawriter_sink_ready)) begin
                sdcard_block2mem_wishbonedmawriter_offset1_sdblock2memdma_next_value <= (sdcard_block2mem_wishbonedmawriter_offset1 + 1'd1);
                sdcard_block2mem_wishbonedmawriter_offset1_sdblock2memdma_next_value_ce <= 1'd1;
                if (sdcard_block2mem_sink_sink_last1) begin
                    if (sdcard_block2mem_wishbonedmawriter_loop) begin
                        sdcard_block2mem_wishbonedmawriter_offset1_sdblock2memdma_next_value <= 1'd0;
                        sdcard_block2mem_wishbonedmawriter_offset1_sdblock2memdma_next_value_ce <= 1'd1;
                    end else begin
                        sdblock2memdma_next_state <= 2'd2;
                    end
                end
            end
        end
        2'd2: begin
            sdcard_block2mem_wishbonedmawriter_done <= 1'd1;
        end
        default: begin
            sdcard_block2mem_wishbonedmawriter_sink_ready <= 1'd1;
            sdcard_block2mem_wishbonedmawriter_offset1_sdblock2memdma_next_value <= 1'd0;
            sdcard_block2mem_wishbonedmawriter_offset1_sdblock2memdma_next_value_ce <= 1'd1;
            sdblock2memdma_next_state <= 1'd1;
        end
    endcase
end
assign sdcard_mem2block_converter_converter_sink_valid = sdcard_mem2block_dma_source_source_valid;
assign sdcard_mem2block_dma_source_source_ready = sdcard_mem2block_converter_converter_sink_ready;
assign sdcard_mem2block_converter_converter_sink_first = sdcard_mem2block_dma_source_source_first;
assign sdcard_mem2block_converter_converter_sink_last = sdcard_mem2block_dma_source_source_last;
assign sdcard_mem2block_converter_converter_sink_payload_data = sdcard_mem2block_dma_source_source_payload_data;
assign sdcard_mem2block_fifo_sink_valid = sdcard_mem2block_converter_source_source_valid;
assign sdcard_mem2block_converter_source_source_ready = sdcard_mem2block_fifo_sink_ready;
assign sdcard_mem2block_fifo_sink_first = sdcard_mem2block_converter_source_source_first;
assign sdcard_mem2block_fifo_sink_last = sdcard_mem2block_converter_source_source_last;
assign sdcard_mem2block_fifo_sink_payload_data = sdcard_mem2block_converter_source_source_payload_data;
assign sdcard_mem2block_source_source_valid = sdcard_mem2block_fifo_source_valid;
assign sdcard_mem2block_fifo_source_ready = sdcard_mem2block_source_source_ready;
assign sdcard_mem2block_source_source_first = sdcard_mem2block_fifo_source_first;
assign sdcard_mem2block_source_source_payload_data = sdcard_mem2block_fifo_source_payload_data;
always @(*) begin
    sdcard_mem2block_source_source_last <= 1'd0;
    sdcard_mem2block_source_source_last <= sdcard_mem2block_fifo_source_last;
    if ((sdcard_mem2block_count == 9'd511)) begin
        sdcard_mem2block_source_source_last <= 1'd1;
    end
end
assign interface1_bus_stb = (sdcard_mem2block_dma_sink_sink_valid & sdcard_mem2block_dma_fifo_sink_ready);
assign interface1_bus_cyc = (sdcard_mem2block_dma_sink_sink_valid & sdcard_mem2block_dma_fifo_sink_ready);
assign interface1_bus_we = 1'd0;
assign interface1_bus_sel = 4'd15;
assign interface1_bus_adr = sdcard_mem2block_dma_sink_sink_payload_address;
assign sdcard_mem2block_dma_fifo_sink_last = sdcard_mem2block_dma_sink_sink_last;
assign sdcard_mem2block_dma_fifo_sink_payload_data = {interface1_bus_dat_r[7:0], interface1_bus_dat_r[15:8], interface1_bus_dat_r[23:16], interface1_bus_dat_r[31:24]};
always @(*) begin
    sdcard_mem2block_dma_fifo_sink_valid <= 1'd0;
    sdcard_mem2block_dma_sink_sink_ready <= 1'd0;
    if ((interface1_bus_stb & interface1_bus_ack)) begin
        sdcard_mem2block_dma_sink_sink_ready <= 1'd1;
        sdcard_mem2block_dma_fifo_sink_valid <= 1'd1;
    end
end
assign sdcard_mem2block_dma_source_source_valid = sdcard_mem2block_dma_fifo_source_valid;
assign sdcard_mem2block_dma_fifo_source_ready = sdcard_mem2block_dma_source_source_ready;
assign sdcard_mem2block_dma_source_source_first = sdcard_mem2block_dma_fifo_source_first;
assign sdcard_mem2block_dma_source_source_last = sdcard_mem2block_dma_fifo_source_last;
assign sdcard_mem2block_dma_source_source_payload_data = sdcard_mem2block_dma_fifo_source_payload_data;
assign sdcard_mem2block_dma_base1 = sdcard_mem2block_dma_base0[63:2];
assign sdcard_mem2block_dma_length1 = sdcard_mem2block_dma_length0[31:2];
assign sdcard_mem2block_dma_offset0 = sdcard_mem2block_dma_offset1;
assign sdcard_mem2block_dma_reset = (~sdcard_mem2block_dma_enable);
assign sdcard_mem2block_dma_base0 = sdcard_mem2block_dma_base_storage;
assign sdcard_mem2block_dma_length0 = sdcard_mem2block_dma_length_storage;
assign sdcard_mem2block_dma_enable = sdcard_mem2block_dma_enable_storage;
assign sdcard_mem2block_dma_loop = sdcard_mem2block_dma_loop_storage;
assign sdcard_mem2block_dma_done_status = sdcard_mem2block_dma_done;
assign sdcard_mem2block_dma_offset_status = sdcard_mem2block_dma_offset0;
assign sdcard_mem2block_dma_fifo_syncfifo_din = {sdcard_mem2block_dma_fifo_fifo_in_last, sdcard_mem2block_dma_fifo_fifo_in_first, sdcard_mem2block_dma_fifo_fifo_in_payload_data};
assign {sdcard_mem2block_dma_fifo_fifo_out_last, sdcard_mem2block_dma_fifo_fifo_out_first, sdcard_mem2block_dma_fifo_fifo_out_payload_data} = sdcard_mem2block_dma_fifo_syncfifo_dout;
assign sdcard_mem2block_dma_fifo_sink_ready = sdcard_mem2block_dma_fifo_syncfifo_writable;
assign sdcard_mem2block_dma_fifo_syncfifo_we = sdcard_mem2block_dma_fifo_sink_valid;
assign sdcard_mem2block_dma_fifo_fifo_in_first = sdcard_mem2block_dma_fifo_sink_first;
assign sdcard_mem2block_dma_fifo_fifo_in_last = sdcard_mem2block_dma_fifo_sink_last;
assign sdcard_mem2block_dma_fifo_fifo_in_payload_data = sdcard_mem2block_dma_fifo_sink_payload_data;
assign sdcard_mem2block_dma_fifo_source_valid = sdcard_mem2block_dma_fifo_syncfifo_readable;
assign sdcard_mem2block_dma_fifo_source_first = sdcard_mem2block_dma_fifo_fifo_out_first;
assign sdcard_mem2block_dma_fifo_source_last = sdcard_mem2block_dma_fifo_fifo_out_last;
assign sdcard_mem2block_dma_fifo_source_payload_data = sdcard_mem2block_dma_fifo_fifo_out_payload_data;
assign sdcard_mem2block_dma_fifo_syncfifo_re = sdcard_mem2block_dma_fifo_source_ready;
always @(*) begin
    sdcard_mem2block_dma_fifo_wrport_adr <= 4'd0;
    if (sdcard_mem2block_dma_fifo_replace) begin
        sdcard_mem2block_dma_fifo_wrport_adr <= (sdcard_mem2block_dma_fifo_produce - 1'd1);
    end else begin
        sdcard_mem2block_dma_fifo_wrport_adr <= sdcard_mem2block_dma_fifo_produce;
    end
end
assign sdcard_mem2block_dma_fifo_wrport_dat_w = sdcard_mem2block_dma_fifo_syncfifo_din;
assign sdcard_mem2block_dma_fifo_wrport_we = (sdcard_mem2block_dma_fifo_syncfifo_we & (sdcard_mem2block_dma_fifo_syncfifo_writable | sdcard_mem2block_dma_fifo_replace));
assign sdcard_mem2block_dma_fifo_do_read = (sdcard_mem2block_dma_fifo_syncfifo_readable & sdcard_mem2block_dma_fifo_syncfifo_re);
assign sdcard_mem2block_dma_fifo_rdport_adr = sdcard_mem2block_dma_fifo_consume;
assign sdcard_mem2block_dma_fifo_syncfifo_dout = sdcard_mem2block_dma_fifo_rdport_dat_r;
assign sdcard_mem2block_dma_fifo_syncfifo_writable = (sdcard_mem2block_dma_fifo_level != 5'd16);
assign sdcard_mem2block_dma_fifo_syncfifo_readable = (sdcard_mem2block_dma_fifo_level != 1'd0);
always @(*) begin
    sdcard_mem2block_dma_done <= 1'd0;
    sdcard_mem2block_dma_offset1_sdmem2blockdma_next_value <= 32'd0;
    sdcard_mem2block_dma_offset1_sdmem2blockdma_next_value_ce <= 1'd0;
    sdcard_mem2block_dma_sink_sink_last <= 1'd0;
    sdcard_mem2block_dma_sink_sink_payload_address <= 32'd0;
    sdcard_mem2block_dma_sink_sink_valid <= 1'd0;
    sdmem2blockdma_next_state <= 2'd0;
    sdmem2blockdma_next_state <= sdmem2blockdma_state;
    case (sdmem2blockdma_state)
        1'd1: begin
            sdcard_mem2block_dma_sink_sink_valid <= 1'd1;
            sdcard_mem2block_dma_sink_sink_last <= (sdcard_mem2block_dma_offset1 == (sdcard_mem2block_dma_length1 - 1'd1));
            sdcard_mem2block_dma_sink_sink_payload_address <= (sdcard_mem2block_dma_base1 + sdcard_mem2block_dma_offset1);
            if (sdcard_mem2block_dma_sink_sink_ready) begin
                sdcard_mem2block_dma_offset1_sdmem2blockdma_next_value <= (sdcard_mem2block_dma_offset1 + 1'd1);
                sdcard_mem2block_dma_offset1_sdmem2blockdma_next_value_ce <= 1'd1;
                if (sdcard_mem2block_dma_sink_sink_last) begin
                    if (sdcard_mem2block_dma_loop) begin
                        sdcard_mem2block_dma_offset1_sdmem2blockdma_next_value <= 1'd0;
                        sdcard_mem2block_dma_offset1_sdmem2blockdma_next_value_ce <= 1'd1;
                    end else begin
                        sdmem2blockdma_next_state <= 2'd2;
                    end
                end
            end
        end
        2'd2: begin
            sdcard_mem2block_dma_done <= 1'd1;
        end
        default: begin
            sdcard_mem2block_dma_offset1_sdmem2blockdma_next_value <= 1'd0;
            sdcard_mem2block_dma_offset1_sdmem2blockdma_next_value_ce <= 1'd1;
            sdmem2blockdma_next_state <= 1'd1;
        end
    endcase
end
assign sdcard_mem2block_converter_source_source_valid = sdcard_mem2block_converter_converter_source_valid;
assign sdcard_mem2block_converter_converter_source_ready = sdcard_mem2block_converter_source_source_ready;
assign sdcard_mem2block_converter_source_source_first = sdcard_mem2block_converter_converter_source_first;
assign sdcard_mem2block_converter_source_source_last = sdcard_mem2block_converter_converter_source_last;
assign sdcard_mem2block_converter_source_source_payload_data = sdcard_mem2block_converter_converter_source_payload_data;
assign sdcard_mem2block_converter_converter_first = (sdcard_mem2block_converter_converter_mux == 1'd0);
assign sdcard_mem2block_converter_converter_last = (sdcard_mem2block_converter_converter_mux == 2'd3);
assign sdcard_mem2block_converter_converter_source_valid = sdcard_mem2block_converter_converter_sink_valid;
assign sdcard_mem2block_converter_converter_source_first = (sdcard_mem2block_converter_converter_sink_first & sdcard_mem2block_converter_converter_first);
assign sdcard_mem2block_converter_converter_source_last = (sdcard_mem2block_converter_converter_sink_last & sdcard_mem2block_converter_converter_last);
assign sdcard_mem2block_converter_converter_sink_ready = (sdcard_mem2block_converter_converter_last & sdcard_mem2block_converter_converter_source_ready);
always @(*) begin
    sdcard_mem2block_converter_converter_source_payload_data <= 8'd0;
    case (sdcard_mem2block_converter_converter_mux)
        1'd0: begin
            sdcard_mem2block_converter_converter_source_payload_data <= sdcard_mem2block_converter_converter_sink_payload_data[31:24];
        end
        1'd1: begin
            sdcard_mem2block_converter_converter_source_payload_data <= sdcard_mem2block_converter_converter_sink_payload_data[23:16];
        end
        2'd2: begin
            sdcard_mem2block_converter_converter_source_payload_data <= sdcard_mem2block_converter_converter_sink_payload_data[15:8];
        end
        default: begin
            sdcard_mem2block_converter_converter_source_payload_data <= sdcard_mem2block_converter_converter_sink_payload_data[7:0];
        end
    endcase
end
assign sdcard_mem2block_converter_converter_source_payload_valid_token_count = sdcard_mem2block_converter_converter_last;
assign sdcard_mem2block_fifo_syncfifo_din = {sdcard_mem2block_fifo_fifo_in_last, sdcard_mem2block_fifo_fifo_in_first, sdcard_mem2block_fifo_fifo_in_payload_data};
assign {sdcard_mem2block_fifo_fifo_out_last, sdcard_mem2block_fifo_fifo_out_first, sdcard_mem2block_fifo_fifo_out_payload_data} = sdcard_mem2block_fifo_syncfifo_dout;
assign sdcard_mem2block_fifo_sink_ready = sdcard_mem2block_fifo_syncfifo_writable;
assign sdcard_mem2block_fifo_syncfifo_we = sdcard_mem2block_fifo_sink_valid;
assign sdcard_mem2block_fifo_fifo_in_first = sdcard_mem2block_fifo_sink_first;
assign sdcard_mem2block_fifo_fifo_in_last = sdcard_mem2block_fifo_sink_last;
assign sdcard_mem2block_fifo_fifo_in_payload_data = sdcard_mem2block_fifo_sink_payload_data;
assign sdcard_mem2block_fifo_source_valid = sdcard_mem2block_fifo_readable;
assign sdcard_mem2block_fifo_source_first = sdcard_mem2block_fifo_fifo_out_first;
assign sdcard_mem2block_fifo_source_last = sdcard_mem2block_fifo_fifo_out_last;
assign sdcard_mem2block_fifo_source_payload_data = sdcard_mem2block_fifo_fifo_out_payload_data;
assign sdcard_mem2block_fifo_re = sdcard_mem2block_fifo_source_ready;
assign sdcard_mem2block_fifo_syncfifo_re = (sdcard_mem2block_fifo_syncfifo_readable & ((~sdcard_mem2block_fifo_readable) | sdcard_mem2block_fifo_re));
assign sdcard_mem2block_fifo_level1 = (sdcard_mem2block_fifo_level0 + sdcard_mem2block_fifo_readable);
always @(*) begin
    sdcard_mem2block_fifo_wrport_adr <= 9'd0;
    if (sdcard_mem2block_fifo_replace) begin
        sdcard_mem2block_fifo_wrport_adr <= (sdcard_mem2block_fifo_produce - 1'd1);
    end else begin
        sdcard_mem2block_fifo_wrport_adr <= sdcard_mem2block_fifo_produce;
    end
end
assign sdcard_mem2block_fifo_wrport_dat_w = sdcard_mem2block_fifo_syncfifo_din;
assign sdcard_mem2block_fifo_wrport_we = (sdcard_mem2block_fifo_syncfifo_we & (sdcard_mem2block_fifo_syncfifo_writable | sdcard_mem2block_fifo_replace));
assign sdcard_mem2block_fifo_do_read = (sdcard_mem2block_fifo_syncfifo_readable & sdcard_mem2block_fifo_syncfifo_re);
assign sdcard_mem2block_fifo_rdport_adr = sdcard_mem2block_fifo_consume;
assign sdcard_mem2block_fifo_syncfifo_dout = sdcard_mem2block_fifo_rdport_dat_r;
assign sdcard_mem2block_fifo_rdport_re = sdcard_mem2block_fifo_do_read;
assign sdcard_mem2block_fifo_syncfifo_writable = (sdcard_mem2block_fifo_level0 != 10'd512);
assign sdcard_mem2block_fifo_syncfifo_readable = (sdcard_mem2block_fifo_level0 != 1'd0);
assign eventmanager_card_detect0 = card_detect_status1;
assign eventmanager_card_detect1 = card_detect_pending;
always @(*) begin
    card_detect_clear <= 1'd0;
    if ((eventmanager_pending_re & eventmanager_pending_r[0])) begin
        card_detect_clear <= 1'd1;
    end
end
assign eventmanager_block2mem_dma0 = block2mem_dma_status;
assign eventmanager_block2mem_dma1 = block2mem_dma_pending;
always @(*) begin
    block2mem_dma_clear <= 1'd0;
    if ((eventmanager_pending_re & eventmanager_pending_r[1])) begin
        block2mem_dma_clear <= 1'd1;
    end
end
assign eventmanager_mem2block_dma0 = mem2block_dma_status;
assign eventmanager_mem2block_dma1 = mem2block_dma_pending;
always @(*) begin
    mem2block_dma_clear <= 1'd0;
    if ((eventmanager_pending_re & eventmanager_pending_r[2])) begin
        mem2block_dma_clear <= 1'd1;
    end
end
assign eventmanager_cmd_done0 = cmd_done_status;
assign eventmanager_cmd_done1 = cmd_done_pending;
always @(*) begin
    cmd_done_clear <= 1'd0;
    if ((eventmanager_pending_re & eventmanager_pending_r[3])) begin
        cmd_done_clear <= 1'd1;
    end
end
assign sdcard_irq_irq = ((((eventmanager_pending_status[0] & eventmanager_enable_storage[0]) | (eventmanager_pending_status[1] & eventmanager_enable_storage[1])) | (eventmanager_pending_status[2] & eventmanager_enable_storage[2])) | (eventmanager_pending_status[3] & eventmanager_enable_storage[3]));
assign card_detect_status1 = 1'd0;
assign block2mem_dma_status = 1'd0;
assign mem2block_dma_status = 1'd0;
assign cmd_done_status = cmd_done_trigger;
assign cmd_done_pending = cmd_done_trigger;
always @(*) begin
    interface0_ack <= 1'd0;
    interface0_dat_r <= 32'd0;
    interface1_adr_wishbone2csr_next_value1 <= 14'd0;
    interface1_adr_wishbone2csr_next_value_ce1 <= 1'd0;
    interface1_dat_w_wishbone2csr_next_value0 <= 32'd0;
    interface1_dat_w_wishbone2csr_next_value_ce0 <= 1'd0;
    interface1_re_wishbone2csr_next_value2 <= 1'd0;
    interface1_re_wishbone2csr_next_value_ce2 <= 1'd0;
    interface1_we_wishbone2csr_next_value3 <= 1'd0;
    interface1_we_wishbone2csr_next_value_ce3 <= 1'd0;
    wishbone2csr_next_state <= 2'd0;
    wishbone2csr_next_state <= wishbone2csr_state;
    case (wishbone2csr_state)
        1'd1: begin
            interface1_adr_wishbone2csr_next_value1 <= 1'd0;
            interface1_adr_wishbone2csr_next_value_ce1 <= 1'd1;
            interface1_re_wishbone2csr_next_value2 <= 1'd0;
            interface1_re_wishbone2csr_next_value_ce2 <= 1'd1;
            interface1_we_wishbone2csr_next_value3 <= 1'd0;
            interface1_we_wishbone2csr_next_value_ce3 <= 1'd1;
            wishbone2csr_next_state <= 2'd2;
        end
        2'd2: begin
            interface0_ack <= 1'd1;
            interface0_dat_r <= interface1_dat_r;
            wishbone2csr_next_state <= 1'd0;
        end
        default: begin
            interface1_dat_w_wishbone2csr_next_value0 <= interface0_dat_w;
            interface1_dat_w_wishbone2csr_next_value_ce0 <= 1'd1;
            if ((interface0_cyc & interface0_stb)) begin
                interface1_adr_wishbone2csr_next_value1 <= interface0_adr[29:0];
                interface1_adr_wishbone2csr_next_value_ce1 <= 1'd1;
                interface1_re_wishbone2csr_next_value2 <= ((~interface0_we) & (interface0_sel != 1'd0));
                interface1_re_wishbone2csr_next_value_ce2 <= 1'd1;
                interface1_we_wishbone2csr_next_value3 <= (interface0_we & (interface0_sel != 1'd0));
                interface1_we_wishbone2csr_next_value_ce3 <= 1'd1;
                wishbone2csr_next_state <= 1'd1;
            end
        end
    endcase
end
assign csr_bankarray_csrbank0_sel = (csr_bankarray_interface0_bank_bus_adr[13:9] == 1'd0);
assign csr_bankarray_csrbank0_in10_r = csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank0_in10_re <= 1'd0;
    csr_bankarray_csrbank0_in10_we <= 1'd0;
    if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank0_in10_re <= csr_bankarray_interface0_bank_bus_we;
        csr_bankarray_csrbank0_in10_we <= csr_bankarray_interface0_bank_bus_re;
    end
end
assign csr_bankarray_csrbank0_in20_r = csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank0_in20_re <= 1'd0;
    csr_bankarray_csrbank0_in20_we <= 1'd0;
    if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank0_in20_re <= csr_bankarray_interface0_bank_bus_we;
        csr_bankarray_csrbank0_in20_we <= csr_bankarray_interface0_bank_bus_re;
    end
end
assign csr_bankarray_csrbank0_result_r = csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank0_result_re <= 1'd0;
    csr_bankarray_csrbank0_result_we <= 1'd0;
    if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank0_result_re <= csr_bankarray_interface0_bank_bus_we;
        csr_bankarray_csrbank0_result_we <= csr_bankarray_interface0_bank_bus_re;
    end
end
assign csr_bankarray_csrbank0_in10_w = in1_storage[31:0];
assign csr_bankarray_csrbank0_in20_w = in2_storage[31:0];
assign csr_bankarray_csrbank0_result_w = result_status[31:0];
assign result_we = csr_bankarray_csrbank0_result_we;
assign csr_bankarray_csrbank1_sel = (csr_bankarray_interface1_bank_bus_adr[13:9] == 1'd1);
assign csr_bankarray_csrbank1_reset0_r = csr_bankarray_interface1_bank_bus_dat_w[1:0];
always @(*) begin
    csr_bankarray_csrbank1_reset0_re <= 1'd0;
    csr_bankarray_csrbank1_reset0_we <= 1'd0;
    if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank1_reset0_re <= csr_bankarray_interface1_bank_bus_we;
        csr_bankarray_csrbank1_reset0_we <= csr_bankarray_interface1_bank_bus_re;
    end
end
assign csr_bankarray_csrbank1_scratch0_r = csr_bankarray_interface1_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank1_scratch0_re <= 1'd0;
    csr_bankarray_csrbank1_scratch0_we <= 1'd0;
    if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank1_scratch0_re <= csr_bankarray_interface1_bank_bus_we;
        csr_bankarray_csrbank1_scratch0_we <= csr_bankarray_interface1_bank_bus_re;
    end
end
assign csr_bankarray_csrbank1_bus_errors_r = csr_bankarray_interface1_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank1_bus_errors_re <= 1'd0;
    csr_bankarray_csrbank1_bus_errors_we <= 1'd0;
    if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank1_bus_errors_re <= csr_bankarray_interface1_bank_bus_we;
        csr_bankarray_csrbank1_bus_errors_we <= csr_bankarray_interface1_bank_bus_re;
    end
end
always @(*) begin
    soclinux_soc_rst <= 1'd0;
    if (soclinux_reset_re) begin
        soclinux_soc_rst <= soclinux_reset_storage[0];
    end
end
assign soclinux_cpu_rst = soclinux_reset_storage[1];
assign csr_bankarray_csrbank1_reset0_w = soclinux_reset_storage[1:0];
assign csr_bankarray_csrbank1_scratch0_w = soclinux_scratch_storage[31:0];
assign csr_bankarray_csrbank1_bus_errors_w = soclinux_bus_errors_status[31:0];
assign soclinux_bus_errors_we = csr_bankarray_csrbank1_bus_errors_we;
assign csr_bankarray_csrbank2_sel = (csr_bankarray_interface2_bank_bus_adr[13:9] == 3'd4);
assign csr_bankarray_csrbank2_rst0_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank2_rst0_re <= 1'd0;
    csr_bankarray_csrbank2_rst0_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank2_rst0_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_rst0_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign csr_bankarray_csrbank2_dly_sel0_r = csr_bankarray_interface2_bank_bus_dat_w[3:0];
always @(*) begin
    csr_bankarray_csrbank2_dly_sel0_re <= 1'd0;
    csr_bankarray_csrbank2_dly_sel0_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank2_dly_sel0_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_dly_sel0_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign csr_bankarray_csrbank2_half_sys8x_taps0_r = csr_bankarray_interface2_bank_bus_dat_w[4:0];
always @(*) begin
    csr_bankarray_csrbank2_half_sys8x_taps0_re <= 1'd0;
    csr_bankarray_csrbank2_half_sys8x_taps0_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank2_half_sys8x_taps0_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_half_sys8x_taps0_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign csr_bankarray_csrbank2_wlevel_en0_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank2_wlevel_en0_re <= 1'd0;
    csr_bankarray_csrbank2_wlevel_en0_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 2'd3))) begin
        csr_bankarray_csrbank2_wlevel_en0_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_wlevel_en0_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign v7ddrphy_wlevel_strobe_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
    v7ddrphy_wlevel_strobe_re <= 1'd0;
    v7ddrphy_wlevel_strobe_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 3'd4))) begin
        v7ddrphy_wlevel_strobe_re <= csr_bankarray_interface2_bank_bus_we;
        v7ddrphy_wlevel_strobe_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign v7ddrphy_cdly_rst_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
    v7ddrphy_cdly_rst_re <= 1'd0;
    v7ddrphy_cdly_rst_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 3'd5))) begin
        v7ddrphy_cdly_rst_re <= csr_bankarray_interface2_bank_bus_we;
        v7ddrphy_cdly_rst_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign v7ddrphy_cdly_inc_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
    v7ddrphy_cdly_inc_re <= 1'd0;
    v7ddrphy_cdly_inc_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 3'd6))) begin
        v7ddrphy_cdly_inc_re <= csr_bankarray_interface2_bank_bus_we;
        v7ddrphy_cdly_inc_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign v7ddrphy_rdly_dq_rst_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
    v7ddrphy_rdly_dq_rst_re <= 1'd0;
    v7ddrphy_rdly_dq_rst_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 3'd7))) begin
        v7ddrphy_rdly_dq_rst_re <= csr_bankarray_interface2_bank_bus_we;
        v7ddrphy_rdly_dq_rst_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign v7ddrphy_rdly_dq_inc_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
    v7ddrphy_rdly_dq_inc_re <= 1'd0;
    v7ddrphy_rdly_dq_inc_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 4'd8))) begin
        v7ddrphy_rdly_dq_inc_re <= csr_bankarray_interface2_bank_bus_we;
        v7ddrphy_rdly_dq_inc_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign v7ddrphy_rdly_dq_bitslip_rst_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
    v7ddrphy_rdly_dq_bitslip_rst_re <= 1'd0;
    v7ddrphy_rdly_dq_bitslip_rst_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 4'd9))) begin
        v7ddrphy_rdly_dq_bitslip_rst_re <= csr_bankarray_interface2_bank_bus_we;
        v7ddrphy_rdly_dq_bitslip_rst_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign v7ddrphy_rdly_dq_bitslip_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
    v7ddrphy_rdly_dq_bitslip_re <= 1'd0;
    v7ddrphy_rdly_dq_bitslip_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 4'd10))) begin
        v7ddrphy_rdly_dq_bitslip_re <= csr_bankarray_interface2_bank_bus_we;
        v7ddrphy_rdly_dq_bitslip_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign v7ddrphy_wdly_dq_rst_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
    v7ddrphy_wdly_dq_rst_re <= 1'd0;
    v7ddrphy_wdly_dq_rst_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 4'd11))) begin
        v7ddrphy_wdly_dq_rst_re <= csr_bankarray_interface2_bank_bus_we;
        v7ddrphy_wdly_dq_rst_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign v7ddrphy_wdly_dq_inc_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
    v7ddrphy_wdly_dq_inc_re <= 1'd0;
    v7ddrphy_wdly_dq_inc_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 4'd12))) begin
        v7ddrphy_wdly_dq_inc_re <= csr_bankarray_interface2_bank_bus_we;
        v7ddrphy_wdly_dq_inc_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign v7ddrphy_wdly_dqs_rst_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
    v7ddrphy_wdly_dqs_rst_re <= 1'd0;
    v7ddrphy_wdly_dqs_rst_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 4'd13))) begin
        v7ddrphy_wdly_dqs_rst_re <= csr_bankarray_interface2_bank_bus_we;
        v7ddrphy_wdly_dqs_rst_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign v7ddrphy_wdly_dqs_inc_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
    v7ddrphy_wdly_dqs_inc_re <= 1'd0;
    v7ddrphy_wdly_dqs_inc_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 4'd14))) begin
        v7ddrphy_wdly_dqs_inc_re <= csr_bankarray_interface2_bank_bus_we;
        v7ddrphy_wdly_dqs_inc_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign v7ddrphy_wdly_dq_bitslip_rst_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
    v7ddrphy_wdly_dq_bitslip_rst_re <= 1'd0;
    v7ddrphy_wdly_dq_bitslip_rst_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 4'd15))) begin
        v7ddrphy_wdly_dq_bitslip_rst_re <= csr_bankarray_interface2_bank_bus_we;
        v7ddrphy_wdly_dq_bitslip_rst_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign v7ddrphy_wdly_dq_bitslip_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
    v7ddrphy_wdly_dq_bitslip_re <= 1'd0;
    v7ddrphy_wdly_dq_bitslip_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 5'd16))) begin
        v7ddrphy_wdly_dq_bitslip_re <= csr_bankarray_interface2_bank_bus_we;
        v7ddrphy_wdly_dq_bitslip_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign csr_bankarray_csrbank2_rdphase0_r = csr_bankarray_interface2_bank_bus_dat_w[1:0];
always @(*) begin
    csr_bankarray_csrbank2_rdphase0_re <= 1'd0;
    csr_bankarray_csrbank2_rdphase0_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 5'd17))) begin
        csr_bankarray_csrbank2_rdphase0_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_rdphase0_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign csr_bankarray_csrbank2_wrphase0_r = csr_bankarray_interface2_bank_bus_dat_w[1:0];
always @(*) begin
    csr_bankarray_csrbank2_wrphase0_re <= 1'd0;
    csr_bankarray_csrbank2_wrphase0_we <= 1'd0;
    if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 5'd18))) begin
        csr_bankarray_csrbank2_wrphase0_re <= csr_bankarray_interface2_bank_bus_we;
        csr_bankarray_csrbank2_wrphase0_we <= csr_bankarray_interface2_bank_bus_re;
    end
end
assign csr_bankarray_csrbank2_rst0_w = v7ddrphy_rst_storage;
assign csr_bankarray_csrbank2_dly_sel0_w = v7ddrphy_dly_sel_storage[3:0];
assign csr_bankarray_csrbank2_half_sys8x_taps0_w = v7ddrphy_half_sys8x_taps_storage[4:0];
assign csr_bankarray_csrbank2_wlevel_en0_w = v7ddrphy_wlevel_en_storage;
assign csr_bankarray_csrbank2_rdphase0_w = v7ddrphy_rdphase_storage[1:0];
assign csr_bankarray_csrbank2_wrphase0_w = v7ddrphy_wrphase_storage[1:0];
assign csr_bankarray_sel = (csr_bankarray_sram_bus_adr[13:9] == 3'd5);
always @(*) begin
    csr_bankarray_sram_bus_dat_r <= 32'd0;
    if (csr_bankarray_sel_r) begin
        csr_bankarray_sram_bus_dat_r <= csr_bankarray_dat_r;
    end
end
assign csr_bankarray_adr = csr_bankarray_sram_bus_adr[4:0];
assign csr_bankarray_csrbank3_sel = (csr_bankarray_interface3_bank_bus_adr[13:9] == 3'd6);
assign csr_bankarray_csrbank3_out0_r = csr_bankarray_interface3_bank_bus_dat_w[7:0];
always @(*) begin
    csr_bankarray_csrbank3_out0_re <= 1'd0;
    csr_bankarray_csrbank3_out0_we <= 1'd0;
    if ((csr_bankarray_csrbank3_sel & (csr_bankarray_interface3_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank3_out0_re <= csr_bankarray_interface3_bank_bus_we;
        csr_bankarray_csrbank3_out0_we <= csr_bankarray_interface3_bank_bus_re;
    end
end
assign csr_bankarray_csrbank3_out0_w = leds_storage[7:0];
assign csr_bankarray_csrbank4_sel = (csr_bankarray_interface4_bank_bus_adr[13:9] == 3'd7);
assign csr_bankarray_csrbank4_dma_base1_r = csr_bankarray_interface4_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank4_dma_base1_re <= 1'd0;
    csr_bankarray_csrbank4_dma_base1_we <= 1'd0;
    if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank4_dma_base1_re <= csr_bankarray_interface4_bank_bus_we;
        csr_bankarray_csrbank4_dma_base1_we <= csr_bankarray_interface4_bank_bus_re;
    end
end
assign csr_bankarray_csrbank4_dma_base0_r = csr_bankarray_interface4_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank4_dma_base0_re <= 1'd0;
    csr_bankarray_csrbank4_dma_base0_we <= 1'd0;
    if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank4_dma_base0_re <= csr_bankarray_interface4_bank_bus_we;
        csr_bankarray_csrbank4_dma_base0_we <= csr_bankarray_interface4_bank_bus_re;
    end
end
assign csr_bankarray_csrbank4_dma_length0_r = csr_bankarray_interface4_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank4_dma_length0_re <= 1'd0;
    csr_bankarray_csrbank4_dma_length0_we <= 1'd0;
    if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank4_dma_length0_re <= csr_bankarray_interface4_bank_bus_we;
        csr_bankarray_csrbank4_dma_length0_we <= csr_bankarray_interface4_bank_bus_re;
    end
end
assign csr_bankarray_csrbank4_dma_enable0_r = csr_bankarray_interface4_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank4_dma_enable0_re <= 1'd0;
    csr_bankarray_csrbank4_dma_enable0_we <= 1'd0;
    if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 2'd3))) begin
        csr_bankarray_csrbank4_dma_enable0_re <= csr_bankarray_interface4_bank_bus_we;
        csr_bankarray_csrbank4_dma_enable0_we <= csr_bankarray_interface4_bank_bus_re;
    end
end
assign csr_bankarray_csrbank4_dma_done_r = csr_bankarray_interface4_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank4_dma_done_re <= 1'd0;
    csr_bankarray_csrbank4_dma_done_we <= 1'd0;
    if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 3'd4))) begin
        csr_bankarray_csrbank4_dma_done_re <= csr_bankarray_interface4_bank_bus_we;
        csr_bankarray_csrbank4_dma_done_we <= csr_bankarray_interface4_bank_bus_re;
    end
end
assign csr_bankarray_csrbank4_dma_loop0_r = csr_bankarray_interface4_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank4_dma_loop0_re <= 1'd0;
    csr_bankarray_csrbank4_dma_loop0_we <= 1'd0;
    if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 3'd5))) begin
        csr_bankarray_csrbank4_dma_loop0_re <= csr_bankarray_interface4_bank_bus_we;
        csr_bankarray_csrbank4_dma_loop0_we <= csr_bankarray_interface4_bank_bus_re;
    end
end
assign csr_bankarray_csrbank4_dma_offset_r = csr_bankarray_interface4_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank4_dma_offset_re <= 1'd0;
    csr_bankarray_csrbank4_dma_offset_we <= 1'd0;
    if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 3'd6))) begin
        csr_bankarray_csrbank4_dma_offset_re <= csr_bankarray_interface4_bank_bus_we;
        csr_bankarray_csrbank4_dma_offset_we <= csr_bankarray_interface4_bank_bus_re;
    end
end
assign csr_bankarray_csrbank4_dma_base1_w = sdcard_block2mem_wishbonedmawriter_base_storage[63:32];
assign csr_bankarray_csrbank4_dma_base0_w = sdcard_block2mem_wishbonedmawriter_base_storage[31:0];
assign csr_bankarray_csrbank4_dma_length0_w = sdcard_block2mem_wishbonedmawriter_length_storage[31:0];
assign csr_bankarray_csrbank4_dma_enable0_w = sdcard_block2mem_wishbonedmawriter_enable_storage;
assign csr_bankarray_csrbank4_dma_done_w = sdcard_block2mem_wishbonedmawriter_done_status;
assign sdcard_block2mem_wishbonedmawriter_done_we = csr_bankarray_csrbank4_dma_done_we;
assign csr_bankarray_csrbank4_dma_loop0_w = sdcard_block2mem_wishbonedmawriter_loop_storage;
assign csr_bankarray_csrbank4_dma_offset_w = sdcard_block2mem_wishbonedmawriter_offset_status[31:0];
assign sdcard_block2mem_wishbonedmawriter_offset_we = csr_bankarray_csrbank4_dma_offset_we;
assign csr_bankarray_csrbank5_sel = (csr_bankarray_interface5_bank_bus_adr[13:9] == 4'd8);
assign csr_bankarray_csrbank5_cmd_argument0_r = csr_bankarray_interface5_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank5_cmd_argument0_re <= 1'd0;
    csr_bankarray_csrbank5_cmd_argument0_we <= 1'd0;
    if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank5_cmd_argument0_re <= csr_bankarray_interface5_bank_bus_we;
        csr_bankarray_csrbank5_cmd_argument0_we <= csr_bankarray_interface5_bank_bus_re;
    end
end
assign csr_bankarray_csrbank5_cmd_command0_r = csr_bankarray_interface5_bank_bus_dat_w[13:0];
always @(*) begin
    csr_bankarray_csrbank5_cmd_command0_re <= 1'd0;
    csr_bankarray_csrbank5_cmd_command0_we <= 1'd0;
    if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank5_cmd_command0_re <= csr_bankarray_interface5_bank_bus_we;
        csr_bankarray_csrbank5_cmd_command0_we <= csr_bankarray_interface5_bank_bus_re;
    end
end
assign csr_bankarray_csrbank5_cmd_send0_r = csr_bankarray_interface5_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank5_cmd_send0_re <= 1'd0;
    csr_bankarray_csrbank5_cmd_send0_we <= 1'd0;
    if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank5_cmd_send0_re <= csr_bankarray_interface5_bank_bus_we;
        csr_bankarray_csrbank5_cmd_send0_we <= csr_bankarray_interface5_bank_bus_re;
    end
end
assign csr_bankarray_csrbank5_cmd_response3_r = csr_bankarray_interface5_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank5_cmd_response3_re <= 1'd0;
    csr_bankarray_csrbank5_cmd_response3_we <= 1'd0;
    if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 2'd3))) begin
        csr_bankarray_csrbank5_cmd_response3_re <= csr_bankarray_interface5_bank_bus_we;
        csr_bankarray_csrbank5_cmd_response3_we <= csr_bankarray_interface5_bank_bus_re;
    end
end
assign csr_bankarray_csrbank5_cmd_response2_r = csr_bankarray_interface5_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank5_cmd_response2_re <= 1'd0;
    csr_bankarray_csrbank5_cmd_response2_we <= 1'd0;
    if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 3'd4))) begin
        csr_bankarray_csrbank5_cmd_response2_re <= csr_bankarray_interface5_bank_bus_we;
        csr_bankarray_csrbank5_cmd_response2_we <= csr_bankarray_interface5_bank_bus_re;
    end
end
assign csr_bankarray_csrbank5_cmd_response1_r = csr_bankarray_interface5_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank5_cmd_response1_re <= 1'd0;
    csr_bankarray_csrbank5_cmd_response1_we <= 1'd0;
    if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 3'd5))) begin
        csr_bankarray_csrbank5_cmd_response1_re <= csr_bankarray_interface5_bank_bus_we;
        csr_bankarray_csrbank5_cmd_response1_we <= csr_bankarray_interface5_bank_bus_re;
    end
end
assign csr_bankarray_csrbank5_cmd_response0_r = csr_bankarray_interface5_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank5_cmd_response0_re <= 1'd0;
    csr_bankarray_csrbank5_cmd_response0_we <= 1'd0;
    if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 3'd6))) begin
        csr_bankarray_csrbank5_cmd_response0_re <= csr_bankarray_interface5_bank_bus_we;
        csr_bankarray_csrbank5_cmd_response0_we <= csr_bankarray_interface5_bank_bus_re;
    end
end
assign csr_bankarray_csrbank5_cmd_event_r = csr_bankarray_interface5_bank_bus_dat_w[3:0];
always @(*) begin
    csr_bankarray_csrbank5_cmd_event_re <= 1'd0;
    csr_bankarray_csrbank5_cmd_event_we <= 1'd0;
    if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 3'd7))) begin
        csr_bankarray_csrbank5_cmd_event_re <= csr_bankarray_interface5_bank_bus_we;
        csr_bankarray_csrbank5_cmd_event_we <= csr_bankarray_interface5_bank_bus_re;
    end
end
assign csr_bankarray_csrbank5_data_event_r = csr_bankarray_interface5_bank_bus_dat_w[3:0];
always @(*) begin
    csr_bankarray_csrbank5_data_event_re <= 1'd0;
    csr_bankarray_csrbank5_data_event_we <= 1'd0;
    if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 4'd8))) begin
        csr_bankarray_csrbank5_data_event_re <= csr_bankarray_interface5_bank_bus_we;
        csr_bankarray_csrbank5_data_event_we <= csr_bankarray_interface5_bank_bus_re;
    end
end
assign csr_bankarray_csrbank5_block_length0_r = csr_bankarray_interface5_bank_bus_dat_w[9:0];
always @(*) begin
    csr_bankarray_csrbank5_block_length0_re <= 1'd0;
    csr_bankarray_csrbank5_block_length0_we <= 1'd0;
    if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 4'd9))) begin
        csr_bankarray_csrbank5_block_length0_re <= csr_bankarray_interface5_bank_bus_we;
        csr_bankarray_csrbank5_block_length0_we <= csr_bankarray_interface5_bank_bus_re;
    end
end
assign csr_bankarray_csrbank5_block_count0_r = csr_bankarray_interface5_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank5_block_count0_re <= 1'd0;
    csr_bankarray_csrbank5_block_count0_we <= 1'd0;
    if ((csr_bankarray_csrbank5_sel & (csr_bankarray_interface5_bank_bus_adr[8:0] == 4'd10))) begin
        csr_bankarray_csrbank5_block_count0_re <= csr_bankarray_interface5_bank_bus_we;
        csr_bankarray_csrbank5_block_count0_we <= csr_bankarray_interface5_bank_bus_re;
    end
end
assign csr_bankarray_csrbank5_cmd_argument0_w = sdcard_core_cmd_argument_storage[31:0];
assign sdcard_core_csrfield_cmd_type = sdcard_core_cmd_command_storage[1:0];
assign sdcard_core_csrfield_data_type = sdcard_core_cmd_command_storage[6:5];
assign sdcard_core_csrfield_cmd = sdcard_core_cmd_command_storage[13:8];
assign csr_bankarray_csrbank5_cmd_command0_w = sdcard_core_cmd_command_storage[13:0];
assign csr_bankarray_csrbank5_cmd_send0_w = sdcard_core_cmd_send_storage;
assign csr_bankarray_csrbank5_cmd_response3_w = sdcard_core_cmd_response_status[127:96];
assign csr_bankarray_csrbank5_cmd_response2_w = sdcard_core_cmd_response_status[95:64];
assign csr_bankarray_csrbank5_cmd_response1_w = sdcard_core_cmd_response_status[63:32];
assign csr_bankarray_csrbank5_cmd_response0_w = sdcard_core_cmd_response_status[31:0];
assign sdcard_core_cmd_response_we = csr_bankarray_csrbank5_cmd_response0_we;
always @(*) begin
    sdcard_core_cmd_event_status <= 4'd0;
    sdcard_core_cmd_event_status[0] <= sdcard_core_csrfield_done0;
    sdcard_core_cmd_event_status[1] <= sdcard_core_csrfield_error0;
    sdcard_core_cmd_event_status[2] <= sdcard_core_csrfield_timeout0;
    sdcard_core_cmd_event_status[3] <= sdcard_core_csrfield_crc0;
end
assign csr_bankarray_csrbank5_cmd_event_w = sdcard_core_cmd_event_status[3:0];
assign sdcard_core_cmd_event_we = csr_bankarray_csrbank5_cmd_event_we;
always @(*) begin
    sdcard_core_data_event_status <= 4'd0;
    sdcard_core_data_event_status[0] <= sdcard_core_csrfield_done1;
    sdcard_core_data_event_status[1] <= sdcard_core_csrfield_error1;
    sdcard_core_data_event_status[2] <= sdcard_core_csrfield_timeout1;
    sdcard_core_data_event_status[3] <= sdcard_core_csrfield_crc1;
end
assign csr_bankarray_csrbank5_data_event_w = sdcard_core_data_event_status[3:0];
assign sdcard_core_data_event_we = csr_bankarray_csrbank5_data_event_we;
assign csr_bankarray_csrbank5_block_length0_w = sdcard_core_block_length_storage[9:0];
assign csr_bankarray_csrbank5_block_count0_w = sdcard_core_block_count_storage[31:0];
assign csr_bankarray_csrbank6_sel = (csr_bankarray_interface6_bank_bus_adr[13:9] == 4'd9);
assign csr_bankarray_csrbank6_status_r = csr_bankarray_interface6_bank_bus_dat_w[3:0];
always @(*) begin
    csr_bankarray_csrbank6_status_re <= 1'd0;
    csr_bankarray_csrbank6_status_we <= 1'd0;
    if ((csr_bankarray_csrbank6_sel & (csr_bankarray_interface6_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank6_status_re <= csr_bankarray_interface6_bank_bus_we;
        csr_bankarray_csrbank6_status_we <= csr_bankarray_interface6_bank_bus_re;
    end
end
assign csr_bankarray_csrbank6_pending_r = csr_bankarray_interface6_bank_bus_dat_w[3:0];
always @(*) begin
    csr_bankarray_csrbank6_pending_re <= 1'd0;
    csr_bankarray_csrbank6_pending_we <= 1'd0;
    if ((csr_bankarray_csrbank6_sel & (csr_bankarray_interface6_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank6_pending_re <= csr_bankarray_interface6_bank_bus_we;
        csr_bankarray_csrbank6_pending_we <= csr_bankarray_interface6_bank_bus_re;
    end
end
assign csr_bankarray_csrbank6_enable0_r = csr_bankarray_interface6_bank_bus_dat_w[3:0];
always @(*) begin
    csr_bankarray_csrbank6_enable0_re <= 1'd0;
    csr_bankarray_csrbank6_enable0_we <= 1'd0;
    if ((csr_bankarray_csrbank6_sel & (csr_bankarray_interface6_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank6_enable0_re <= csr_bankarray_interface6_bank_bus_we;
        csr_bankarray_csrbank6_enable0_we <= csr_bankarray_interface6_bank_bus_re;
    end
end
always @(*) begin
    eventmanager_status_status <= 4'd0;
    eventmanager_status_status[0] <= eventmanager_card_detect0;
    eventmanager_status_status[1] <= eventmanager_block2mem_dma0;
    eventmanager_status_status[2] <= eventmanager_mem2block_dma0;
    eventmanager_status_status[3] <= eventmanager_cmd_done0;
end
assign csr_bankarray_csrbank6_status_w = eventmanager_status_status[3:0];
assign eventmanager_status_we = csr_bankarray_csrbank6_status_we;
always @(*) begin
    eventmanager_pending_status <= 4'd0;
    eventmanager_pending_status[0] <= eventmanager_card_detect1;
    eventmanager_pending_status[1] <= eventmanager_block2mem_dma1;
    eventmanager_pending_status[2] <= eventmanager_mem2block_dma1;
    eventmanager_pending_status[3] <= eventmanager_cmd_done1;
end
assign csr_bankarray_csrbank6_pending_w = eventmanager_pending_status[3:0];
assign eventmanager_pending_we = csr_bankarray_csrbank6_pending_we;
assign eventmanager_card_detect2 = eventmanager_enable_storage[0];
assign eventmanager_block2mem_dma2 = eventmanager_enable_storage[1];
assign eventmanager_mem2block_dma2 = eventmanager_enable_storage[2];
assign eventmanager_cmd_done2 = eventmanager_enable_storage[3];
assign csr_bankarray_csrbank6_enable0_w = eventmanager_enable_storage[3:0];
assign csr_bankarray_csrbank7_sel = (csr_bankarray_interface7_bank_bus_adr[13:9] == 4'd10);
assign csr_bankarray_csrbank7_dma_base1_r = csr_bankarray_interface7_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank7_dma_base1_re <= 1'd0;
    csr_bankarray_csrbank7_dma_base1_we <= 1'd0;
    if ((csr_bankarray_csrbank7_sel & (csr_bankarray_interface7_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank7_dma_base1_re <= csr_bankarray_interface7_bank_bus_we;
        csr_bankarray_csrbank7_dma_base1_we <= csr_bankarray_interface7_bank_bus_re;
    end
end
assign csr_bankarray_csrbank7_dma_base0_r = csr_bankarray_interface7_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank7_dma_base0_re <= 1'd0;
    csr_bankarray_csrbank7_dma_base0_we <= 1'd0;
    if ((csr_bankarray_csrbank7_sel & (csr_bankarray_interface7_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank7_dma_base0_re <= csr_bankarray_interface7_bank_bus_we;
        csr_bankarray_csrbank7_dma_base0_we <= csr_bankarray_interface7_bank_bus_re;
    end
end
assign csr_bankarray_csrbank7_dma_length0_r = csr_bankarray_interface7_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank7_dma_length0_re <= 1'd0;
    csr_bankarray_csrbank7_dma_length0_we <= 1'd0;
    if ((csr_bankarray_csrbank7_sel & (csr_bankarray_interface7_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank7_dma_length0_re <= csr_bankarray_interface7_bank_bus_we;
        csr_bankarray_csrbank7_dma_length0_we <= csr_bankarray_interface7_bank_bus_re;
    end
end
assign csr_bankarray_csrbank7_dma_enable0_r = csr_bankarray_interface7_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank7_dma_enable0_re <= 1'd0;
    csr_bankarray_csrbank7_dma_enable0_we <= 1'd0;
    if ((csr_bankarray_csrbank7_sel & (csr_bankarray_interface7_bank_bus_adr[8:0] == 2'd3))) begin
        csr_bankarray_csrbank7_dma_enable0_re <= csr_bankarray_interface7_bank_bus_we;
        csr_bankarray_csrbank7_dma_enable0_we <= csr_bankarray_interface7_bank_bus_re;
    end
end
assign csr_bankarray_csrbank7_dma_done_r = csr_bankarray_interface7_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank7_dma_done_re <= 1'd0;
    csr_bankarray_csrbank7_dma_done_we <= 1'd0;
    if ((csr_bankarray_csrbank7_sel & (csr_bankarray_interface7_bank_bus_adr[8:0] == 3'd4))) begin
        csr_bankarray_csrbank7_dma_done_re <= csr_bankarray_interface7_bank_bus_we;
        csr_bankarray_csrbank7_dma_done_we <= csr_bankarray_interface7_bank_bus_re;
    end
end
assign csr_bankarray_csrbank7_dma_loop0_r = csr_bankarray_interface7_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank7_dma_loop0_re <= 1'd0;
    csr_bankarray_csrbank7_dma_loop0_we <= 1'd0;
    if ((csr_bankarray_csrbank7_sel & (csr_bankarray_interface7_bank_bus_adr[8:0] == 3'd5))) begin
        csr_bankarray_csrbank7_dma_loop0_re <= csr_bankarray_interface7_bank_bus_we;
        csr_bankarray_csrbank7_dma_loop0_we <= csr_bankarray_interface7_bank_bus_re;
    end
end
assign csr_bankarray_csrbank7_dma_offset_r = csr_bankarray_interface7_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank7_dma_offset_re <= 1'd0;
    csr_bankarray_csrbank7_dma_offset_we <= 1'd0;
    if ((csr_bankarray_csrbank7_sel & (csr_bankarray_interface7_bank_bus_adr[8:0] == 3'd6))) begin
        csr_bankarray_csrbank7_dma_offset_re <= csr_bankarray_interface7_bank_bus_we;
        csr_bankarray_csrbank7_dma_offset_we <= csr_bankarray_interface7_bank_bus_re;
    end
end
assign csr_bankarray_csrbank7_dma_base1_w = sdcard_mem2block_dma_base_storage[63:32];
assign csr_bankarray_csrbank7_dma_base0_w = sdcard_mem2block_dma_base_storage[31:0];
assign csr_bankarray_csrbank7_dma_length0_w = sdcard_mem2block_dma_length_storage[31:0];
assign csr_bankarray_csrbank7_dma_enable0_w = sdcard_mem2block_dma_enable_storage;
assign csr_bankarray_csrbank7_dma_done_w = sdcard_mem2block_dma_done_status;
assign sdcard_mem2block_dma_done_we = csr_bankarray_csrbank7_dma_done_we;
assign csr_bankarray_csrbank7_dma_loop0_w = sdcard_mem2block_dma_loop_storage;
assign csr_bankarray_csrbank7_dma_offset_w = sdcard_mem2block_dma_offset_status[31:0];
assign sdcard_mem2block_dma_offset_we = csr_bankarray_csrbank7_dma_offset_we;
assign csr_bankarray_csrbank8_sel = (csr_bankarray_interface8_bank_bus_adr[13:9] == 4'd11);
assign csr_bankarray_csrbank8_card_detect_r = csr_bankarray_interface8_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank8_card_detect_re <= 1'd0;
    csr_bankarray_csrbank8_card_detect_we <= 1'd0;
    if ((csr_bankarray_csrbank8_sel & (csr_bankarray_interface8_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank8_card_detect_re <= csr_bankarray_interface8_bank_bus_we;
        csr_bankarray_csrbank8_card_detect_we <= csr_bankarray_interface8_bank_bus_re;
    end
end
assign csr_bankarray_csrbank8_clocker_divider0_r = csr_bankarray_interface8_bank_bus_dat_w[8:0];
always @(*) begin
    csr_bankarray_csrbank8_clocker_divider0_re <= 1'd0;
    csr_bankarray_csrbank8_clocker_divider0_we <= 1'd0;
    if ((csr_bankarray_csrbank8_sel & (csr_bankarray_interface8_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank8_clocker_divider0_re <= csr_bankarray_interface8_bank_bus_we;
        csr_bankarray_csrbank8_clocker_divider0_we <= csr_bankarray_interface8_bank_bus_re;
    end
end
assign init_initialize_r = csr_bankarray_interface8_bank_bus_dat_w[0];
always @(*) begin
    init_initialize_re <= 1'd0;
    init_initialize_we <= 1'd0;
    if ((csr_bankarray_csrbank8_sel & (csr_bankarray_interface8_bank_bus_adr[8:0] == 2'd2))) begin
        init_initialize_re <= csr_bankarray_interface8_bank_bus_we;
        init_initialize_we <= csr_bankarray_interface8_bank_bus_re;
    end
end
assign csr_bankarray_csrbank8_dataw_status_r = csr_bankarray_interface8_bank_bus_dat_w[2:0];
always @(*) begin
    csr_bankarray_csrbank8_dataw_status_re <= 1'd0;
    csr_bankarray_csrbank8_dataw_status_we <= 1'd0;
    if ((csr_bankarray_csrbank8_sel & (csr_bankarray_interface8_bank_bus_adr[8:0] == 2'd3))) begin
        csr_bankarray_csrbank8_dataw_status_re <= csr_bankarray_interface8_bank_bus_we;
        csr_bankarray_csrbank8_dataw_status_we <= csr_bankarray_interface8_bank_bus_re;
    end
end
assign csr_bankarray_csrbank8_card_detect_w = card_detect_status0;
assign card_detect_we = csr_bankarray_csrbank8_card_detect_we;
assign csr_bankarray_csrbank8_clocker_divider0_w = clocker_storage[8:0];
always @(*) begin
    dataw_status <= 3'd0;
    dataw_status[0] <= dataw_accepted0;
    dataw_status[1] <= dataw_crc_error0;
    dataw_status[2] <= dataw_write_error0;
end
assign csr_bankarray_csrbank8_dataw_status_w = dataw_status[2:0];
assign dataw_we = csr_bankarray_csrbank8_dataw_status_we;
assign csr_bankarray_csrbank9_sel = (csr_bankarray_interface9_bank_bus_adr[13:9] == 4'd12);
assign csr_bankarray_csrbank9_dfii_control0_r = csr_bankarray_interface9_bank_bus_dat_w[3:0];
always @(*) begin
    csr_bankarray_csrbank9_dfii_control0_re <= 1'd0;
    csr_bankarray_csrbank9_dfii_control0_we <= 1'd0;
    if ((csr_bankarray_csrbank9_sel & (csr_bankarray_interface9_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank9_dfii_control0_re <= csr_bankarray_interface9_bank_bus_we;
        csr_bankarray_csrbank9_dfii_control0_we <= csr_bankarray_interface9_bank_bus_re;
    end
end
assign csr_bankarray_csrbank9_dfii_pi0_command0_r = csr_bankarray_interface9_bank_bus_dat_w[7:0];
always @(*) begin
    csr_bankarray_csrbank9_dfii_pi0_command0_re <= 1'd0;
    csr_bankarray_csrbank9_dfii_pi0_command0_we <= 1'd0;
    if ((csr_bankarray_csrbank9_sel & (csr_bankarray_interface9_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank9_dfii_pi0_command0_re <= csr_bankarray_interface9_bank_bus_we;
        csr_bankarray_csrbank9_dfii_pi0_command0_we <= csr_bankarray_interface9_bank_bus_re;
    end
end
assign soclinux_phaseinjector0_command_issue_r = csr_bankarray_interface9_bank_bus_dat_w[0];
always @(*) begin
    soclinux_phaseinjector0_command_issue_re <= 1'd0;
    soclinux_phaseinjector0_command_issue_we <= 1'd0;
    if ((csr_bankarray_csrbank9_sel & (csr_bankarray_interface9_bank_bus_adr[8:0] == 2'd2))) begin
        soclinux_phaseinjector0_command_issue_re <= csr_bankarray_interface9_bank_bus_we;
        soclinux_phaseinjector0_command_issue_we <= csr_bankarray_interface9_bank_bus_re;
    end
end
assign csr_bankarray_csrbank9_dfii_pi0_address0_r = csr_bankarray_interface9_bank_bus_dat_w[13:0];
always @(*) begin
    csr_bankarray_csrbank9_dfii_pi0_address0_re <= 1'd0;
    csr_bankarray_csrbank9_dfii_pi0_address0_we <= 1'd0;
    if ((csr_bankarray_csrbank9_sel & (csr_bankarray_interface9_bank_bus_adr[8:0] == 2'd3))) begin
        csr_bankarray_csrbank9_dfii_pi0_address0_re <= csr_bankarray_interface9_bank_bus_we;
        csr_bankarray_csrbank9_dfii_pi0_address0_we <= csr_bankarray_interface9_bank_bus_re;
    end
end
assign csr_bankarray_csrbank9_dfii_pi0_baddress0_r = csr_bankarray_interface9_bank_bus_dat_w[2:0];
always @(*) begin
    csr_bankarray_csrbank9_dfii_pi0_baddress0_re <= 1'd0;
    csr_bankarray_csrbank9_dfii_pi0_baddress0_we <= 1'd0;
    if ((csr_bankarray_csrbank9_sel & (csr_bankarray_interface9_bank_bus_adr[8:0] == 3'd4))) begin
        csr_bankarray_csrbank9_dfii_pi0_baddress0_re <= csr_bankarray_interface9_bank_bus_we;
        csr_bankarray_csrbank9_dfii_pi0_baddress0_we <= csr_bankarray_interface9_bank_bus_re;
    end
end
assign csr_bankarray_csrbank9_dfii_pi0_wrdata1_r = csr_bankarray_interface9_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank9_dfii_pi0_wrdata1_re <= 1'd0;
    csr_bankarray_csrbank9_dfii_pi0_wrdata1_we <= 1'd0;
    if ((csr_bankarray_csrbank9_sel & (csr_bankarray_interface9_bank_bus_adr[8:0] == 3'd5))) begin
        csr_bankarray_csrbank9_dfii_pi0_wrdata1_re <= csr_bankarray_interface9_bank_bus_we;
        csr_bankarray_csrbank9_dfii_pi0_wrdata1_we <= csr_bankarray_interface9_bank_bus_re;
    end
end
assign csr_bankarray_csrbank9_dfii_pi0_wrdata0_r = csr_bankarray_interface9_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank9_dfii_pi0_wrdata0_re <= 1'd0;
    csr_bankarray_csrbank9_dfii_pi0_wrdata0_we <= 1'd0;
    if ((csr_bankarray_csrbank9_sel & (csr_bankarray_interface9_bank_bus_adr[8:0] == 3'd6))) begin
        csr_bankarray_csrbank9_dfii_pi0_wrdata0_re <= csr_bankarray_interface9_bank_bus_we;
        csr_bankarray_csrbank9_dfii_pi0_wrdata0_we <= csr_bankarray_interface9_bank_bus_re;
    end
end
assign csr_bankarray_csrbank9_dfii_pi0_rddata1_r = csr_bankarray_interface9_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank9_dfii_pi0_rddata1_re <= 1'd0;
    csr_bankarray_csrbank9_dfii_pi0_rddata1_we <= 1'd0;
    if ((csr_bankarray_csrbank9_sel & (csr_bankarray_interface9_bank_bus_adr[8:0] == 3'd7))) begin
        csr_bankarray_csrbank9_dfii_pi0_rddata1_re <= csr_bankarray_interface9_bank_bus_we;
        csr_bankarray_csrbank9_dfii_pi0_rddata1_we <= csr_bankarray_interface9_bank_bus_re;
    end
end
assign csr_bankarray_csrbank9_dfii_pi0_rddata0_r = csr_bankarray_interface9_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank9_dfii_pi0_rddata0_re <= 1'd0;
    csr_bankarray_csrbank9_dfii_pi0_rddata0_we <= 1'd0;
    if ((csr_bankarray_csrbank9_sel & (csr_bankarray_interface9_bank_bus_adr[8:0] == 4'd8))) begin
        csr_bankarray_csrbank9_dfii_pi0_rddata0_re <= csr_bankarray_interface9_bank_bus_we;
        csr_bankarray_csrbank9_dfii_pi0_rddata0_we <= csr_bankarray_interface9_bank_bus_re;
    end
end
assign csr_bankarray_csrbank9_dfii_pi1_command0_r = csr_bankarray_interface9_bank_bus_dat_w[7:0];
always @(*) begin
    csr_bankarray_csrbank9_dfii_pi1_command0_re <= 1'd0;
    csr_bankarray_csrbank9_dfii_pi1_command0_we <= 1'd0;
    if ((csr_bankarray_csrbank9_sel & (csr_bankarray_interface9_bank_bus_adr[8:0] == 4'd9))) begin
        csr_bankarray_csrbank9_dfii_pi1_command0_re <= csr_bankarray_interface9_bank_bus_we;
        csr_bankarray_csrbank9_dfii_pi1_command0_we <= csr_bankarray_interface9_bank_bus_re;
    end
end
assign soclinux_phaseinjector1_command_issue_r = csr_bankarray_interface9_bank_bus_dat_w[0];
always @(*) begin
    soclinux_phaseinjector1_command_issue_re <= 1'd0;
    soclinux_phaseinjector1_command_issue_we <= 1'd0;
    if ((csr_bankarray_csrbank9_sel & (csr_bankarray_interface9_bank_bus_adr[8:0] == 4'd10))) begin
        soclinux_phaseinjector1_command_issue_re <= csr_bankarray_interface9_bank_bus_we;
        soclinux_phaseinjector1_command_issue_we <= csr_bankarray_interface9_bank_bus_re;
    end
end
assign csr_bankarray_csrbank9_dfii_pi1_address0_r = csr_bankarray_interface9_bank_bus_dat_w[13:0];
always @(*) begin
    csr_bankarray_csrbank9_dfii_pi1_address0_re <= 1'd0;
    csr_bankarray_csrbank9_dfii_pi1_address0_we <= 1'd0;
    if ((csr_bankarray_csrbank9_sel & (csr_bankarray_interface9_bank_bus_adr[8:0] == 4'd11))) begin
        csr_bankarray_csrbank9_dfii_pi1_address0_re <= csr_bankarray_interface9_bank_bus_we;
        csr_bankarray_csrbank9_dfii_pi1_address0_we <= csr_bankarray_interface9_bank_bus_re;
    end
end
assign csr_bankarray_csrbank9_dfii_pi1_baddress0_r = csr_bankarray_interface9_bank_bus_dat_w[2:0];
always @(*) begin
    csr_bankarray_csrbank9_dfii_pi1_baddress0_re <= 1'd0;
    csr_bankarray_csrbank9_dfii_pi1_baddress0_we <= 1'd0;
    if ((csr_bankarray_csrbank9_sel & (csr_bankarray_interface9_bank_bus_adr[8:0] == 4'd12))) begin
        csr_bankarray_csrbank9_dfii_pi1_baddress0_re <= csr_bankarray_interface9_bank_bus_we;
        csr_bankarray_csrbank9_dfii_pi1_baddress0_we <= csr_bankarray_interface9_bank_bus_re;
    end
end
assign csr_bankarray_csrbank9_dfii_pi1_wrdata1_r = csr_bankarray_interface9_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank9_dfii_pi1_wrdata1_re <= 1'd0;
    csr_bankarray_csrbank9_dfii_pi1_wrdata1_we <= 1'd0;
    if ((csr_bankarray_csrbank9_sel & (csr_bankarray_interface9_bank_bus_adr[8:0] == 4'd13))) begin
        csr_bankarray_csrbank9_dfii_pi1_wrdata1_re <= csr_bankarray_interface9_bank_bus_we;
        csr_bankarray_csrbank9_dfii_pi1_wrdata1_we <= csr_bankarray_interface9_bank_bus_re;
    end
end
assign csr_bankarray_csrbank9_dfii_pi1_wrdata0_r = csr_bankarray_interface9_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank9_dfii_pi1_wrdata0_re <= 1'd0;
    csr_bankarray_csrbank9_dfii_pi1_wrdata0_we <= 1'd0;
    if ((csr_bankarray_csrbank9_sel & (csr_bankarray_interface9_bank_bus_adr[8:0] == 4'd14))) begin
        csr_bankarray_csrbank9_dfii_pi1_wrdata0_re <= csr_bankarray_interface9_bank_bus_we;
        csr_bankarray_csrbank9_dfii_pi1_wrdata0_we <= csr_bankarray_interface9_bank_bus_re;
    end
end
assign csr_bankarray_csrbank9_dfii_pi1_rddata1_r = csr_bankarray_interface9_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank9_dfii_pi1_rddata1_re <= 1'd0;
    csr_bankarray_csrbank9_dfii_pi1_rddata1_we <= 1'd0;
    if ((csr_bankarray_csrbank9_sel & (csr_bankarray_interface9_bank_bus_adr[8:0] == 4'd15))) begin
        csr_bankarray_csrbank9_dfii_pi1_rddata1_re <= csr_bankarray_interface9_bank_bus_we;
        csr_bankarray_csrbank9_dfii_pi1_rddata1_we <= csr_bankarray_interface9_bank_bus_re;
    end
end
assign csr_bankarray_csrbank9_dfii_pi1_rddata0_r = csr_bankarray_interface9_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank9_dfii_pi1_rddata0_re <= 1'd0;
    csr_bankarray_csrbank9_dfii_pi1_rddata0_we <= 1'd0;
    if ((csr_bankarray_csrbank9_sel & (csr_bankarray_interface9_bank_bus_adr[8:0] == 5'd16))) begin
        csr_bankarray_csrbank9_dfii_pi1_rddata0_re <= csr_bankarray_interface9_bank_bus_we;
        csr_bankarray_csrbank9_dfii_pi1_rddata0_we <= csr_bankarray_interface9_bank_bus_re;
    end
end
assign csr_bankarray_csrbank9_dfii_pi2_command0_r = csr_bankarray_interface9_bank_bus_dat_w[7:0];
always @(*) begin
    csr_bankarray_csrbank9_dfii_pi2_command0_re <= 1'd0;
    csr_bankarray_csrbank9_dfii_pi2_command0_we <= 1'd0;
    if ((csr_bankarray_csrbank9_sel & (csr_bankarray_interface9_bank_bus_adr[8:0] == 5'd17))) begin
        csr_bankarray_csrbank9_dfii_pi2_command0_re <= csr_bankarray_interface9_bank_bus_we;
        csr_bankarray_csrbank9_dfii_pi2_command0_we <= csr_bankarray_interface9_bank_bus_re;
    end
end
assign soclinux_phaseinjector2_command_issue_r = csr_bankarray_interface9_bank_bus_dat_w[0];
always @(*) begin
    soclinux_phaseinjector2_command_issue_re <= 1'd0;
    soclinux_phaseinjector2_command_issue_we <= 1'd0;
    if ((csr_bankarray_csrbank9_sel & (csr_bankarray_interface9_bank_bus_adr[8:0] == 5'd18))) begin
        soclinux_phaseinjector2_command_issue_re <= csr_bankarray_interface9_bank_bus_we;
        soclinux_phaseinjector2_command_issue_we <= csr_bankarray_interface9_bank_bus_re;
    end
end
assign csr_bankarray_csrbank9_dfii_pi2_address0_r = csr_bankarray_interface9_bank_bus_dat_w[13:0];
always @(*) begin
    csr_bankarray_csrbank9_dfii_pi2_address0_re <= 1'd0;
    csr_bankarray_csrbank9_dfii_pi2_address0_we <= 1'd0;
    if ((csr_bankarray_csrbank9_sel & (csr_bankarray_interface9_bank_bus_adr[8:0] == 5'd19))) begin
        csr_bankarray_csrbank9_dfii_pi2_address0_re <= csr_bankarray_interface9_bank_bus_we;
        csr_bankarray_csrbank9_dfii_pi2_address0_we <= csr_bankarray_interface9_bank_bus_re;
    end
end
assign csr_bankarray_csrbank9_dfii_pi2_baddress0_r = csr_bankarray_interface9_bank_bus_dat_w[2:0];
always @(*) begin
    csr_bankarray_csrbank9_dfii_pi2_baddress0_re <= 1'd0;
    csr_bankarray_csrbank9_dfii_pi2_baddress0_we <= 1'd0;
    if ((csr_bankarray_csrbank9_sel & (csr_bankarray_interface9_bank_bus_adr[8:0] == 5'd20))) begin
        csr_bankarray_csrbank9_dfii_pi2_baddress0_re <= csr_bankarray_interface9_bank_bus_we;
        csr_bankarray_csrbank9_dfii_pi2_baddress0_we <= csr_bankarray_interface9_bank_bus_re;
    end
end
assign csr_bankarray_csrbank9_dfii_pi2_wrdata1_r = csr_bankarray_interface9_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank9_dfii_pi2_wrdata1_re <= 1'd0;
    csr_bankarray_csrbank9_dfii_pi2_wrdata1_we <= 1'd0;
    if ((csr_bankarray_csrbank9_sel & (csr_bankarray_interface9_bank_bus_adr[8:0] == 5'd21))) begin
        csr_bankarray_csrbank9_dfii_pi2_wrdata1_re <= csr_bankarray_interface9_bank_bus_we;
        csr_bankarray_csrbank9_dfii_pi2_wrdata1_we <= csr_bankarray_interface9_bank_bus_re;
    end
end
assign csr_bankarray_csrbank9_dfii_pi2_wrdata0_r = csr_bankarray_interface9_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank9_dfii_pi2_wrdata0_re <= 1'd0;
    csr_bankarray_csrbank9_dfii_pi2_wrdata0_we <= 1'd0;
    if ((csr_bankarray_csrbank9_sel & (csr_bankarray_interface9_bank_bus_adr[8:0] == 5'd22))) begin
        csr_bankarray_csrbank9_dfii_pi2_wrdata0_re <= csr_bankarray_interface9_bank_bus_we;
        csr_bankarray_csrbank9_dfii_pi2_wrdata0_we <= csr_bankarray_interface9_bank_bus_re;
    end
end
assign csr_bankarray_csrbank9_dfii_pi2_rddata1_r = csr_bankarray_interface9_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank9_dfii_pi2_rddata1_re <= 1'd0;
    csr_bankarray_csrbank9_dfii_pi2_rddata1_we <= 1'd0;
    if ((csr_bankarray_csrbank9_sel & (csr_bankarray_interface9_bank_bus_adr[8:0] == 5'd23))) begin
        csr_bankarray_csrbank9_dfii_pi2_rddata1_re <= csr_bankarray_interface9_bank_bus_we;
        csr_bankarray_csrbank9_dfii_pi2_rddata1_we <= csr_bankarray_interface9_bank_bus_re;
    end
end
assign csr_bankarray_csrbank9_dfii_pi2_rddata0_r = csr_bankarray_interface9_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank9_dfii_pi2_rddata0_re <= 1'd0;
    csr_bankarray_csrbank9_dfii_pi2_rddata0_we <= 1'd0;
    if ((csr_bankarray_csrbank9_sel & (csr_bankarray_interface9_bank_bus_adr[8:0] == 5'd24))) begin
        csr_bankarray_csrbank9_dfii_pi2_rddata0_re <= csr_bankarray_interface9_bank_bus_we;
        csr_bankarray_csrbank9_dfii_pi2_rddata0_we <= csr_bankarray_interface9_bank_bus_re;
    end
end
assign csr_bankarray_csrbank9_dfii_pi3_command0_r = csr_bankarray_interface9_bank_bus_dat_w[7:0];
always @(*) begin
    csr_bankarray_csrbank9_dfii_pi3_command0_re <= 1'd0;
    csr_bankarray_csrbank9_dfii_pi3_command0_we <= 1'd0;
    if ((csr_bankarray_csrbank9_sel & (csr_bankarray_interface9_bank_bus_adr[8:0] == 5'd25))) begin
        csr_bankarray_csrbank9_dfii_pi3_command0_re <= csr_bankarray_interface9_bank_bus_we;
        csr_bankarray_csrbank9_dfii_pi3_command0_we <= csr_bankarray_interface9_bank_bus_re;
    end
end
assign soclinux_phaseinjector3_command_issue_r = csr_bankarray_interface9_bank_bus_dat_w[0];
always @(*) begin
    soclinux_phaseinjector3_command_issue_re <= 1'd0;
    soclinux_phaseinjector3_command_issue_we <= 1'd0;
    if ((csr_bankarray_csrbank9_sel & (csr_bankarray_interface9_bank_bus_adr[8:0] == 5'd26))) begin
        soclinux_phaseinjector3_command_issue_re <= csr_bankarray_interface9_bank_bus_we;
        soclinux_phaseinjector3_command_issue_we <= csr_bankarray_interface9_bank_bus_re;
    end
end
assign csr_bankarray_csrbank9_dfii_pi3_address0_r = csr_bankarray_interface9_bank_bus_dat_w[13:0];
always @(*) begin
    csr_bankarray_csrbank9_dfii_pi3_address0_re <= 1'd0;
    csr_bankarray_csrbank9_dfii_pi3_address0_we <= 1'd0;
    if ((csr_bankarray_csrbank9_sel & (csr_bankarray_interface9_bank_bus_adr[8:0] == 5'd27))) begin
        csr_bankarray_csrbank9_dfii_pi3_address0_re <= csr_bankarray_interface9_bank_bus_we;
        csr_bankarray_csrbank9_dfii_pi3_address0_we <= csr_bankarray_interface9_bank_bus_re;
    end
end
assign csr_bankarray_csrbank9_dfii_pi3_baddress0_r = csr_bankarray_interface9_bank_bus_dat_w[2:0];
always @(*) begin
    csr_bankarray_csrbank9_dfii_pi3_baddress0_re <= 1'd0;
    csr_bankarray_csrbank9_dfii_pi3_baddress0_we <= 1'd0;
    if ((csr_bankarray_csrbank9_sel & (csr_bankarray_interface9_bank_bus_adr[8:0] == 5'd28))) begin
        csr_bankarray_csrbank9_dfii_pi3_baddress0_re <= csr_bankarray_interface9_bank_bus_we;
        csr_bankarray_csrbank9_dfii_pi3_baddress0_we <= csr_bankarray_interface9_bank_bus_re;
    end
end
assign csr_bankarray_csrbank9_dfii_pi3_wrdata1_r = csr_bankarray_interface9_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank9_dfii_pi3_wrdata1_re <= 1'd0;
    csr_bankarray_csrbank9_dfii_pi3_wrdata1_we <= 1'd0;
    if ((csr_bankarray_csrbank9_sel & (csr_bankarray_interface9_bank_bus_adr[8:0] == 5'd29))) begin
        csr_bankarray_csrbank9_dfii_pi3_wrdata1_re <= csr_bankarray_interface9_bank_bus_we;
        csr_bankarray_csrbank9_dfii_pi3_wrdata1_we <= csr_bankarray_interface9_bank_bus_re;
    end
end
assign csr_bankarray_csrbank9_dfii_pi3_wrdata0_r = csr_bankarray_interface9_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank9_dfii_pi3_wrdata0_re <= 1'd0;
    csr_bankarray_csrbank9_dfii_pi3_wrdata0_we <= 1'd0;
    if ((csr_bankarray_csrbank9_sel & (csr_bankarray_interface9_bank_bus_adr[8:0] == 5'd30))) begin
        csr_bankarray_csrbank9_dfii_pi3_wrdata0_re <= csr_bankarray_interface9_bank_bus_we;
        csr_bankarray_csrbank9_dfii_pi3_wrdata0_we <= csr_bankarray_interface9_bank_bus_re;
    end
end
assign csr_bankarray_csrbank9_dfii_pi3_rddata1_r = csr_bankarray_interface9_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank9_dfii_pi3_rddata1_re <= 1'd0;
    csr_bankarray_csrbank9_dfii_pi3_rddata1_we <= 1'd0;
    if ((csr_bankarray_csrbank9_sel & (csr_bankarray_interface9_bank_bus_adr[8:0] == 5'd31))) begin
        csr_bankarray_csrbank9_dfii_pi3_rddata1_re <= csr_bankarray_interface9_bank_bus_we;
        csr_bankarray_csrbank9_dfii_pi3_rddata1_we <= csr_bankarray_interface9_bank_bus_re;
    end
end
assign csr_bankarray_csrbank9_dfii_pi3_rddata0_r = csr_bankarray_interface9_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank9_dfii_pi3_rddata0_re <= 1'd0;
    csr_bankarray_csrbank9_dfii_pi3_rddata0_we <= 1'd0;
    if ((csr_bankarray_csrbank9_sel & (csr_bankarray_interface9_bank_bus_adr[8:0] == 6'd32))) begin
        csr_bankarray_csrbank9_dfii_pi3_rddata0_re <= csr_bankarray_interface9_bank_bus_we;
        csr_bankarray_csrbank9_dfii_pi3_rddata0_we <= csr_bankarray_interface9_bank_bus_re;
    end
end
assign soclinux_sel = soclinux_storage[0];
assign soclinux_cke = soclinux_storage[1];
assign soclinux_odt = soclinux_storage[2];
assign soclinux_reset_n = soclinux_storage[3];
assign csr_bankarray_csrbank9_dfii_control0_w = soclinux_storage[3:0];
assign soclinux_phaseinjector0_csrfield_cs = soclinux_phaseinjector0_command_storage[0];
assign soclinux_phaseinjector0_csrfield_we = soclinux_phaseinjector0_command_storage[1];
assign soclinux_phaseinjector0_csrfield_cas = soclinux_phaseinjector0_command_storage[2];
assign soclinux_phaseinjector0_csrfield_ras = soclinux_phaseinjector0_command_storage[3];
assign soclinux_phaseinjector0_csrfield_wren = soclinux_phaseinjector0_command_storage[4];
assign soclinux_phaseinjector0_csrfield_rden = soclinux_phaseinjector0_command_storage[5];
assign soclinux_phaseinjector0_csrfield_cs_top = soclinux_phaseinjector0_command_storage[6];
assign soclinux_phaseinjector0_csrfield_cs_bottom = soclinux_phaseinjector0_command_storage[7];
assign csr_bankarray_csrbank9_dfii_pi0_command0_w = soclinux_phaseinjector0_command_storage[7:0];
assign csr_bankarray_csrbank9_dfii_pi0_address0_w = soclinux_phaseinjector0_address_storage[13:0];
assign csr_bankarray_csrbank9_dfii_pi0_baddress0_w = soclinux_phaseinjector0_baddress_storage[2:0];
assign csr_bankarray_csrbank9_dfii_pi0_wrdata1_w = soclinux_phaseinjector0_wrdata_storage[63:32];
assign csr_bankarray_csrbank9_dfii_pi0_wrdata0_w = soclinux_phaseinjector0_wrdata_storage[31:0];
assign csr_bankarray_csrbank9_dfii_pi0_rddata1_w = soclinux_phaseinjector0_rddata_status[63:32];
assign csr_bankarray_csrbank9_dfii_pi0_rddata0_w = soclinux_phaseinjector0_rddata_status[31:0];
assign soclinux_phaseinjector0_rddata_we = csr_bankarray_csrbank9_dfii_pi0_rddata0_we;
assign soclinux_phaseinjector1_csrfield_cs = soclinux_phaseinjector1_command_storage[0];
assign soclinux_phaseinjector1_csrfield_we = soclinux_phaseinjector1_command_storage[1];
assign soclinux_phaseinjector1_csrfield_cas = soclinux_phaseinjector1_command_storage[2];
assign soclinux_phaseinjector1_csrfield_ras = soclinux_phaseinjector1_command_storage[3];
assign soclinux_phaseinjector1_csrfield_wren = soclinux_phaseinjector1_command_storage[4];
assign soclinux_phaseinjector1_csrfield_rden = soclinux_phaseinjector1_command_storage[5];
assign soclinux_phaseinjector1_csrfield_cs_top = soclinux_phaseinjector1_command_storage[6];
assign soclinux_phaseinjector1_csrfield_cs_bottom = soclinux_phaseinjector1_command_storage[7];
assign csr_bankarray_csrbank9_dfii_pi1_command0_w = soclinux_phaseinjector1_command_storage[7:0];
assign csr_bankarray_csrbank9_dfii_pi1_address0_w = soclinux_phaseinjector1_address_storage[13:0];
assign csr_bankarray_csrbank9_dfii_pi1_baddress0_w = soclinux_phaseinjector1_baddress_storage[2:0];
assign csr_bankarray_csrbank9_dfii_pi1_wrdata1_w = soclinux_phaseinjector1_wrdata_storage[63:32];
assign csr_bankarray_csrbank9_dfii_pi1_wrdata0_w = soclinux_phaseinjector1_wrdata_storage[31:0];
assign csr_bankarray_csrbank9_dfii_pi1_rddata1_w = soclinux_phaseinjector1_rddata_status[63:32];
assign csr_bankarray_csrbank9_dfii_pi1_rddata0_w = soclinux_phaseinjector1_rddata_status[31:0];
assign soclinux_phaseinjector1_rddata_we = csr_bankarray_csrbank9_dfii_pi1_rddata0_we;
assign soclinux_phaseinjector2_csrfield_cs = soclinux_phaseinjector2_command_storage[0];
assign soclinux_phaseinjector2_csrfield_we = soclinux_phaseinjector2_command_storage[1];
assign soclinux_phaseinjector2_csrfield_cas = soclinux_phaseinjector2_command_storage[2];
assign soclinux_phaseinjector2_csrfield_ras = soclinux_phaseinjector2_command_storage[3];
assign soclinux_phaseinjector2_csrfield_wren = soclinux_phaseinjector2_command_storage[4];
assign soclinux_phaseinjector2_csrfield_rden = soclinux_phaseinjector2_command_storage[5];
assign soclinux_phaseinjector2_csrfield_cs_top = soclinux_phaseinjector2_command_storage[6];
assign soclinux_phaseinjector2_csrfield_cs_bottom = soclinux_phaseinjector2_command_storage[7];
assign csr_bankarray_csrbank9_dfii_pi2_command0_w = soclinux_phaseinjector2_command_storage[7:0];
assign csr_bankarray_csrbank9_dfii_pi2_address0_w = soclinux_phaseinjector2_address_storage[13:0];
assign csr_bankarray_csrbank9_dfii_pi2_baddress0_w = soclinux_phaseinjector2_baddress_storage[2:0];
assign csr_bankarray_csrbank9_dfii_pi2_wrdata1_w = soclinux_phaseinjector2_wrdata_storage[63:32];
assign csr_bankarray_csrbank9_dfii_pi2_wrdata0_w = soclinux_phaseinjector2_wrdata_storage[31:0];
assign csr_bankarray_csrbank9_dfii_pi2_rddata1_w = soclinux_phaseinjector2_rddata_status[63:32];
assign csr_bankarray_csrbank9_dfii_pi2_rddata0_w = soclinux_phaseinjector2_rddata_status[31:0];
assign soclinux_phaseinjector2_rddata_we = csr_bankarray_csrbank9_dfii_pi2_rddata0_we;
assign soclinux_phaseinjector3_csrfield_cs = soclinux_phaseinjector3_command_storage[0];
assign soclinux_phaseinjector3_csrfield_we = soclinux_phaseinjector3_command_storage[1];
assign soclinux_phaseinjector3_csrfield_cas = soclinux_phaseinjector3_command_storage[2];
assign soclinux_phaseinjector3_csrfield_ras = soclinux_phaseinjector3_command_storage[3];
assign soclinux_phaseinjector3_csrfield_wren = soclinux_phaseinjector3_command_storage[4];
assign soclinux_phaseinjector3_csrfield_rden = soclinux_phaseinjector3_command_storage[5];
assign soclinux_phaseinjector3_csrfield_cs_top = soclinux_phaseinjector3_command_storage[6];
assign soclinux_phaseinjector3_csrfield_cs_bottom = soclinux_phaseinjector3_command_storage[7];
assign csr_bankarray_csrbank9_dfii_pi3_command0_w = soclinux_phaseinjector3_command_storage[7:0];
assign csr_bankarray_csrbank9_dfii_pi3_address0_w = soclinux_phaseinjector3_address_storage[13:0];
assign csr_bankarray_csrbank9_dfii_pi3_baddress0_w = soclinux_phaseinjector3_baddress_storage[2:0];
assign csr_bankarray_csrbank9_dfii_pi3_wrdata1_w = soclinux_phaseinjector3_wrdata_storage[63:32];
assign csr_bankarray_csrbank9_dfii_pi3_wrdata0_w = soclinux_phaseinjector3_wrdata_storage[31:0];
assign csr_bankarray_csrbank9_dfii_pi3_rddata1_w = soclinux_phaseinjector3_rddata_status[63:32];
assign csr_bankarray_csrbank9_dfii_pi3_rddata0_w = soclinux_phaseinjector3_rddata_status[31:0];
assign soclinux_phaseinjector3_rddata_we = csr_bankarray_csrbank9_dfii_pi3_rddata0_we;
assign csr_bankarray_csrbank10_sel = (csr_bankarray_interface10_bank_bus_adr[13:9] == 2'd3);
assign csr_bankarray_csrbank10_load0_r = csr_bankarray_interface10_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank10_load0_re <= 1'd0;
    csr_bankarray_csrbank10_load0_we <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 1'd0))) begin
        csr_bankarray_csrbank10_load0_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_load0_we <= csr_bankarray_interface10_bank_bus_re;
    end
end
assign csr_bankarray_csrbank10_reload0_r = csr_bankarray_interface10_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank10_reload0_re <= 1'd0;
    csr_bankarray_csrbank10_reload0_we <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank10_reload0_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_reload0_we <= csr_bankarray_interface10_bank_bus_re;
    end
end
assign csr_bankarray_csrbank10_en0_r = csr_bankarray_interface10_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank10_en0_re <= 1'd0;
    csr_bankarray_csrbank10_en0_we <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank10_en0_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_en0_we <= csr_bankarray_interface10_bank_bus_re;
    end
end
assign csr_bankarray_csrbank10_update_value0_r = csr_bankarray_interface10_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank10_update_value0_re <= 1'd0;
    csr_bankarray_csrbank10_update_value0_we <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 2'd3))) begin
        csr_bankarray_csrbank10_update_value0_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_update_value0_we <= csr_bankarray_interface10_bank_bus_re;
    end
end
assign csr_bankarray_csrbank10_value_r = csr_bankarray_interface10_bank_bus_dat_w[31:0];
always @(*) begin
    csr_bankarray_csrbank10_value_re <= 1'd0;
    csr_bankarray_csrbank10_value_we <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 3'd4))) begin
        csr_bankarray_csrbank10_value_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_value_we <= csr_bankarray_interface10_bank_bus_re;
    end
end
assign csr_bankarray_csrbank10_ev_status_r = csr_bankarray_interface10_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank10_ev_status_re <= 1'd0;
    csr_bankarray_csrbank10_ev_status_we <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 3'd5))) begin
        csr_bankarray_csrbank10_ev_status_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_ev_status_we <= csr_bankarray_interface10_bank_bus_re;
    end
end
assign csr_bankarray_csrbank10_ev_pending_r = csr_bankarray_interface10_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank10_ev_pending_re <= 1'd0;
    csr_bankarray_csrbank10_ev_pending_we <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 3'd6))) begin
        csr_bankarray_csrbank10_ev_pending_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_ev_pending_we <= csr_bankarray_interface10_bank_bus_re;
    end
end
assign csr_bankarray_csrbank10_ev_enable0_r = csr_bankarray_interface10_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank10_ev_enable0_re <= 1'd0;
    csr_bankarray_csrbank10_ev_enable0_we <= 1'd0;
    if ((csr_bankarray_csrbank10_sel & (csr_bankarray_interface10_bank_bus_adr[8:0] == 3'd7))) begin
        csr_bankarray_csrbank10_ev_enable0_re <= csr_bankarray_interface10_bank_bus_we;
        csr_bankarray_csrbank10_ev_enable0_we <= csr_bankarray_interface10_bank_bus_re;
    end
end
assign csr_bankarray_csrbank10_load0_w = soclinux_timer_load_storage[31:0];
assign csr_bankarray_csrbank10_reload0_w = soclinux_timer_reload_storage[31:0];
assign csr_bankarray_csrbank10_en0_w = soclinux_timer_en_storage;
assign csr_bankarray_csrbank10_update_value0_w = soclinux_timer_update_value_storage;
assign csr_bankarray_csrbank10_value_w = soclinux_timer_value_status[31:0];
assign soclinux_timer_value_we = csr_bankarray_csrbank10_value_we;
always @(*) begin
    soclinux_timer_status_status <= 1'd0;
    soclinux_timer_status_status <= soclinux_timer_zero0;
end
assign csr_bankarray_csrbank10_ev_status_w = soclinux_timer_status_status;
assign soclinux_timer_status_we = csr_bankarray_csrbank10_ev_status_we;
always @(*) begin
    soclinux_timer_pending_status <= 1'd0;
    soclinux_timer_pending_status <= soclinux_timer_zero1;
end
assign csr_bankarray_csrbank10_ev_pending_w = soclinux_timer_pending_status;
assign soclinux_timer_pending_we = csr_bankarray_csrbank10_ev_pending_we;
assign soclinux_timer_zero2 = soclinux_timer_enable_storage;
assign csr_bankarray_csrbank10_ev_enable0_w = soclinux_timer_enable_storage;
assign csr_bankarray_csrbank11_sel = (csr_bankarray_interface11_bank_bus_adr[13:9] == 2'd2);
assign soclinux_uart_rxtx_r = csr_bankarray_interface11_bank_bus_dat_w[7:0];
always @(*) begin
    soclinux_uart_rxtx_re <= 1'd0;
    soclinux_uart_rxtx_we <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 1'd0))) begin
        soclinux_uart_rxtx_re <= csr_bankarray_interface11_bank_bus_we;
        soclinux_uart_rxtx_we <= csr_bankarray_interface11_bank_bus_re;
    end
end
assign csr_bankarray_csrbank11_txfull_r = csr_bankarray_interface11_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank11_txfull_re <= 1'd0;
    csr_bankarray_csrbank11_txfull_we <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 1'd1))) begin
        csr_bankarray_csrbank11_txfull_re <= csr_bankarray_interface11_bank_bus_we;
        csr_bankarray_csrbank11_txfull_we <= csr_bankarray_interface11_bank_bus_re;
    end
end
assign csr_bankarray_csrbank11_rxempty_r = csr_bankarray_interface11_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank11_rxempty_re <= 1'd0;
    csr_bankarray_csrbank11_rxempty_we <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 2'd2))) begin
        csr_bankarray_csrbank11_rxempty_re <= csr_bankarray_interface11_bank_bus_we;
        csr_bankarray_csrbank11_rxempty_we <= csr_bankarray_interface11_bank_bus_re;
    end
end
assign csr_bankarray_csrbank11_ev_status_r = csr_bankarray_interface11_bank_bus_dat_w[1:0];
always @(*) begin
    csr_bankarray_csrbank11_ev_status_re <= 1'd0;
    csr_bankarray_csrbank11_ev_status_we <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 2'd3))) begin
        csr_bankarray_csrbank11_ev_status_re <= csr_bankarray_interface11_bank_bus_we;
        csr_bankarray_csrbank11_ev_status_we <= csr_bankarray_interface11_bank_bus_re;
    end
end
assign csr_bankarray_csrbank11_ev_pending_r = csr_bankarray_interface11_bank_bus_dat_w[1:0];
always @(*) begin
    csr_bankarray_csrbank11_ev_pending_re <= 1'd0;
    csr_bankarray_csrbank11_ev_pending_we <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 3'd4))) begin
        csr_bankarray_csrbank11_ev_pending_re <= csr_bankarray_interface11_bank_bus_we;
        csr_bankarray_csrbank11_ev_pending_we <= csr_bankarray_interface11_bank_bus_re;
    end
end
assign csr_bankarray_csrbank11_ev_enable0_r = csr_bankarray_interface11_bank_bus_dat_w[1:0];
always @(*) begin
    csr_bankarray_csrbank11_ev_enable0_re <= 1'd0;
    csr_bankarray_csrbank11_ev_enable0_we <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 3'd5))) begin
        csr_bankarray_csrbank11_ev_enable0_re <= csr_bankarray_interface11_bank_bus_we;
        csr_bankarray_csrbank11_ev_enable0_we <= csr_bankarray_interface11_bank_bus_re;
    end
end
assign csr_bankarray_csrbank11_txempty_r = csr_bankarray_interface11_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank11_txempty_re <= 1'd0;
    csr_bankarray_csrbank11_txempty_we <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 3'd6))) begin
        csr_bankarray_csrbank11_txempty_re <= csr_bankarray_interface11_bank_bus_we;
        csr_bankarray_csrbank11_txempty_we <= csr_bankarray_interface11_bank_bus_re;
    end
end
assign csr_bankarray_csrbank11_rxfull_r = csr_bankarray_interface11_bank_bus_dat_w[0];
always @(*) begin
    csr_bankarray_csrbank11_rxfull_re <= 1'd0;
    csr_bankarray_csrbank11_rxfull_we <= 1'd0;
    if ((csr_bankarray_csrbank11_sel & (csr_bankarray_interface11_bank_bus_adr[8:0] == 3'd7))) begin
        csr_bankarray_csrbank11_rxfull_re <= csr_bankarray_interface11_bank_bus_we;
        csr_bankarray_csrbank11_rxfull_we <= csr_bankarray_interface11_bank_bus_re;
    end
end
assign csr_bankarray_csrbank11_txfull_w = soclinux_uart_txfull_status;
assign soclinux_uart_txfull_we = csr_bankarray_csrbank11_txfull_we;
assign csr_bankarray_csrbank11_rxempty_w = soclinux_uart_rxempty_status;
assign soclinux_uart_rxempty_we = csr_bankarray_csrbank11_rxempty_we;
always @(*) begin
    soclinux_uart_status_status <= 2'd0;
    soclinux_uart_status_status[0] <= soclinux_uart_tx0;
    soclinux_uart_status_status[1] <= soclinux_uart_rx0;
end
assign csr_bankarray_csrbank11_ev_status_w = soclinux_uart_status_status[1:0];
assign soclinux_uart_status_we = csr_bankarray_csrbank11_ev_status_we;
always @(*) begin
    soclinux_uart_pending_status <= 2'd0;
    soclinux_uart_pending_status[0] <= soclinux_uart_tx1;
    soclinux_uart_pending_status[1] <= soclinux_uart_rx1;
end
assign csr_bankarray_csrbank11_ev_pending_w = soclinux_uart_pending_status[1:0];
assign soclinux_uart_pending_we = csr_bankarray_csrbank11_ev_pending_we;
assign soclinux_uart_tx2 = soclinux_uart_enable_storage[0];
assign soclinux_uart_rx2 = soclinux_uart_enable_storage[1];
assign csr_bankarray_csrbank11_ev_enable0_w = soclinux_uart_enable_storage[1:0];
assign csr_bankarray_csrbank11_txempty_w = soclinux_uart_txempty_status;
assign soclinux_uart_txempty_we = csr_bankarray_csrbank11_txempty_we;
assign csr_bankarray_csrbank11_rxfull_w = soclinux_uart_rxfull_status;
assign soclinux_uart_rxfull_we = csr_bankarray_csrbank11_rxfull_we;
assign csr_interconnect_adr = interface1_adr;
assign csr_interconnect_re = interface1_re;
assign csr_interconnect_we = interface1_we;
assign csr_interconnect_dat_w = interface1_dat_w;
assign interface1_dat_r = csr_interconnect_dat_r;
assign csr_bankarray_interface0_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface1_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface2_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface3_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface4_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface5_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface6_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface7_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface8_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface9_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface10_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface11_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_sram_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface0_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface1_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface2_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface3_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface4_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface5_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface6_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface7_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface8_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface9_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface10_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_interface11_bank_bus_re = csr_interconnect_re;
assign csr_bankarray_sram_bus_re = csr_interconnect_re;
assign csr_bankarray_interface0_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface1_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface2_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface3_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface4_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface5_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface6_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface7_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface8_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface9_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface10_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface11_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_sram_bus_we = csr_interconnect_we;
assign csr_bankarray_interface0_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface1_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface2_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface3_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface4_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface5_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface6_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface7_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface8_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface9_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface10_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface11_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_sram_bus_dat_w = csr_interconnect_dat_w;
assign csr_interconnect_dat_r = ((((((((((((csr_bankarray_interface0_bank_bus_dat_r | csr_bankarray_interface1_bank_bus_dat_r) | csr_bankarray_interface2_bank_bus_dat_r) | csr_bankarray_interface3_bank_bus_dat_r) | csr_bankarray_interface4_bank_bus_dat_r) | csr_bankarray_interface5_bank_bus_dat_r) | csr_bankarray_interface6_bank_bus_dat_r) | csr_bankarray_interface7_bank_bus_dat_r) | csr_bankarray_interface8_bank_bus_dat_r) | csr_bankarray_interface9_bank_bus_dat_r) | csr_bankarray_interface10_bank_bus_dat_r) | csr_bankarray_interface11_bank_bus_dat_r) | csr_bankarray_sram_bus_dat_r);
always @(*) begin
    rhs_array_muxed0 <= 32'd0;
    case (grant)
        1'd0: begin
            rhs_array_muxed0 <= soclinux_pbus_adr;
        end
        1'd1: begin
            rhs_array_muxed0 <= interface0_bus_adr;
        end
        default: begin
            rhs_array_muxed0 <= interface1_bus_adr;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed1 <= 32'd0;
    case (grant)
        1'd0: begin
            rhs_array_muxed1 <= soclinux_pbus_dat_w;
        end
        1'd1: begin
            rhs_array_muxed1 <= interface0_bus_dat_w;
        end
        default: begin
            rhs_array_muxed1 <= interface1_bus_dat_w;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed2 <= 4'd0;
    case (grant)
        1'd0: begin
            rhs_array_muxed2 <= soclinux_pbus_sel;
        end
        1'd1: begin
            rhs_array_muxed2 <= interface0_bus_sel;
        end
        default: begin
            rhs_array_muxed2 <= interface1_bus_sel;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed3 <= 1'd0;
    case (grant)
        1'd0: begin
            rhs_array_muxed3 <= soclinux_pbus_cyc;
        end
        1'd1: begin
            rhs_array_muxed3 <= interface0_bus_cyc;
        end
        default: begin
            rhs_array_muxed3 <= interface1_bus_cyc;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed4 <= 1'd0;
    case (grant)
        1'd0: begin
            rhs_array_muxed4 <= soclinux_pbus_stb;
        end
        1'd1: begin
            rhs_array_muxed4 <= interface0_bus_stb;
        end
        default: begin
            rhs_array_muxed4 <= interface1_bus_stb;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed5 <= 1'd0;
    case (grant)
        1'd0: begin
            rhs_array_muxed5 <= soclinux_pbus_we;
        end
        1'd1: begin
            rhs_array_muxed5 <= interface0_bus_we;
        end
        default: begin
            rhs_array_muxed5 <= interface1_bus_we;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed6 <= 3'd0;
    case (grant)
        1'd0: begin
            rhs_array_muxed6 <= soclinux_pbus_cti;
        end
        1'd1: begin
            rhs_array_muxed6 <= interface0_bus_cti;
        end
        default: begin
            rhs_array_muxed6 <= interface1_bus_cti;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed7 <= 2'd0;
    case (grant)
        1'd0: begin
            rhs_array_muxed7 <= soclinux_pbus_bte;
        end
        1'd1: begin
            rhs_array_muxed7 <= interface0_bus_bte;
        end
        default: begin
            rhs_array_muxed7 <= interface1_bus_bte;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed8 <= 1'd0;
    case (soclinux_choose_cmd_grant)
        1'd0: begin
            rhs_array_muxed8 <= soclinux_choose_cmd_valids[0];
        end
        1'd1: begin
            rhs_array_muxed8 <= soclinux_choose_cmd_valids[1];
        end
        2'd2: begin
            rhs_array_muxed8 <= soclinux_choose_cmd_valids[2];
        end
        2'd3: begin
            rhs_array_muxed8 <= soclinux_choose_cmd_valids[3];
        end
        3'd4: begin
            rhs_array_muxed8 <= soclinux_choose_cmd_valids[4];
        end
        3'd5: begin
            rhs_array_muxed8 <= soclinux_choose_cmd_valids[5];
        end
        3'd6: begin
            rhs_array_muxed8 <= soclinux_choose_cmd_valids[6];
        end
        default: begin
            rhs_array_muxed8 <= soclinux_choose_cmd_valids[7];
        end
    endcase
end
always @(*) begin
    rhs_array_muxed9 <= 14'd0;
    case (soclinux_choose_cmd_grant)
        1'd0: begin
            rhs_array_muxed9 <= soclinux_bankmachine0_cmd_payload_a;
        end
        1'd1: begin
            rhs_array_muxed9 <= soclinux_bankmachine1_cmd_payload_a;
        end
        2'd2: begin
            rhs_array_muxed9 <= soclinux_bankmachine2_cmd_payload_a;
        end
        2'd3: begin
            rhs_array_muxed9 <= soclinux_bankmachine3_cmd_payload_a;
        end
        3'd4: begin
            rhs_array_muxed9 <= soclinux_bankmachine4_cmd_payload_a;
        end
        3'd5: begin
            rhs_array_muxed9 <= soclinux_bankmachine5_cmd_payload_a;
        end
        3'd6: begin
            rhs_array_muxed9 <= soclinux_bankmachine6_cmd_payload_a;
        end
        default: begin
            rhs_array_muxed9 <= soclinux_bankmachine7_cmd_payload_a;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed10 <= 3'd0;
    case (soclinux_choose_cmd_grant)
        1'd0: begin
            rhs_array_muxed10 <= soclinux_bankmachine0_cmd_payload_ba;
        end
        1'd1: begin
            rhs_array_muxed10 <= soclinux_bankmachine1_cmd_payload_ba;
        end
        2'd2: begin
            rhs_array_muxed10 <= soclinux_bankmachine2_cmd_payload_ba;
        end
        2'd3: begin
            rhs_array_muxed10 <= soclinux_bankmachine3_cmd_payload_ba;
        end
        3'd4: begin
            rhs_array_muxed10 <= soclinux_bankmachine4_cmd_payload_ba;
        end
        3'd5: begin
            rhs_array_muxed10 <= soclinux_bankmachine5_cmd_payload_ba;
        end
        3'd6: begin
            rhs_array_muxed10 <= soclinux_bankmachine6_cmd_payload_ba;
        end
        default: begin
            rhs_array_muxed10 <= soclinux_bankmachine7_cmd_payload_ba;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed11 <= 1'd0;
    case (soclinux_choose_cmd_grant)
        1'd0: begin
            rhs_array_muxed11 <= soclinux_bankmachine0_cmd_payload_is_read;
        end
        1'd1: begin
            rhs_array_muxed11 <= soclinux_bankmachine1_cmd_payload_is_read;
        end
        2'd2: begin
            rhs_array_muxed11 <= soclinux_bankmachine2_cmd_payload_is_read;
        end
        2'd3: begin
            rhs_array_muxed11 <= soclinux_bankmachine3_cmd_payload_is_read;
        end
        3'd4: begin
            rhs_array_muxed11 <= soclinux_bankmachine4_cmd_payload_is_read;
        end
        3'd5: begin
            rhs_array_muxed11 <= soclinux_bankmachine5_cmd_payload_is_read;
        end
        3'd6: begin
            rhs_array_muxed11 <= soclinux_bankmachine6_cmd_payload_is_read;
        end
        default: begin
            rhs_array_muxed11 <= soclinux_bankmachine7_cmd_payload_is_read;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed12 <= 1'd0;
    case (soclinux_choose_cmd_grant)
        1'd0: begin
            rhs_array_muxed12 <= soclinux_bankmachine0_cmd_payload_is_write;
        end
        1'd1: begin
            rhs_array_muxed12 <= soclinux_bankmachine1_cmd_payload_is_write;
        end
        2'd2: begin
            rhs_array_muxed12 <= soclinux_bankmachine2_cmd_payload_is_write;
        end
        2'd3: begin
            rhs_array_muxed12 <= soclinux_bankmachine3_cmd_payload_is_write;
        end
        3'd4: begin
            rhs_array_muxed12 <= soclinux_bankmachine4_cmd_payload_is_write;
        end
        3'd5: begin
            rhs_array_muxed12 <= soclinux_bankmachine5_cmd_payload_is_write;
        end
        3'd6: begin
            rhs_array_muxed12 <= soclinux_bankmachine6_cmd_payload_is_write;
        end
        default: begin
            rhs_array_muxed12 <= soclinux_bankmachine7_cmd_payload_is_write;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed13 <= 1'd0;
    case (soclinux_choose_cmd_grant)
        1'd0: begin
            rhs_array_muxed13 <= soclinux_bankmachine0_cmd_payload_is_cmd;
        end
        1'd1: begin
            rhs_array_muxed13 <= soclinux_bankmachine1_cmd_payload_is_cmd;
        end
        2'd2: begin
            rhs_array_muxed13 <= soclinux_bankmachine2_cmd_payload_is_cmd;
        end
        2'd3: begin
            rhs_array_muxed13 <= soclinux_bankmachine3_cmd_payload_is_cmd;
        end
        3'd4: begin
            rhs_array_muxed13 <= soclinux_bankmachine4_cmd_payload_is_cmd;
        end
        3'd5: begin
            rhs_array_muxed13 <= soclinux_bankmachine5_cmd_payload_is_cmd;
        end
        3'd6: begin
            rhs_array_muxed13 <= soclinux_bankmachine6_cmd_payload_is_cmd;
        end
        default: begin
            rhs_array_muxed13 <= soclinux_bankmachine7_cmd_payload_is_cmd;
        end
    endcase
end
always @(*) begin
    t_array_muxed0 <= 1'd0;
    case (soclinux_choose_cmd_grant)
        1'd0: begin
            t_array_muxed0 <= soclinux_bankmachine0_cmd_payload_cas;
        end
        1'd1: begin
            t_array_muxed0 <= soclinux_bankmachine1_cmd_payload_cas;
        end
        2'd2: begin
            t_array_muxed0 <= soclinux_bankmachine2_cmd_payload_cas;
        end
        2'd3: begin
            t_array_muxed0 <= soclinux_bankmachine3_cmd_payload_cas;
        end
        3'd4: begin
            t_array_muxed0 <= soclinux_bankmachine4_cmd_payload_cas;
        end
        3'd5: begin
            t_array_muxed0 <= soclinux_bankmachine5_cmd_payload_cas;
        end
        3'd6: begin
            t_array_muxed0 <= soclinux_bankmachine6_cmd_payload_cas;
        end
        default: begin
            t_array_muxed0 <= soclinux_bankmachine7_cmd_payload_cas;
        end
    endcase
end
always @(*) begin
    t_array_muxed1 <= 1'd0;
    case (soclinux_choose_cmd_grant)
        1'd0: begin
            t_array_muxed1 <= soclinux_bankmachine0_cmd_payload_ras;
        end
        1'd1: begin
            t_array_muxed1 <= soclinux_bankmachine1_cmd_payload_ras;
        end
        2'd2: begin
            t_array_muxed1 <= soclinux_bankmachine2_cmd_payload_ras;
        end
        2'd3: begin
            t_array_muxed1 <= soclinux_bankmachine3_cmd_payload_ras;
        end
        3'd4: begin
            t_array_muxed1 <= soclinux_bankmachine4_cmd_payload_ras;
        end
        3'd5: begin
            t_array_muxed1 <= soclinux_bankmachine5_cmd_payload_ras;
        end
        3'd6: begin
            t_array_muxed1 <= soclinux_bankmachine6_cmd_payload_ras;
        end
        default: begin
            t_array_muxed1 <= soclinux_bankmachine7_cmd_payload_ras;
        end
    endcase
end
always @(*) begin
    t_array_muxed2 <= 1'd0;
    case (soclinux_choose_cmd_grant)
        1'd0: begin
            t_array_muxed2 <= soclinux_bankmachine0_cmd_payload_we;
        end
        1'd1: begin
            t_array_muxed2 <= soclinux_bankmachine1_cmd_payload_we;
        end
        2'd2: begin
            t_array_muxed2 <= soclinux_bankmachine2_cmd_payload_we;
        end
        2'd3: begin
            t_array_muxed2 <= soclinux_bankmachine3_cmd_payload_we;
        end
        3'd4: begin
            t_array_muxed2 <= soclinux_bankmachine4_cmd_payload_we;
        end
        3'd5: begin
            t_array_muxed2 <= soclinux_bankmachine5_cmd_payload_we;
        end
        3'd6: begin
            t_array_muxed2 <= soclinux_bankmachine6_cmd_payload_we;
        end
        default: begin
            t_array_muxed2 <= soclinux_bankmachine7_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed14 <= 1'd0;
    case (soclinux_choose_req_grant)
        1'd0: begin
            rhs_array_muxed14 <= soclinux_choose_req_valids[0];
        end
        1'd1: begin
            rhs_array_muxed14 <= soclinux_choose_req_valids[1];
        end
        2'd2: begin
            rhs_array_muxed14 <= soclinux_choose_req_valids[2];
        end
        2'd3: begin
            rhs_array_muxed14 <= soclinux_choose_req_valids[3];
        end
        3'd4: begin
            rhs_array_muxed14 <= soclinux_choose_req_valids[4];
        end
        3'd5: begin
            rhs_array_muxed14 <= soclinux_choose_req_valids[5];
        end
        3'd6: begin
            rhs_array_muxed14 <= soclinux_choose_req_valids[6];
        end
        default: begin
            rhs_array_muxed14 <= soclinux_choose_req_valids[7];
        end
    endcase
end
always @(*) begin
    rhs_array_muxed15 <= 14'd0;
    case (soclinux_choose_req_grant)
        1'd0: begin
            rhs_array_muxed15 <= soclinux_bankmachine0_cmd_payload_a;
        end
        1'd1: begin
            rhs_array_muxed15 <= soclinux_bankmachine1_cmd_payload_a;
        end
        2'd2: begin
            rhs_array_muxed15 <= soclinux_bankmachine2_cmd_payload_a;
        end
        2'd3: begin
            rhs_array_muxed15 <= soclinux_bankmachine3_cmd_payload_a;
        end
        3'd4: begin
            rhs_array_muxed15 <= soclinux_bankmachine4_cmd_payload_a;
        end
        3'd5: begin
            rhs_array_muxed15 <= soclinux_bankmachine5_cmd_payload_a;
        end
        3'd6: begin
            rhs_array_muxed15 <= soclinux_bankmachine6_cmd_payload_a;
        end
        default: begin
            rhs_array_muxed15 <= soclinux_bankmachine7_cmd_payload_a;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed16 <= 3'd0;
    case (soclinux_choose_req_grant)
        1'd0: begin
            rhs_array_muxed16 <= soclinux_bankmachine0_cmd_payload_ba;
        end
        1'd1: begin
            rhs_array_muxed16 <= soclinux_bankmachine1_cmd_payload_ba;
        end
        2'd2: begin
            rhs_array_muxed16 <= soclinux_bankmachine2_cmd_payload_ba;
        end
        2'd3: begin
            rhs_array_muxed16 <= soclinux_bankmachine3_cmd_payload_ba;
        end
        3'd4: begin
            rhs_array_muxed16 <= soclinux_bankmachine4_cmd_payload_ba;
        end
        3'd5: begin
            rhs_array_muxed16 <= soclinux_bankmachine5_cmd_payload_ba;
        end
        3'd6: begin
            rhs_array_muxed16 <= soclinux_bankmachine6_cmd_payload_ba;
        end
        default: begin
            rhs_array_muxed16 <= soclinux_bankmachine7_cmd_payload_ba;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed17 <= 1'd0;
    case (soclinux_choose_req_grant)
        1'd0: begin
            rhs_array_muxed17 <= soclinux_bankmachine0_cmd_payload_is_read;
        end
        1'd1: begin
            rhs_array_muxed17 <= soclinux_bankmachine1_cmd_payload_is_read;
        end
        2'd2: begin
            rhs_array_muxed17 <= soclinux_bankmachine2_cmd_payload_is_read;
        end
        2'd3: begin
            rhs_array_muxed17 <= soclinux_bankmachine3_cmd_payload_is_read;
        end
        3'd4: begin
            rhs_array_muxed17 <= soclinux_bankmachine4_cmd_payload_is_read;
        end
        3'd5: begin
            rhs_array_muxed17 <= soclinux_bankmachine5_cmd_payload_is_read;
        end
        3'd6: begin
            rhs_array_muxed17 <= soclinux_bankmachine6_cmd_payload_is_read;
        end
        default: begin
            rhs_array_muxed17 <= soclinux_bankmachine7_cmd_payload_is_read;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed18 <= 1'd0;
    case (soclinux_choose_req_grant)
        1'd0: begin
            rhs_array_muxed18 <= soclinux_bankmachine0_cmd_payload_is_write;
        end
        1'd1: begin
            rhs_array_muxed18 <= soclinux_bankmachine1_cmd_payload_is_write;
        end
        2'd2: begin
            rhs_array_muxed18 <= soclinux_bankmachine2_cmd_payload_is_write;
        end
        2'd3: begin
            rhs_array_muxed18 <= soclinux_bankmachine3_cmd_payload_is_write;
        end
        3'd4: begin
            rhs_array_muxed18 <= soclinux_bankmachine4_cmd_payload_is_write;
        end
        3'd5: begin
            rhs_array_muxed18 <= soclinux_bankmachine5_cmd_payload_is_write;
        end
        3'd6: begin
            rhs_array_muxed18 <= soclinux_bankmachine6_cmd_payload_is_write;
        end
        default: begin
            rhs_array_muxed18 <= soclinux_bankmachine7_cmd_payload_is_write;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed19 <= 1'd0;
    case (soclinux_choose_req_grant)
        1'd0: begin
            rhs_array_muxed19 <= soclinux_bankmachine0_cmd_payload_is_cmd;
        end
        1'd1: begin
            rhs_array_muxed19 <= soclinux_bankmachine1_cmd_payload_is_cmd;
        end
        2'd2: begin
            rhs_array_muxed19 <= soclinux_bankmachine2_cmd_payload_is_cmd;
        end
        2'd3: begin
            rhs_array_muxed19 <= soclinux_bankmachine3_cmd_payload_is_cmd;
        end
        3'd4: begin
            rhs_array_muxed19 <= soclinux_bankmachine4_cmd_payload_is_cmd;
        end
        3'd5: begin
            rhs_array_muxed19 <= soclinux_bankmachine5_cmd_payload_is_cmd;
        end
        3'd6: begin
            rhs_array_muxed19 <= soclinux_bankmachine6_cmd_payload_is_cmd;
        end
        default: begin
            rhs_array_muxed19 <= soclinux_bankmachine7_cmd_payload_is_cmd;
        end
    endcase
end
always @(*) begin
    t_array_muxed3 <= 1'd0;
    case (soclinux_choose_req_grant)
        1'd0: begin
            t_array_muxed3 <= soclinux_bankmachine0_cmd_payload_cas;
        end
        1'd1: begin
            t_array_muxed3 <= soclinux_bankmachine1_cmd_payload_cas;
        end
        2'd2: begin
            t_array_muxed3 <= soclinux_bankmachine2_cmd_payload_cas;
        end
        2'd3: begin
            t_array_muxed3 <= soclinux_bankmachine3_cmd_payload_cas;
        end
        3'd4: begin
            t_array_muxed3 <= soclinux_bankmachine4_cmd_payload_cas;
        end
        3'd5: begin
            t_array_muxed3 <= soclinux_bankmachine5_cmd_payload_cas;
        end
        3'd6: begin
            t_array_muxed3 <= soclinux_bankmachine6_cmd_payload_cas;
        end
        default: begin
            t_array_muxed3 <= soclinux_bankmachine7_cmd_payload_cas;
        end
    endcase
end
always @(*) begin
    t_array_muxed4 <= 1'd0;
    case (soclinux_choose_req_grant)
        1'd0: begin
            t_array_muxed4 <= soclinux_bankmachine0_cmd_payload_ras;
        end
        1'd1: begin
            t_array_muxed4 <= soclinux_bankmachine1_cmd_payload_ras;
        end
        2'd2: begin
            t_array_muxed4 <= soclinux_bankmachine2_cmd_payload_ras;
        end
        2'd3: begin
            t_array_muxed4 <= soclinux_bankmachine3_cmd_payload_ras;
        end
        3'd4: begin
            t_array_muxed4 <= soclinux_bankmachine4_cmd_payload_ras;
        end
        3'd5: begin
            t_array_muxed4 <= soclinux_bankmachine5_cmd_payload_ras;
        end
        3'd6: begin
            t_array_muxed4 <= soclinux_bankmachine6_cmd_payload_ras;
        end
        default: begin
            t_array_muxed4 <= soclinux_bankmachine7_cmd_payload_ras;
        end
    endcase
end
always @(*) begin
    t_array_muxed5 <= 1'd0;
    case (soclinux_choose_req_grant)
        1'd0: begin
            t_array_muxed5 <= soclinux_bankmachine0_cmd_payload_we;
        end
        1'd1: begin
            t_array_muxed5 <= soclinux_bankmachine1_cmd_payload_we;
        end
        2'd2: begin
            t_array_muxed5 <= soclinux_bankmachine2_cmd_payload_we;
        end
        2'd3: begin
            t_array_muxed5 <= soclinux_bankmachine3_cmd_payload_we;
        end
        3'd4: begin
            t_array_muxed5 <= soclinux_bankmachine4_cmd_payload_we;
        end
        3'd5: begin
            t_array_muxed5 <= soclinux_bankmachine5_cmd_payload_we;
        end
        3'd6: begin
            t_array_muxed5 <= soclinux_bankmachine6_cmd_payload_we;
        end
        default: begin
            t_array_muxed5 <= soclinux_bankmachine7_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed20 <= 21'd0;
    case (roundrobin0_grant)
        1'd0: begin
            rhs_array_muxed20 <= {soclinux_litedramnativeport0_cmd_payload_addr[23:10], soclinux_litedramnativeport0_cmd_payload_addr[6:0]};
        end
        1'd1: begin
            rhs_array_muxed20 <= {soclinux_litedramnativeport1_cmd_payload_addr[23:10], soclinux_litedramnativeport1_cmd_payload_addr[6:0]};
        end
        default: begin
            rhs_array_muxed20 <= {soclinux_litedramnativeport2_cmd_payload_addr[23:10], soclinux_litedramnativeport2_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    rhs_array_muxed21 <= 1'd0;
    case (roundrobin0_grant)
        1'd0: begin
            rhs_array_muxed21 <= soclinux_litedramnativeport0_cmd_payload_we;
        end
        1'd1: begin
            rhs_array_muxed21 <= soclinux_litedramnativeport1_cmd_payload_we;
        end
        default: begin
            rhs_array_muxed21 <= soclinux_litedramnativeport2_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed22 <= 1'd0;
    case (roundrobin0_grant)
        1'd0: begin
            rhs_array_muxed22 <= (((soclinux_litedramnativeport0_cmd_payload_addr[9:7] == 1'd0) & (~(((((((locked0 | (soclinux_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & soclinux_litedramnativeport0_cmd_valid);
        end
        1'd1: begin
            rhs_array_muxed22 <= (((soclinux_litedramnativeport1_cmd_payload_addr[9:7] == 1'd0) & (~(((((((locked1 | (soclinux_interface_bank1_lock & (roundrobin1_grant == 1'd1))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 1'd1))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 1'd1))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 1'd1))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 1'd1))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 1'd1))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 1'd1))))) & soclinux_litedramnativeport1_cmd_valid);
        end
        default: begin
            rhs_array_muxed22 <= (((soclinux_litedramnativeport2_cmd_payload_addr[9:7] == 1'd0) & (~(((((((locked2 | (soclinux_interface_bank1_lock & (roundrobin1_grant == 2'd2))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 2'd2))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 2'd2))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 2'd2))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 2'd2))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 2'd2))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 2'd2))))) & soclinux_litedramnativeport2_cmd_valid);
        end
    endcase
end
always @(*) begin
    rhs_array_muxed23 <= 21'd0;
    case (roundrobin1_grant)
        1'd0: begin
            rhs_array_muxed23 <= {soclinux_litedramnativeport0_cmd_payload_addr[23:10], soclinux_litedramnativeport0_cmd_payload_addr[6:0]};
        end
        1'd1: begin
            rhs_array_muxed23 <= {soclinux_litedramnativeport1_cmd_payload_addr[23:10], soclinux_litedramnativeport1_cmd_payload_addr[6:0]};
        end
        default: begin
            rhs_array_muxed23 <= {soclinux_litedramnativeport2_cmd_payload_addr[23:10], soclinux_litedramnativeport2_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    rhs_array_muxed24 <= 1'd0;
    case (roundrobin1_grant)
        1'd0: begin
            rhs_array_muxed24 <= soclinux_litedramnativeport0_cmd_payload_we;
        end
        1'd1: begin
            rhs_array_muxed24 <= soclinux_litedramnativeport1_cmd_payload_we;
        end
        default: begin
            rhs_array_muxed24 <= soclinux_litedramnativeport2_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed25 <= 1'd0;
    case (roundrobin1_grant)
        1'd0: begin
            rhs_array_muxed25 <= (((soclinux_litedramnativeport0_cmd_payload_addr[9:7] == 1'd1) & (~(((((((locked3 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & soclinux_litedramnativeport0_cmd_valid);
        end
        1'd1: begin
            rhs_array_muxed25 <= (((soclinux_litedramnativeport1_cmd_payload_addr[9:7] == 1'd1) & (~(((((((locked4 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 1'd1))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 1'd1))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 1'd1))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 1'd1))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 1'd1))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 1'd1))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 1'd1))))) & soclinux_litedramnativeport1_cmd_valid);
        end
        default: begin
            rhs_array_muxed25 <= (((soclinux_litedramnativeport2_cmd_payload_addr[9:7] == 1'd1) & (~(((((((locked5 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 2'd2))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 2'd2))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 2'd2))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 2'd2))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 2'd2))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 2'd2))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 2'd2))))) & soclinux_litedramnativeport2_cmd_valid);
        end
    endcase
end
always @(*) begin
    rhs_array_muxed26 <= 21'd0;
    case (roundrobin2_grant)
        1'd0: begin
            rhs_array_muxed26 <= {soclinux_litedramnativeport0_cmd_payload_addr[23:10], soclinux_litedramnativeport0_cmd_payload_addr[6:0]};
        end
        1'd1: begin
            rhs_array_muxed26 <= {soclinux_litedramnativeport1_cmd_payload_addr[23:10], soclinux_litedramnativeport1_cmd_payload_addr[6:0]};
        end
        default: begin
            rhs_array_muxed26 <= {soclinux_litedramnativeport2_cmd_payload_addr[23:10], soclinux_litedramnativeport2_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    rhs_array_muxed27 <= 1'd0;
    case (roundrobin2_grant)
        1'd0: begin
            rhs_array_muxed27 <= soclinux_litedramnativeport0_cmd_payload_we;
        end
        1'd1: begin
            rhs_array_muxed27 <= soclinux_litedramnativeport1_cmd_payload_we;
        end
        default: begin
            rhs_array_muxed27 <= soclinux_litedramnativeport2_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed28 <= 1'd0;
    case (roundrobin2_grant)
        1'd0: begin
            rhs_array_muxed28 <= (((soclinux_litedramnativeport0_cmd_payload_addr[9:7] == 2'd2) & (~(((((((locked6 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & soclinux_litedramnativeport0_cmd_valid);
        end
        1'd1: begin
            rhs_array_muxed28 <= (((soclinux_litedramnativeport1_cmd_payload_addr[9:7] == 2'd2) & (~(((((((locked7 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 1'd1))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 1'd1))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 1'd1))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 1'd1))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 1'd1))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 1'd1))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 1'd1))))) & soclinux_litedramnativeport1_cmd_valid);
        end
        default: begin
            rhs_array_muxed28 <= (((soclinux_litedramnativeport2_cmd_payload_addr[9:7] == 2'd2) & (~(((((((locked8 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 2'd2))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 2'd2))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 2'd2))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 2'd2))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 2'd2))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 2'd2))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 2'd2))))) & soclinux_litedramnativeport2_cmd_valid);
        end
    endcase
end
always @(*) begin
    rhs_array_muxed29 <= 21'd0;
    case (roundrobin3_grant)
        1'd0: begin
            rhs_array_muxed29 <= {soclinux_litedramnativeport0_cmd_payload_addr[23:10], soclinux_litedramnativeport0_cmd_payload_addr[6:0]};
        end
        1'd1: begin
            rhs_array_muxed29 <= {soclinux_litedramnativeport1_cmd_payload_addr[23:10], soclinux_litedramnativeport1_cmd_payload_addr[6:0]};
        end
        default: begin
            rhs_array_muxed29 <= {soclinux_litedramnativeport2_cmd_payload_addr[23:10], soclinux_litedramnativeport2_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    rhs_array_muxed30 <= 1'd0;
    case (roundrobin3_grant)
        1'd0: begin
            rhs_array_muxed30 <= soclinux_litedramnativeport0_cmd_payload_we;
        end
        1'd1: begin
            rhs_array_muxed30 <= soclinux_litedramnativeport1_cmd_payload_we;
        end
        default: begin
            rhs_array_muxed30 <= soclinux_litedramnativeport2_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed31 <= 1'd0;
    case (roundrobin3_grant)
        1'd0: begin
            rhs_array_muxed31 <= (((soclinux_litedramnativeport0_cmd_payload_addr[9:7] == 2'd3) & (~(((((((locked9 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & soclinux_litedramnativeport0_cmd_valid);
        end
        1'd1: begin
            rhs_array_muxed31 <= (((soclinux_litedramnativeport1_cmd_payload_addr[9:7] == 2'd3) & (~(((((((locked10 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 1'd1))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 1'd1))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 1'd1))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 1'd1))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 1'd1))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 1'd1))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 1'd1))))) & soclinux_litedramnativeport1_cmd_valid);
        end
        default: begin
            rhs_array_muxed31 <= (((soclinux_litedramnativeport2_cmd_payload_addr[9:7] == 2'd3) & (~(((((((locked11 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 2'd2))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 2'd2))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 2'd2))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 2'd2))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 2'd2))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 2'd2))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 2'd2))))) & soclinux_litedramnativeport2_cmd_valid);
        end
    endcase
end
always @(*) begin
    rhs_array_muxed32 <= 21'd0;
    case (roundrobin4_grant)
        1'd0: begin
            rhs_array_muxed32 <= {soclinux_litedramnativeport0_cmd_payload_addr[23:10], soclinux_litedramnativeport0_cmd_payload_addr[6:0]};
        end
        1'd1: begin
            rhs_array_muxed32 <= {soclinux_litedramnativeport1_cmd_payload_addr[23:10], soclinux_litedramnativeport1_cmd_payload_addr[6:0]};
        end
        default: begin
            rhs_array_muxed32 <= {soclinux_litedramnativeport2_cmd_payload_addr[23:10], soclinux_litedramnativeport2_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    rhs_array_muxed33 <= 1'd0;
    case (roundrobin4_grant)
        1'd0: begin
            rhs_array_muxed33 <= soclinux_litedramnativeport0_cmd_payload_we;
        end
        1'd1: begin
            rhs_array_muxed33 <= soclinux_litedramnativeport1_cmd_payload_we;
        end
        default: begin
            rhs_array_muxed33 <= soclinux_litedramnativeport2_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed34 <= 1'd0;
    case (roundrobin4_grant)
        1'd0: begin
            rhs_array_muxed34 <= (((soclinux_litedramnativeport0_cmd_payload_addr[9:7] == 3'd4) & (~(((((((locked12 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & soclinux_litedramnativeport0_cmd_valid);
        end
        1'd1: begin
            rhs_array_muxed34 <= (((soclinux_litedramnativeport1_cmd_payload_addr[9:7] == 3'd4) & (~(((((((locked13 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 1'd1))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 1'd1))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 1'd1))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 1'd1))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 1'd1))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 1'd1))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 1'd1))))) & soclinux_litedramnativeport1_cmd_valid);
        end
        default: begin
            rhs_array_muxed34 <= (((soclinux_litedramnativeport2_cmd_payload_addr[9:7] == 3'd4) & (~(((((((locked14 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 2'd2))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 2'd2))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 2'd2))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 2'd2))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 2'd2))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 2'd2))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 2'd2))))) & soclinux_litedramnativeport2_cmd_valid);
        end
    endcase
end
always @(*) begin
    rhs_array_muxed35 <= 21'd0;
    case (roundrobin5_grant)
        1'd0: begin
            rhs_array_muxed35 <= {soclinux_litedramnativeport0_cmd_payload_addr[23:10], soclinux_litedramnativeport0_cmd_payload_addr[6:0]};
        end
        1'd1: begin
            rhs_array_muxed35 <= {soclinux_litedramnativeport1_cmd_payload_addr[23:10], soclinux_litedramnativeport1_cmd_payload_addr[6:0]};
        end
        default: begin
            rhs_array_muxed35 <= {soclinux_litedramnativeport2_cmd_payload_addr[23:10], soclinux_litedramnativeport2_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    rhs_array_muxed36 <= 1'd0;
    case (roundrobin5_grant)
        1'd0: begin
            rhs_array_muxed36 <= soclinux_litedramnativeport0_cmd_payload_we;
        end
        1'd1: begin
            rhs_array_muxed36 <= soclinux_litedramnativeport1_cmd_payload_we;
        end
        default: begin
            rhs_array_muxed36 <= soclinux_litedramnativeport2_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed37 <= 1'd0;
    case (roundrobin5_grant)
        1'd0: begin
            rhs_array_muxed37 <= (((soclinux_litedramnativeport0_cmd_payload_addr[9:7] == 3'd5) & (~(((((((locked15 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 1'd0))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & soclinux_litedramnativeport0_cmd_valid);
        end
        1'd1: begin
            rhs_array_muxed37 <= (((soclinux_litedramnativeport1_cmd_payload_addr[9:7] == 3'd5) & (~(((((((locked16 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 1'd1))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 1'd1))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 1'd1))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 1'd1))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 1'd1))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 1'd1))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 1'd1))))) & soclinux_litedramnativeport1_cmd_valid);
        end
        default: begin
            rhs_array_muxed37 <= (((soclinux_litedramnativeport2_cmd_payload_addr[9:7] == 3'd5) & (~(((((((locked17 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 2'd2))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 2'd2))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 2'd2))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 2'd2))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 2'd2))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 2'd2))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 2'd2))))) & soclinux_litedramnativeport2_cmd_valid);
        end
    endcase
end
always @(*) begin
    rhs_array_muxed38 <= 21'd0;
    case (roundrobin6_grant)
        1'd0: begin
            rhs_array_muxed38 <= {soclinux_litedramnativeport0_cmd_payload_addr[23:10], soclinux_litedramnativeport0_cmd_payload_addr[6:0]};
        end
        1'd1: begin
            rhs_array_muxed38 <= {soclinux_litedramnativeport1_cmd_payload_addr[23:10], soclinux_litedramnativeport1_cmd_payload_addr[6:0]};
        end
        default: begin
            rhs_array_muxed38 <= {soclinux_litedramnativeport2_cmd_payload_addr[23:10], soclinux_litedramnativeport2_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    rhs_array_muxed39 <= 1'd0;
    case (roundrobin6_grant)
        1'd0: begin
            rhs_array_muxed39 <= soclinux_litedramnativeport0_cmd_payload_we;
        end
        1'd1: begin
            rhs_array_muxed39 <= soclinux_litedramnativeport1_cmd_payload_we;
        end
        default: begin
            rhs_array_muxed39 <= soclinux_litedramnativeport2_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed40 <= 1'd0;
    case (roundrobin6_grant)
        1'd0: begin
            rhs_array_muxed40 <= (((soclinux_litedramnativeport0_cmd_payload_addr[9:7] == 3'd6) & (~(((((((locked18 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 1'd0))))) & soclinux_litedramnativeport0_cmd_valid);
        end
        1'd1: begin
            rhs_array_muxed40 <= (((soclinux_litedramnativeport1_cmd_payload_addr[9:7] == 3'd6) & (~(((((((locked19 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 1'd1))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 1'd1))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 1'd1))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 1'd1))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 1'd1))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 1'd1))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 1'd1))))) & soclinux_litedramnativeport1_cmd_valid);
        end
        default: begin
            rhs_array_muxed40 <= (((soclinux_litedramnativeport2_cmd_payload_addr[9:7] == 3'd6) & (~(((((((locked20 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 2'd2))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 2'd2))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 2'd2))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 2'd2))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 2'd2))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 2'd2))) | (soclinux_interface_bank7_lock & (roundrobin7_grant == 2'd2))))) & soclinux_litedramnativeport2_cmd_valid);
        end
    endcase
end
always @(*) begin
    rhs_array_muxed41 <= 21'd0;
    case (roundrobin7_grant)
        1'd0: begin
            rhs_array_muxed41 <= {soclinux_litedramnativeport0_cmd_payload_addr[23:10], soclinux_litedramnativeport0_cmd_payload_addr[6:0]};
        end
        1'd1: begin
            rhs_array_muxed41 <= {soclinux_litedramnativeport1_cmd_payload_addr[23:10], soclinux_litedramnativeport1_cmd_payload_addr[6:0]};
        end
        default: begin
            rhs_array_muxed41 <= {soclinux_litedramnativeport2_cmd_payload_addr[23:10], soclinux_litedramnativeport2_cmd_payload_addr[6:0]};
        end
    endcase
end
always @(*) begin
    rhs_array_muxed42 <= 1'd0;
    case (roundrobin7_grant)
        1'd0: begin
            rhs_array_muxed42 <= soclinux_litedramnativeport0_cmd_payload_we;
        end
        1'd1: begin
            rhs_array_muxed42 <= soclinux_litedramnativeport1_cmd_payload_we;
        end
        default: begin
            rhs_array_muxed42 <= soclinux_litedramnativeport2_cmd_payload_we;
        end
    endcase
end
always @(*) begin
    rhs_array_muxed43 <= 1'd0;
    case (roundrobin7_grant)
        1'd0: begin
            rhs_array_muxed43 <= (((soclinux_litedramnativeport0_cmd_payload_addr[9:7] == 3'd7) & (~(((((((locked21 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 1'd0))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 1'd0))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 1'd0))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 1'd0))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 1'd0))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 1'd0))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 1'd0))))) & soclinux_litedramnativeport0_cmd_valid);
        end
        1'd1: begin
            rhs_array_muxed43 <= (((soclinux_litedramnativeport1_cmd_payload_addr[9:7] == 3'd7) & (~(((((((locked22 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 1'd1))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 1'd1))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 1'd1))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 1'd1))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 1'd1))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 1'd1))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 1'd1))))) & soclinux_litedramnativeport1_cmd_valid);
        end
        default: begin
            rhs_array_muxed43 <= (((soclinux_litedramnativeport2_cmd_payload_addr[9:7] == 3'd7) & (~(((((((locked23 | (soclinux_interface_bank0_lock & (roundrobin0_grant == 2'd2))) | (soclinux_interface_bank1_lock & (roundrobin1_grant == 2'd2))) | (soclinux_interface_bank2_lock & (roundrobin2_grant == 2'd2))) | (soclinux_interface_bank3_lock & (roundrobin3_grant == 2'd2))) | (soclinux_interface_bank4_lock & (roundrobin4_grant == 2'd2))) | (soclinux_interface_bank5_lock & (roundrobin5_grant == 2'd2))) | (soclinux_interface_bank6_lock & (roundrobin6_grant == 2'd2))))) & soclinux_litedramnativeport2_cmd_valid);
        end
    endcase
end
always @(*) begin
    array_muxed0 <= 3'd0;
    case (soclinux_steerer_sel0)
        1'd0: begin
            array_muxed0 <= soclinux_nop_ba[2:0];
        end
        1'd1: begin
            array_muxed0 <= soclinux_choose_cmd_cmd_payload_ba[2:0];
        end
        2'd2: begin
            array_muxed0 <= soclinux_choose_req_cmd_payload_ba[2:0];
        end
        default: begin
            array_muxed0 <= soclinux_cmd_payload_ba[2:0];
        end
    endcase
end
always @(*) begin
    array_muxed1 <= 14'd0;
    case (soclinux_steerer_sel0)
        1'd0: begin
            array_muxed1 <= soclinux_nop_a;
        end
        1'd1: begin
            array_muxed1 <= soclinux_choose_cmd_cmd_payload_a;
        end
        2'd2: begin
            array_muxed1 <= soclinux_choose_req_cmd_payload_a;
        end
        default: begin
            array_muxed1 <= soclinux_cmd_payload_a;
        end
    endcase
end
always @(*) begin
    array_muxed2 <= 1'd0;
    case (soclinux_steerer_sel0)
        1'd0: begin
            array_muxed2 <= 1'd0;
        end
        1'd1: begin
            array_muxed2 <= ((soclinux_choose_cmd_cmd_valid & soclinux_choose_cmd_cmd_ready) & soclinux_choose_cmd_cmd_payload_cas);
        end
        2'd2: begin
            array_muxed2 <= ((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & soclinux_choose_req_cmd_payload_cas);
        end
        default: begin
            array_muxed2 <= ((soclinux_cmd_valid & soclinux_cmd_ready) & soclinux_cmd_payload_cas);
        end
    endcase
end
always @(*) begin
    array_muxed3 <= 1'd0;
    case (soclinux_steerer_sel0)
        1'd0: begin
            array_muxed3 <= 1'd0;
        end
        1'd1: begin
            array_muxed3 <= ((soclinux_choose_cmd_cmd_valid & soclinux_choose_cmd_cmd_ready) & soclinux_choose_cmd_cmd_payload_ras);
        end
        2'd2: begin
            array_muxed3 <= ((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & soclinux_choose_req_cmd_payload_ras);
        end
        default: begin
            array_muxed3 <= ((soclinux_cmd_valid & soclinux_cmd_ready) & soclinux_cmd_payload_ras);
        end
    endcase
end
always @(*) begin
    array_muxed4 <= 1'd0;
    case (soclinux_steerer_sel0)
        1'd0: begin
            array_muxed4 <= 1'd0;
        end
        1'd1: begin
            array_muxed4 <= ((soclinux_choose_cmd_cmd_valid & soclinux_choose_cmd_cmd_ready) & soclinux_choose_cmd_cmd_payload_we);
        end
        2'd2: begin
            array_muxed4 <= ((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & soclinux_choose_req_cmd_payload_we);
        end
        default: begin
            array_muxed4 <= ((soclinux_cmd_valid & soclinux_cmd_ready) & soclinux_cmd_payload_we);
        end
    endcase
end
always @(*) begin
    array_muxed5 <= 1'd0;
    case (soclinux_steerer_sel0)
        1'd0: begin
            array_muxed5 <= 1'd0;
        end
        1'd1: begin
            array_muxed5 <= ((soclinux_choose_cmd_cmd_valid & soclinux_choose_cmd_cmd_ready) & soclinux_choose_cmd_cmd_payload_is_read);
        end
        2'd2: begin
            array_muxed5 <= ((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & soclinux_choose_req_cmd_payload_is_read);
        end
        default: begin
            array_muxed5 <= ((soclinux_cmd_valid & soclinux_cmd_ready) & soclinux_cmd_payload_is_read);
        end
    endcase
end
always @(*) begin
    array_muxed6 <= 1'd0;
    case (soclinux_steerer_sel0)
        1'd0: begin
            array_muxed6 <= 1'd0;
        end
        1'd1: begin
            array_muxed6 <= ((soclinux_choose_cmd_cmd_valid & soclinux_choose_cmd_cmd_ready) & soclinux_choose_cmd_cmd_payload_is_write);
        end
        2'd2: begin
            array_muxed6 <= ((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & soclinux_choose_req_cmd_payload_is_write);
        end
        default: begin
            array_muxed6 <= ((soclinux_cmd_valid & soclinux_cmd_ready) & soclinux_cmd_payload_is_write);
        end
    endcase
end
always @(*) begin
    array_muxed7 <= 3'd0;
    case (soclinux_steerer_sel1)
        1'd0: begin
            array_muxed7 <= soclinux_nop_ba[2:0];
        end
        1'd1: begin
            array_muxed7 <= soclinux_choose_cmd_cmd_payload_ba[2:0];
        end
        2'd2: begin
            array_muxed7 <= soclinux_choose_req_cmd_payload_ba[2:0];
        end
        default: begin
            array_muxed7 <= soclinux_cmd_payload_ba[2:0];
        end
    endcase
end
always @(*) begin
    array_muxed8 <= 14'd0;
    case (soclinux_steerer_sel1)
        1'd0: begin
            array_muxed8 <= soclinux_nop_a;
        end
        1'd1: begin
            array_muxed8 <= soclinux_choose_cmd_cmd_payload_a;
        end
        2'd2: begin
            array_muxed8 <= soclinux_choose_req_cmd_payload_a;
        end
        default: begin
            array_muxed8 <= soclinux_cmd_payload_a;
        end
    endcase
end
always @(*) begin
    array_muxed9 <= 1'd0;
    case (soclinux_steerer_sel1)
        1'd0: begin
            array_muxed9 <= 1'd0;
        end
        1'd1: begin
            array_muxed9 <= ((soclinux_choose_cmd_cmd_valid & soclinux_choose_cmd_cmd_ready) & soclinux_choose_cmd_cmd_payload_cas);
        end
        2'd2: begin
            array_muxed9 <= ((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & soclinux_choose_req_cmd_payload_cas);
        end
        default: begin
            array_muxed9 <= ((soclinux_cmd_valid & soclinux_cmd_ready) & soclinux_cmd_payload_cas);
        end
    endcase
end
always @(*) begin
    array_muxed10 <= 1'd0;
    case (soclinux_steerer_sel1)
        1'd0: begin
            array_muxed10 <= 1'd0;
        end
        1'd1: begin
            array_muxed10 <= ((soclinux_choose_cmd_cmd_valid & soclinux_choose_cmd_cmd_ready) & soclinux_choose_cmd_cmd_payload_ras);
        end
        2'd2: begin
            array_muxed10 <= ((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & soclinux_choose_req_cmd_payload_ras);
        end
        default: begin
            array_muxed10 <= ((soclinux_cmd_valid & soclinux_cmd_ready) & soclinux_cmd_payload_ras);
        end
    endcase
end
always @(*) begin
    array_muxed11 <= 1'd0;
    case (soclinux_steerer_sel1)
        1'd0: begin
            array_muxed11 <= 1'd0;
        end
        1'd1: begin
            array_muxed11 <= ((soclinux_choose_cmd_cmd_valid & soclinux_choose_cmd_cmd_ready) & soclinux_choose_cmd_cmd_payload_we);
        end
        2'd2: begin
            array_muxed11 <= ((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & soclinux_choose_req_cmd_payload_we);
        end
        default: begin
            array_muxed11 <= ((soclinux_cmd_valid & soclinux_cmd_ready) & soclinux_cmd_payload_we);
        end
    endcase
end
always @(*) begin
    array_muxed12 <= 1'd0;
    case (soclinux_steerer_sel1)
        1'd0: begin
            array_muxed12 <= 1'd0;
        end
        1'd1: begin
            array_muxed12 <= ((soclinux_choose_cmd_cmd_valid & soclinux_choose_cmd_cmd_ready) & soclinux_choose_cmd_cmd_payload_is_read);
        end
        2'd2: begin
            array_muxed12 <= ((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & soclinux_choose_req_cmd_payload_is_read);
        end
        default: begin
            array_muxed12 <= ((soclinux_cmd_valid & soclinux_cmd_ready) & soclinux_cmd_payload_is_read);
        end
    endcase
end
always @(*) begin
    array_muxed13 <= 1'd0;
    case (soclinux_steerer_sel1)
        1'd0: begin
            array_muxed13 <= 1'd0;
        end
        1'd1: begin
            array_muxed13 <= ((soclinux_choose_cmd_cmd_valid & soclinux_choose_cmd_cmd_ready) & soclinux_choose_cmd_cmd_payload_is_write);
        end
        2'd2: begin
            array_muxed13 <= ((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & soclinux_choose_req_cmd_payload_is_write);
        end
        default: begin
            array_muxed13 <= ((soclinux_cmd_valid & soclinux_cmd_ready) & soclinux_cmd_payload_is_write);
        end
    endcase
end
always @(*) begin
    array_muxed14 <= 3'd0;
    case (soclinux_steerer_sel2)
        1'd0: begin
            array_muxed14 <= soclinux_nop_ba[2:0];
        end
        1'd1: begin
            array_muxed14 <= soclinux_choose_cmd_cmd_payload_ba[2:0];
        end
        2'd2: begin
            array_muxed14 <= soclinux_choose_req_cmd_payload_ba[2:0];
        end
        default: begin
            array_muxed14 <= soclinux_cmd_payload_ba[2:0];
        end
    endcase
end
always @(*) begin
    array_muxed15 <= 14'd0;
    case (soclinux_steerer_sel2)
        1'd0: begin
            array_muxed15 <= soclinux_nop_a;
        end
        1'd1: begin
            array_muxed15 <= soclinux_choose_cmd_cmd_payload_a;
        end
        2'd2: begin
            array_muxed15 <= soclinux_choose_req_cmd_payload_a;
        end
        default: begin
            array_muxed15 <= soclinux_cmd_payload_a;
        end
    endcase
end
always @(*) begin
    array_muxed16 <= 1'd0;
    case (soclinux_steerer_sel2)
        1'd0: begin
            array_muxed16 <= 1'd0;
        end
        1'd1: begin
            array_muxed16 <= ((soclinux_choose_cmd_cmd_valid & soclinux_choose_cmd_cmd_ready) & soclinux_choose_cmd_cmd_payload_cas);
        end
        2'd2: begin
            array_muxed16 <= ((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & soclinux_choose_req_cmd_payload_cas);
        end
        default: begin
            array_muxed16 <= ((soclinux_cmd_valid & soclinux_cmd_ready) & soclinux_cmd_payload_cas);
        end
    endcase
end
always @(*) begin
    array_muxed17 <= 1'd0;
    case (soclinux_steerer_sel2)
        1'd0: begin
            array_muxed17 <= 1'd0;
        end
        1'd1: begin
            array_muxed17 <= ((soclinux_choose_cmd_cmd_valid & soclinux_choose_cmd_cmd_ready) & soclinux_choose_cmd_cmd_payload_ras);
        end
        2'd2: begin
            array_muxed17 <= ((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & soclinux_choose_req_cmd_payload_ras);
        end
        default: begin
            array_muxed17 <= ((soclinux_cmd_valid & soclinux_cmd_ready) & soclinux_cmd_payload_ras);
        end
    endcase
end
always @(*) begin
    array_muxed18 <= 1'd0;
    case (soclinux_steerer_sel2)
        1'd0: begin
            array_muxed18 <= 1'd0;
        end
        1'd1: begin
            array_muxed18 <= ((soclinux_choose_cmd_cmd_valid & soclinux_choose_cmd_cmd_ready) & soclinux_choose_cmd_cmd_payload_we);
        end
        2'd2: begin
            array_muxed18 <= ((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & soclinux_choose_req_cmd_payload_we);
        end
        default: begin
            array_muxed18 <= ((soclinux_cmd_valid & soclinux_cmd_ready) & soclinux_cmd_payload_we);
        end
    endcase
end
always @(*) begin
    array_muxed19 <= 1'd0;
    case (soclinux_steerer_sel2)
        1'd0: begin
            array_muxed19 <= 1'd0;
        end
        1'd1: begin
            array_muxed19 <= ((soclinux_choose_cmd_cmd_valid & soclinux_choose_cmd_cmd_ready) & soclinux_choose_cmd_cmd_payload_is_read);
        end
        2'd2: begin
            array_muxed19 <= ((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & soclinux_choose_req_cmd_payload_is_read);
        end
        default: begin
            array_muxed19 <= ((soclinux_cmd_valid & soclinux_cmd_ready) & soclinux_cmd_payload_is_read);
        end
    endcase
end
always @(*) begin
    array_muxed20 <= 1'd0;
    case (soclinux_steerer_sel2)
        1'd0: begin
            array_muxed20 <= 1'd0;
        end
        1'd1: begin
            array_muxed20 <= ((soclinux_choose_cmd_cmd_valid & soclinux_choose_cmd_cmd_ready) & soclinux_choose_cmd_cmd_payload_is_write);
        end
        2'd2: begin
            array_muxed20 <= ((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & soclinux_choose_req_cmd_payload_is_write);
        end
        default: begin
            array_muxed20 <= ((soclinux_cmd_valid & soclinux_cmd_ready) & soclinux_cmd_payload_is_write);
        end
    endcase
end
always @(*) begin
    array_muxed21 <= 3'd0;
    case (soclinux_steerer_sel3)
        1'd0: begin
            array_muxed21 <= soclinux_nop_ba[2:0];
        end
        1'd1: begin
            array_muxed21 <= soclinux_choose_cmd_cmd_payload_ba[2:0];
        end
        2'd2: begin
            array_muxed21 <= soclinux_choose_req_cmd_payload_ba[2:0];
        end
        default: begin
            array_muxed21 <= soclinux_cmd_payload_ba[2:0];
        end
    endcase
end
always @(*) begin
    array_muxed22 <= 14'd0;
    case (soclinux_steerer_sel3)
        1'd0: begin
            array_muxed22 <= soclinux_nop_a;
        end
        1'd1: begin
            array_muxed22 <= soclinux_choose_cmd_cmd_payload_a;
        end
        2'd2: begin
            array_muxed22 <= soclinux_choose_req_cmd_payload_a;
        end
        default: begin
            array_muxed22 <= soclinux_cmd_payload_a;
        end
    endcase
end
always @(*) begin
    array_muxed23 <= 1'd0;
    case (soclinux_steerer_sel3)
        1'd0: begin
            array_muxed23 <= 1'd0;
        end
        1'd1: begin
            array_muxed23 <= ((soclinux_choose_cmd_cmd_valid & soclinux_choose_cmd_cmd_ready) & soclinux_choose_cmd_cmd_payload_cas);
        end
        2'd2: begin
            array_muxed23 <= ((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & soclinux_choose_req_cmd_payload_cas);
        end
        default: begin
            array_muxed23 <= ((soclinux_cmd_valid & soclinux_cmd_ready) & soclinux_cmd_payload_cas);
        end
    endcase
end
always @(*) begin
    array_muxed24 <= 1'd0;
    case (soclinux_steerer_sel3)
        1'd0: begin
            array_muxed24 <= 1'd0;
        end
        1'd1: begin
            array_muxed24 <= ((soclinux_choose_cmd_cmd_valid & soclinux_choose_cmd_cmd_ready) & soclinux_choose_cmd_cmd_payload_ras);
        end
        2'd2: begin
            array_muxed24 <= ((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & soclinux_choose_req_cmd_payload_ras);
        end
        default: begin
            array_muxed24 <= ((soclinux_cmd_valid & soclinux_cmd_ready) & soclinux_cmd_payload_ras);
        end
    endcase
end
always @(*) begin
    array_muxed25 <= 1'd0;
    case (soclinux_steerer_sel3)
        1'd0: begin
            array_muxed25 <= 1'd0;
        end
        1'd1: begin
            array_muxed25 <= ((soclinux_choose_cmd_cmd_valid & soclinux_choose_cmd_cmd_ready) & soclinux_choose_cmd_cmd_payload_we);
        end
        2'd2: begin
            array_muxed25 <= ((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & soclinux_choose_req_cmd_payload_we);
        end
        default: begin
            array_muxed25 <= ((soclinux_cmd_valid & soclinux_cmd_ready) & soclinux_cmd_payload_we);
        end
    endcase
end
always @(*) begin
    array_muxed26 <= 1'd0;
    case (soclinux_steerer_sel3)
        1'd0: begin
            array_muxed26 <= 1'd0;
        end
        1'd1: begin
            array_muxed26 <= ((soclinux_choose_cmd_cmd_valid & soclinux_choose_cmd_cmd_ready) & soclinux_choose_cmd_cmd_payload_is_read);
        end
        2'd2: begin
            array_muxed26 <= ((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & soclinux_choose_req_cmd_payload_is_read);
        end
        default: begin
            array_muxed26 <= ((soclinux_cmd_valid & soclinux_cmd_ready) & soclinux_cmd_payload_is_read);
        end
    endcase
end
always @(*) begin
    array_muxed27 <= 1'd0;
    case (soclinux_steerer_sel3)
        1'd0: begin
            array_muxed27 <= 1'd0;
        end
        1'd1: begin
            array_muxed27 <= ((soclinux_choose_cmd_cmd_valid & soclinux_choose_cmd_cmd_ready) & soclinux_choose_cmd_cmd_payload_is_write);
        end
        2'd2: begin
            array_muxed27 <= ((soclinux_choose_req_cmd_valid & soclinux_choose_req_cmd_ready) & soclinux_choose_req_cmd_payload_is_write);
        end
        default: begin
            array_muxed27 <= ((soclinux_cmd_valid & soclinux_cmd_ready) & soclinux_cmd_payload_is_write);
        end
    endcase
end
assign impl_xilinxasyncresetsynchronizerimpl0 = (~crg_locked);
assign impl_xilinxasyncresetsynchronizerimpl1 = (~crg_locked);
assign impl_xilinxasyncresetsynchronizerimpl2 = (~crg_locked);
assign soclinux_rx_rx = impl_xilinxmultiregimpl0_regs1;
assign clk_i = impl_xilinxmultiregimpl1_regs;
assign impl_xilinxmultiregimpl1 = (~clocker_clk0);


//------------------------------------------------------------------------------
// Synchronous Logic
//------------------------------------------------------------------------------

always @(posedge idelay_clk) begin
    if ((crg_reset_counter != 1'd0)) begin
        crg_reset_counter <= (crg_reset_counter - 1'd1);
    end else begin
        crg_ic_reset <= 1'd0;
    end
    if (idelay_rst) begin
        crg_reset_counter <= 4'd15;
        crg_ic_reset <= 1'd1;
    end
end

always @(posedge sys_clk) begin
    case (grant)
        1'd0: begin
            if ((~request[0])) begin
                if (request[1]) begin
                    grant <= 1'd1;
                end else begin
                    if (request[2]) begin
                        grant <= 2'd2;
                    end
                end
            end
        end
        1'd1: begin
            if ((~request[1])) begin
                if (request[2]) begin
                    grant <= 2'd2;
                end else begin
                    if (request[0]) begin
                        grant <= 1'd0;
                    end
                end
            end
        end
        2'd2: begin
            if ((~request[2])) begin
                if (request[0]) begin
                    grant <= 1'd0;
                end else begin
                    if (request[1]) begin
                        grant <= 1'd1;
                    end
                end
            end
        end
    endcase
    slave_sel_r <= slave_sel;
    if (wait_1) begin
        if ((~done)) begin
            count <= (count - 1'd1);
        end
    end else begin
        count <= 20'd1000000;
    end
    if ((soclinux_bus_errors != 32'd4294967295)) begin
        if (soclinux_bus_error) begin
            soclinux_bus_errors <= (soclinux_bus_errors + 1'd1);
        end
    end
    soclinux_soclinux_ram_bus_ack <= 1'd0;
    if (((soclinux_soclinux_ram_bus_cyc & soclinux_soclinux_ram_bus_stb) & ((~soclinux_soclinux_ram_bus_ack) | soclinux_soclinux_adr_burst))) begin
        soclinux_soclinux_ram_bus_ack <= 1'd1;
    end
    soclinux_ram_bus_ram_bus_ack <= 1'd0;
    if (((soclinux_ram_bus_ram_bus_cyc & soclinux_ram_bus_ram_bus_stb) & ((~soclinux_ram_bus_ram_bus_ack) | soclinux_ram_adr_burst))) begin
        soclinux_ram_bus_ram_bus_ack <= 1'd1;
    end
    {soclinux_tx_tick, soclinux_tx_phase} <= 22'd3958241;
    if (soclinux_tx_enable) begin
        {soclinux_tx_tick, soclinux_tx_phase} <= (soclinux_tx_phase + 22'd3958241);
    end
    rs232phytx_state <= rs232phytx_next_state;
    if (soclinux_tx_count_rs232phytx_next_value_ce0) begin
        soclinux_tx_count <= soclinux_tx_count_rs232phytx_next_value0;
    end
    if (soclinux_serial_tx_rs232phytx_next_value_ce1) begin
        serial_tx <= soclinux_serial_tx_rs232phytx_next_value1;
    end
    if (soclinux_tx_data_rs232phytx_next_value_ce2) begin
        soclinux_tx_data <= soclinux_tx_data_rs232phytx_next_value2;
    end
    soclinux_rx_rx_d <= soclinux_rx_rx;
    {soclinux_rx_tick, soclinux_rx_phase} <= 32'd2147483648;
    if (soclinux_rx_enable) begin
        {soclinux_rx_tick, soclinux_rx_phase} <= (soclinux_rx_phase + 22'd3958241);
    end
    rs232phyrx_state <= rs232phyrx_next_state;
    if (soclinux_rx_count_rs232phyrx_next_value_ce0) begin
        soclinux_rx_count <= soclinux_rx_count_rs232phyrx_next_value0;
    end
    if (soclinux_rx_data_rs232phyrx_next_value_ce1) begin
        soclinux_rx_data <= soclinux_rx_data_rs232phyrx_next_value1;
    end
    if (soclinux_uart_tx_clear) begin
        soclinux_uart_tx_pending <= 1'd0;
    end
    soclinux_uart_tx_trigger_d <= soclinux_uart_tx_trigger;
    if ((soclinux_uart_tx_trigger & (~soclinux_uart_tx_trigger_d))) begin
        soclinux_uart_tx_pending <= 1'd1;
    end
    if (soclinux_uart_rx_clear) begin
        soclinux_uart_rx_pending <= 1'd0;
    end
    soclinux_uart_rx_trigger_d <= soclinux_uart_rx_trigger;
    if ((soclinux_uart_rx_trigger & (~soclinux_uart_rx_trigger_d))) begin
        soclinux_uart_rx_pending <= 1'd1;
    end
    if (soclinux_uart_tx_fifo_syncfifo_re) begin
        soclinux_uart_tx_fifo_readable <= 1'd1;
    end else begin
        if (soclinux_uart_tx_fifo_re) begin
            soclinux_uart_tx_fifo_readable <= 1'd0;
        end
    end
    if (((soclinux_uart_tx_fifo_syncfifo_we & soclinux_uart_tx_fifo_syncfifo_writable) & (~soclinux_uart_tx_fifo_replace))) begin
        soclinux_uart_tx_fifo_produce <= (soclinux_uart_tx_fifo_produce + 1'd1);
    end
    if (soclinux_uart_tx_fifo_do_read) begin
        soclinux_uart_tx_fifo_consume <= (soclinux_uart_tx_fifo_consume + 1'd1);
    end
    if (((soclinux_uart_tx_fifo_syncfifo_we & soclinux_uart_tx_fifo_syncfifo_writable) & (~soclinux_uart_tx_fifo_replace))) begin
        if ((~soclinux_uart_tx_fifo_do_read)) begin
            soclinux_uart_tx_fifo_level0 <= (soclinux_uart_tx_fifo_level0 + 1'd1);
        end
    end else begin
        if (soclinux_uart_tx_fifo_do_read) begin
            soclinux_uart_tx_fifo_level0 <= (soclinux_uart_tx_fifo_level0 - 1'd1);
        end
    end
    if (soclinux_uart_rx_fifo_syncfifo_re) begin
        soclinux_uart_rx_fifo_readable <= 1'd1;
    end else begin
        if (soclinux_uart_rx_fifo_re) begin
            soclinux_uart_rx_fifo_readable <= 1'd0;
        end
    end
    if (((soclinux_uart_rx_fifo_syncfifo_we & soclinux_uart_rx_fifo_syncfifo_writable) & (~soclinux_uart_rx_fifo_replace))) begin
        soclinux_uart_rx_fifo_produce <= (soclinux_uart_rx_fifo_produce + 1'd1);
    end
    if (soclinux_uart_rx_fifo_do_read) begin
        soclinux_uart_rx_fifo_consume <= (soclinux_uart_rx_fifo_consume + 1'd1);
    end
    if (((soclinux_uart_rx_fifo_syncfifo_we & soclinux_uart_rx_fifo_syncfifo_writable) & (~soclinux_uart_rx_fifo_replace))) begin
        if ((~soclinux_uart_rx_fifo_do_read)) begin
            soclinux_uart_rx_fifo_level0 <= (soclinux_uart_rx_fifo_level0 + 1'd1);
        end
    end else begin
        if (soclinux_uart_rx_fifo_do_read) begin
            soclinux_uart_rx_fifo_level0 <= (soclinux_uart_rx_fifo_level0 - 1'd1);
        end
    end
    if (soclinux_timer_en_storage) begin
        if ((soclinux_timer_value == 1'd0)) begin
            soclinux_timer_value <= soclinux_timer_reload_storage;
        end else begin
            soclinux_timer_value <= (soclinux_timer_value - 1'd1);
        end
    end else begin
        soclinux_timer_value <= soclinux_timer_load_storage;
    end
    if (soclinux_timer_update_value_re) begin
        soclinux_timer_value_status <= soclinux_timer_value;
    end
    if (soclinux_timer_zero_clear) begin
        soclinux_timer_zero_pending <= 1'd0;
    end
    soclinux_timer_zero_trigger_d <= soclinux_timer_zero_trigger;
    if ((soclinux_timer_zero_trigger & (~soclinux_timer_zero_trigger_d))) begin
        soclinux_timer_zero_pending <= 1'd1;
    end
    v7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline0 <= v7ddrphy_dqs_oe_delay_tappeddelayline;
    v7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline1 <= v7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline0;
    if ((v7ddrphy_dly_sel_storage[0] & v7ddrphy_wdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip0_value0 <= (v7ddrphy_bitslip0_value0 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[0] & v7ddrphy_wdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip0_value0 <= 3'd7;
    end
    v7ddrphy_bitslip0_r0 <= {v7ddrphy_dqspattern_o, v7ddrphy_bitslip0_r0[15:8]};
    if ((v7ddrphy_dly_sel_storage[1] & v7ddrphy_wdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip1_value0 <= (v7ddrphy_bitslip1_value0 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[1] & v7ddrphy_wdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip1_value0 <= 3'd7;
    end
    v7ddrphy_bitslip1_r0 <= {v7ddrphy_dqspattern_o, v7ddrphy_bitslip1_r0[15:8]};
    if ((v7ddrphy_dly_sel_storage[2] & v7ddrphy_wdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip2_value0 <= (v7ddrphy_bitslip2_value0 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[2] & v7ddrphy_wdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip2_value0 <= 3'd7;
    end
    v7ddrphy_bitslip2_r0 <= {v7ddrphy_dqspattern_o, v7ddrphy_bitslip2_r0[15:8]};
    if ((v7ddrphy_dly_sel_storage[3] & v7ddrphy_wdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip3_value0 <= (v7ddrphy_bitslip3_value0 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[3] & v7ddrphy_wdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip3_value0 <= 3'd7;
    end
    v7ddrphy_bitslip3_r0 <= {v7ddrphy_dqspattern_o, v7ddrphy_bitslip3_r0[15:8]};
    if ((v7ddrphy_dly_sel_storage[0] & v7ddrphy_wdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip0_value1 <= (v7ddrphy_bitslip0_value1 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[0] & v7ddrphy_wdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip0_value1 <= 3'd7;
    end
    v7ddrphy_bitslip0_r1 <= {{v7ddrphy_dfi_p3_wrdata_mask[4], v7ddrphy_dfi_p3_wrdata_mask[0], v7ddrphy_dfi_p2_wrdata_mask[4], v7ddrphy_dfi_p2_wrdata_mask[0], v7ddrphy_dfi_p1_wrdata_mask[4], v7ddrphy_dfi_p1_wrdata_mask[0], v7ddrphy_dfi_p0_wrdata_mask[4], v7ddrphy_dfi_p0_wrdata_mask[0]}, v7ddrphy_bitslip0_r1[15:8]};
    if ((v7ddrphy_dly_sel_storage[1] & v7ddrphy_wdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip1_value1 <= (v7ddrphy_bitslip1_value1 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[1] & v7ddrphy_wdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip1_value1 <= 3'd7;
    end
    v7ddrphy_bitslip1_r1 <= {{v7ddrphy_dfi_p3_wrdata_mask[5], v7ddrphy_dfi_p3_wrdata_mask[1], v7ddrphy_dfi_p2_wrdata_mask[5], v7ddrphy_dfi_p2_wrdata_mask[1], v7ddrphy_dfi_p1_wrdata_mask[5], v7ddrphy_dfi_p1_wrdata_mask[1], v7ddrphy_dfi_p0_wrdata_mask[5], v7ddrphy_dfi_p0_wrdata_mask[1]}, v7ddrphy_bitslip1_r1[15:8]};
    if ((v7ddrphy_dly_sel_storage[2] & v7ddrphy_wdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip2_value1 <= (v7ddrphy_bitslip2_value1 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[2] & v7ddrphy_wdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip2_value1 <= 3'd7;
    end
    v7ddrphy_bitslip2_r1 <= {{v7ddrphy_dfi_p3_wrdata_mask[6], v7ddrphy_dfi_p3_wrdata_mask[2], v7ddrphy_dfi_p2_wrdata_mask[6], v7ddrphy_dfi_p2_wrdata_mask[2], v7ddrphy_dfi_p1_wrdata_mask[6], v7ddrphy_dfi_p1_wrdata_mask[2], v7ddrphy_dfi_p0_wrdata_mask[6], v7ddrphy_dfi_p0_wrdata_mask[2]}, v7ddrphy_bitslip2_r1[15:8]};
    if ((v7ddrphy_dly_sel_storage[3] & v7ddrphy_wdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip3_value1 <= (v7ddrphy_bitslip3_value1 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[3] & v7ddrphy_wdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip3_value1 <= 3'd7;
    end
    v7ddrphy_bitslip3_r1 <= {{v7ddrphy_dfi_p3_wrdata_mask[7], v7ddrphy_dfi_p3_wrdata_mask[3], v7ddrphy_dfi_p2_wrdata_mask[7], v7ddrphy_dfi_p2_wrdata_mask[3], v7ddrphy_dfi_p1_wrdata_mask[7], v7ddrphy_dfi_p1_wrdata_mask[3], v7ddrphy_dfi_p0_wrdata_mask[7], v7ddrphy_dfi_p0_wrdata_mask[3]}, v7ddrphy_bitslip3_r1[15:8]};
    v7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline0 <= v7ddrphy_dq_oe_delay_tappeddelayline;
    v7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1 <= v7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline0;
    if ((v7ddrphy_dly_sel_storage[0] & v7ddrphy_wdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip0_value2 <= (v7ddrphy_bitslip0_value2 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[0] & v7ddrphy_wdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip0_value2 <= 3'd7;
    end
    v7ddrphy_bitslip0_r2 <= {{v7ddrphy_dfi_p3_wrdata[32], v7ddrphy_dfi_p3_wrdata[0], v7ddrphy_dfi_p2_wrdata[32], v7ddrphy_dfi_p2_wrdata[0], v7ddrphy_dfi_p1_wrdata[32], v7ddrphy_dfi_p1_wrdata[0], v7ddrphy_dfi_p0_wrdata[32], v7ddrphy_dfi_p0_wrdata[0]}, v7ddrphy_bitslip0_r2[15:8]};
    if ((v7ddrphy_dly_sel_storage[0] & v7ddrphy_rdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip0_value3 <= (v7ddrphy_bitslip0_value3 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[0] & v7ddrphy_rdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip0_value3 <= 3'd7;
    end
    v7ddrphy_bitslip0_r3 <= {v7ddrphy_bitslip03, v7ddrphy_bitslip0_r3[15:8]};
    if ((v7ddrphy_dly_sel_storage[0] & v7ddrphy_wdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip1_value2 <= (v7ddrphy_bitslip1_value2 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[0] & v7ddrphy_wdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip1_value2 <= 3'd7;
    end
    v7ddrphy_bitslip1_r2 <= {{v7ddrphy_dfi_p3_wrdata[33], v7ddrphy_dfi_p3_wrdata[1], v7ddrphy_dfi_p2_wrdata[33], v7ddrphy_dfi_p2_wrdata[1], v7ddrphy_dfi_p1_wrdata[33], v7ddrphy_dfi_p1_wrdata[1], v7ddrphy_dfi_p0_wrdata[33], v7ddrphy_dfi_p0_wrdata[1]}, v7ddrphy_bitslip1_r2[15:8]};
    if ((v7ddrphy_dly_sel_storage[0] & v7ddrphy_rdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip1_value3 <= (v7ddrphy_bitslip1_value3 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[0] & v7ddrphy_rdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip1_value3 <= 3'd7;
    end
    v7ddrphy_bitslip1_r3 <= {v7ddrphy_bitslip13, v7ddrphy_bitslip1_r3[15:8]};
    if ((v7ddrphy_dly_sel_storage[0] & v7ddrphy_wdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip2_value2 <= (v7ddrphy_bitslip2_value2 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[0] & v7ddrphy_wdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip2_value2 <= 3'd7;
    end
    v7ddrphy_bitslip2_r2 <= {{v7ddrphy_dfi_p3_wrdata[34], v7ddrphy_dfi_p3_wrdata[2], v7ddrphy_dfi_p2_wrdata[34], v7ddrphy_dfi_p2_wrdata[2], v7ddrphy_dfi_p1_wrdata[34], v7ddrphy_dfi_p1_wrdata[2], v7ddrphy_dfi_p0_wrdata[34], v7ddrphy_dfi_p0_wrdata[2]}, v7ddrphy_bitslip2_r2[15:8]};
    if ((v7ddrphy_dly_sel_storage[0] & v7ddrphy_rdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip2_value3 <= (v7ddrphy_bitslip2_value3 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[0] & v7ddrphy_rdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip2_value3 <= 3'd7;
    end
    v7ddrphy_bitslip2_r3 <= {v7ddrphy_bitslip23, v7ddrphy_bitslip2_r3[15:8]};
    if ((v7ddrphy_dly_sel_storage[0] & v7ddrphy_wdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip3_value2 <= (v7ddrphy_bitslip3_value2 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[0] & v7ddrphy_wdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip3_value2 <= 3'd7;
    end
    v7ddrphy_bitslip3_r2 <= {{v7ddrphy_dfi_p3_wrdata[35], v7ddrphy_dfi_p3_wrdata[3], v7ddrphy_dfi_p2_wrdata[35], v7ddrphy_dfi_p2_wrdata[3], v7ddrphy_dfi_p1_wrdata[35], v7ddrphy_dfi_p1_wrdata[3], v7ddrphy_dfi_p0_wrdata[35], v7ddrphy_dfi_p0_wrdata[3]}, v7ddrphy_bitslip3_r2[15:8]};
    if ((v7ddrphy_dly_sel_storage[0] & v7ddrphy_rdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip3_value3 <= (v7ddrphy_bitslip3_value3 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[0] & v7ddrphy_rdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip3_value3 <= 3'd7;
    end
    v7ddrphy_bitslip3_r3 <= {v7ddrphy_bitslip33, v7ddrphy_bitslip3_r3[15:8]};
    if ((v7ddrphy_dly_sel_storage[0] & v7ddrphy_wdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip4_value0 <= (v7ddrphy_bitslip4_value0 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[0] & v7ddrphy_wdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip4_value0 <= 3'd7;
    end
    v7ddrphy_bitslip4_r0 <= {{v7ddrphy_dfi_p3_wrdata[36], v7ddrphy_dfi_p3_wrdata[4], v7ddrphy_dfi_p2_wrdata[36], v7ddrphy_dfi_p2_wrdata[4], v7ddrphy_dfi_p1_wrdata[36], v7ddrphy_dfi_p1_wrdata[4], v7ddrphy_dfi_p0_wrdata[36], v7ddrphy_dfi_p0_wrdata[4]}, v7ddrphy_bitslip4_r0[15:8]};
    if ((v7ddrphy_dly_sel_storage[0] & v7ddrphy_rdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip4_value1 <= (v7ddrphy_bitslip4_value1 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[0] & v7ddrphy_rdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip4_value1 <= 3'd7;
    end
    v7ddrphy_bitslip4_r1 <= {v7ddrphy_bitslip41, v7ddrphy_bitslip4_r1[15:8]};
    if ((v7ddrphy_dly_sel_storage[0] & v7ddrphy_wdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip5_value0 <= (v7ddrphy_bitslip5_value0 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[0] & v7ddrphy_wdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip5_value0 <= 3'd7;
    end
    v7ddrphy_bitslip5_r0 <= {{v7ddrphy_dfi_p3_wrdata[37], v7ddrphy_dfi_p3_wrdata[5], v7ddrphy_dfi_p2_wrdata[37], v7ddrphy_dfi_p2_wrdata[5], v7ddrphy_dfi_p1_wrdata[37], v7ddrphy_dfi_p1_wrdata[5], v7ddrphy_dfi_p0_wrdata[37], v7ddrphy_dfi_p0_wrdata[5]}, v7ddrphy_bitslip5_r0[15:8]};
    if ((v7ddrphy_dly_sel_storage[0] & v7ddrphy_rdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip5_value1 <= (v7ddrphy_bitslip5_value1 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[0] & v7ddrphy_rdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip5_value1 <= 3'd7;
    end
    v7ddrphy_bitslip5_r1 <= {v7ddrphy_bitslip51, v7ddrphy_bitslip5_r1[15:8]};
    if ((v7ddrphy_dly_sel_storage[0] & v7ddrphy_wdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip6_value0 <= (v7ddrphy_bitslip6_value0 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[0] & v7ddrphy_wdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip6_value0 <= 3'd7;
    end
    v7ddrphy_bitslip6_r0 <= {{v7ddrphy_dfi_p3_wrdata[38], v7ddrphy_dfi_p3_wrdata[6], v7ddrphy_dfi_p2_wrdata[38], v7ddrphy_dfi_p2_wrdata[6], v7ddrphy_dfi_p1_wrdata[38], v7ddrphy_dfi_p1_wrdata[6], v7ddrphy_dfi_p0_wrdata[38], v7ddrphy_dfi_p0_wrdata[6]}, v7ddrphy_bitslip6_r0[15:8]};
    if ((v7ddrphy_dly_sel_storage[0] & v7ddrphy_rdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip6_value1 <= (v7ddrphy_bitslip6_value1 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[0] & v7ddrphy_rdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip6_value1 <= 3'd7;
    end
    v7ddrphy_bitslip6_r1 <= {v7ddrphy_bitslip61, v7ddrphy_bitslip6_r1[15:8]};
    if ((v7ddrphy_dly_sel_storage[0] & v7ddrphy_wdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip7_value0 <= (v7ddrphy_bitslip7_value0 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[0] & v7ddrphy_wdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip7_value0 <= 3'd7;
    end
    v7ddrphy_bitslip7_r0 <= {{v7ddrphy_dfi_p3_wrdata[39], v7ddrphy_dfi_p3_wrdata[7], v7ddrphy_dfi_p2_wrdata[39], v7ddrphy_dfi_p2_wrdata[7], v7ddrphy_dfi_p1_wrdata[39], v7ddrphy_dfi_p1_wrdata[7], v7ddrphy_dfi_p0_wrdata[39], v7ddrphy_dfi_p0_wrdata[7]}, v7ddrphy_bitslip7_r0[15:8]};
    if ((v7ddrphy_dly_sel_storage[0] & v7ddrphy_rdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip7_value1 <= (v7ddrphy_bitslip7_value1 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[0] & v7ddrphy_rdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip7_value1 <= 3'd7;
    end
    v7ddrphy_bitslip7_r1 <= {v7ddrphy_bitslip71, v7ddrphy_bitslip7_r1[15:8]};
    if ((v7ddrphy_dly_sel_storage[1] & v7ddrphy_wdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip8_value0 <= (v7ddrphy_bitslip8_value0 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[1] & v7ddrphy_wdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip8_value0 <= 3'd7;
    end
    v7ddrphy_bitslip8_r0 <= {{v7ddrphy_dfi_p3_wrdata[40], v7ddrphy_dfi_p3_wrdata[8], v7ddrphy_dfi_p2_wrdata[40], v7ddrphy_dfi_p2_wrdata[8], v7ddrphy_dfi_p1_wrdata[40], v7ddrphy_dfi_p1_wrdata[8], v7ddrphy_dfi_p0_wrdata[40], v7ddrphy_dfi_p0_wrdata[8]}, v7ddrphy_bitslip8_r0[15:8]};
    if ((v7ddrphy_dly_sel_storage[1] & v7ddrphy_rdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip8_value1 <= (v7ddrphy_bitslip8_value1 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[1] & v7ddrphy_rdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip8_value1 <= 3'd7;
    end
    v7ddrphy_bitslip8_r1 <= {v7ddrphy_bitslip81, v7ddrphy_bitslip8_r1[15:8]};
    if ((v7ddrphy_dly_sel_storage[1] & v7ddrphy_wdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip9_value0 <= (v7ddrphy_bitslip9_value0 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[1] & v7ddrphy_wdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip9_value0 <= 3'd7;
    end
    v7ddrphy_bitslip9_r0 <= {{v7ddrphy_dfi_p3_wrdata[41], v7ddrphy_dfi_p3_wrdata[9], v7ddrphy_dfi_p2_wrdata[41], v7ddrphy_dfi_p2_wrdata[9], v7ddrphy_dfi_p1_wrdata[41], v7ddrphy_dfi_p1_wrdata[9], v7ddrphy_dfi_p0_wrdata[41], v7ddrphy_dfi_p0_wrdata[9]}, v7ddrphy_bitslip9_r0[15:8]};
    if ((v7ddrphy_dly_sel_storage[1] & v7ddrphy_rdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip9_value1 <= (v7ddrphy_bitslip9_value1 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[1] & v7ddrphy_rdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip9_value1 <= 3'd7;
    end
    v7ddrphy_bitslip9_r1 <= {v7ddrphy_bitslip91, v7ddrphy_bitslip9_r1[15:8]};
    if ((v7ddrphy_dly_sel_storage[1] & v7ddrphy_wdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip10_value0 <= (v7ddrphy_bitslip10_value0 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[1] & v7ddrphy_wdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip10_value0 <= 3'd7;
    end
    v7ddrphy_bitslip10_r0 <= {{v7ddrphy_dfi_p3_wrdata[42], v7ddrphy_dfi_p3_wrdata[10], v7ddrphy_dfi_p2_wrdata[42], v7ddrphy_dfi_p2_wrdata[10], v7ddrphy_dfi_p1_wrdata[42], v7ddrphy_dfi_p1_wrdata[10], v7ddrphy_dfi_p0_wrdata[42], v7ddrphy_dfi_p0_wrdata[10]}, v7ddrphy_bitslip10_r0[15:8]};
    if ((v7ddrphy_dly_sel_storage[1] & v7ddrphy_rdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip10_value1 <= (v7ddrphy_bitslip10_value1 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[1] & v7ddrphy_rdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip10_value1 <= 3'd7;
    end
    v7ddrphy_bitslip10_r1 <= {v7ddrphy_bitslip101, v7ddrphy_bitslip10_r1[15:8]};
    if ((v7ddrphy_dly_sel_storage[1] & v7ddrphy_wdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip11_value0 <= (v7ddrphy_bitslip11_value0 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[1] & v7ddrphy_wdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip11_value0 <= 3'd7;
    end
    v7ddrphy_bitslip11_r0 <= {{v7ddrphy_dfi_p3_wrdata[43], v7ddrphy_dfi_p3_wrdata[11], v7ddrphy_dfi_p2_wrdata[43], v7ddrphy_dfi_p2_wrdata[11], v7ddrphy_dfi_p1_wrdata[43], v7ddrphy_dfi_p1_wrdata[11], v7ddrphy_dfi_p0_wrdata[43], v7ddrphy_dfi_p0_wrdata[11]}, v7ddrphy_bitslip11_r0[15:8]};
    if ((v7ddrphy_dly_sel_storage[1] & v7ddrphy_rdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip11_value1 <= (v7ddrphy_bitslip11_value1 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[1] & v7ddrphy_rdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip11_value1 <= 3'd7;
    end
    v7ddrphy_bitslip11_r1 <= {v7ddrphy_bitslip111, v7ddrphy_bitslip11_r1[15:8]};
    if ((v7ddrphy_dly_sel_storage[1] & v7ddrphy_wdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip12_value0 <= (v7ddrphy_bitslip12_value0 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[1] & v7ddrphy_wdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip12_value0 <= 3'd7;
    end
    v7ddrphy_bitslip12_r0 <= {{v7ddrphy_dfi_p3_wrdata[44], v7ddrphy_dfi_p3_wrdata[12], v7ddrphy_dfi_p2_wrdata[44], v7ddrphy_dfi_p2_wrdata[12], v7ddrphy_dfi_p1_wrdata[44], v7ddrphy_dfi_p1_wrdata[12], v7ddrphy_dfi_p0_wrdata[44], v7ddrphy_dfi_p0_wrdata[12]}, v7ddrphy_bitslip12_r0[15:8]};
    if ((v7ddrphy_dly_sel_storage[1] & v7ddrphy_rdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip12_value1 <= (v7ddrphy_bitslip12_value1 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[1] & v7ddrphy_rdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip12_value1 <= 3'd7;
    end
    v7ddrphy_bitslip12_r1 <= {v7ddrphy_bitslip121, v7ddrphy_bitslip12_r1[15:8]};
    if ((v7ddrphy_dly_sel_storage[1] & v7ddrphy_wdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip13_value0 <= (v7ddrphy_bitslip13_value0 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[1] & v7ddrphy_wdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip13_value0 <= 3'd7;
    end
    v7ddrphy_bitslip13_r0 <= {{v7ddrphy_dfi_p3_wrdata[45], v7ddrphy_dfi_p3_wrdata[13], v7ddrphy_dfi_p2_wrdata[45], v7ddrphy_dfi_p2_wrdata[13], v7ddrphy_dfi_p1_wrdata[45], v7ddrphy_dfi_p1_wrdata[13], v7ddrphy_dfi_p0_wrdata[45], v7ddrphy_dfi_p0_wrdata[13]}, v7ddrphy_bitslip13_r0[15:8]};
    if ((v7ddrphy_dly_sel_storage[1] & v7ddrphy_rdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip13_value1 <= (v7ddrphy_bitslip13_value1 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[1] & v7ddrphy_rdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip13_value1 <= 3'd7;
    end
    v7ddrphy_bitslip13_r1 <= {v7ddrphy_bitslip131, v7ddrphy_bitslip13_r1[15:8]};
    if ((v7ddrphy_dly_sel_storage[1] & v7ddrphy_wdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip14_value0 <= (v7ddrphy_bitslip14_value0 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[1] & v7ddrphy_wdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip14_value0 <= 3'd7;
    end
    v7ddrphy_bitslip14_r0 <= {{v7ddrphy_dfi_p3_wrdata[46], v7ddrphy_dfi_p3_wrdata[14], v7ddrphy_dfi_p2_wrdata[46], v7ddrphy_dfi_p2_wrdata[14], v7ddrphy_dfi_p1_wrdata[46], v7ddrphy_dfi_p1_wrdata[14], v7ddrphy_dfi_p0_wrdata[46], v7ddrphy_dfi_p0_wrdata[14]}, v7ddrphy_bitslip14_r0[15:8]};
    if ((v7ddrphy_dly_sel_storage[1] & v7ddrphy_rdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip14_value1 <= (v7ddrphy_bitslip14_value1 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[1] & v7ddrphy_rdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip14_value1 <= 3'd7;
    end
    v7ddrphy_bitslip14_r1 <= {v7ddrphy_bitslip141, v7ddrphy_bitslip14_r1[15:8]};
    if ((v7ddrphy_dly_sel_storage[1] & v7ddrphy_wdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip15_value0 <= (v7ddrphy_bitslip15_value0 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[1] & v7ddrphy_wdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip15_value0 <= 3'd7;
    end
    v7ddrphy_bitslip15_r0 <= {{v7ddrphy_dfi_p3_wrdata[47], v7ddrphy_dfi_p3_wrdata[15], v7ddrphy_dfi_p2_wrdata[47], v7ddrphy_dfi_p2_wrdata[15], v7ddrphy_dfi_p1_wrdata[47], v7ddrphy_dfi_p1_wrdata[15], v7ddrphy_dfi_p0_wrdata[47], v7ddrphy_dfi_p0_wrdata[15]}, v7ddrphy_bitslip15_r0[15:8]};
    if ((v7ddrphy_dly_sel_storage[1] & v7ddrphy_rdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip15_value1 <= (v7ddrphy_bitslip15_value1 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[1] & v7ddrphy_rdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip15_value1 <= 3'd7;
    end
    v7ddrphy_bitslip15_r1 <= {v7ddrphy_bitslip151, v7ddrphy_bitslip15_r1[15:8]};
    if ((v7ddrphy_dly_sel_storage[2] & v7ddrphy_wdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip16_value0 <= (v7ddrphy_bitslip16_value0 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[2] & v7ddrphy_wdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip16_value0 <= 3'd7;
    end
    v7ddrphy_bitslip16_r0 <= {{v7ddrphy_dfi_p3_wrdata[48], v7ddrphy_dfi_p3_wrdata[16], v7ddrphy_dfi_p2_wrdata[48], v7ddrphy_dfi_p2_wrdata[16], v7ddrphy_dfi_p1_wrdata[48], v7ddrphy_dfi_p1_wrdata[16], v7ddrphy_dfi_p0_wrdata[48], v7ddrphy_dfi_p0_wrdata[16]}, v7ddrphy_bitslip16_r0[15:8]};
    if ((v7ddrphy_dly_sel_storage[2] & v7ddrphy_rdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip16_value1 <= (v7ddrphy_bitslip16_value1 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[2] & v7ddrphy_rdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip16_value1 <= 3'd7;
    end
    v7ddrphy_bitslip16_r1 <= {v7ddrphy_bitslip161, v7ddrphy_bitslip16_r1[15:8]};
    if ((v7ddrphy_dly_sel_storage[2] & v7ddrphy_wdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip17_value0 <= (v7ddrphy_bitslip17_value0 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[2] & v7ddrphy_wdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip17_value0 <= 3'd7;
    end
    v7ddrphy_bitslip17_r0 <= {{v7ddrphy_dfi_p3_wrdata[49], v7ddrphy_dfi_p3_wrdata[17], v7ddrphy_dfi_p2_wrdata[49], v7ddrphy_dfi_p2_wrdata[17], v7ddrphy_dfi_p1_wrdata[49], v7ddrphy_dfi_p1_wrdata[17], v7ddrphy_dfi_p0_wrdata[49], v7ddrphy_dfi_p0_wrdata[17]}, v7ddrphy_bitslip17_r0[15:8]};
    if ((v7ddrphy_dly_sel_storage[2] & v7ddrphy_rdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip17_value1 <= (v7ddrphy_bitslip17_value1 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[2] & v7ddrphy_rdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip17_value1 <= 3'd7;
    end
    v7ddrphy_bitslip17_r1 <= {v7ddrphy_bitslip171, v7ddrphy_bitslip17_r1[15:8]};
    if ((v7ddrphy_dly_sel_storage[2] & v7ddrphy_wdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip18_value0 <= (v7ddrphy_bitslip18_value0 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[2] & v7ddrphy_wdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip18_value0 <= 3'd7;
    end
    v7ddrphy_bitslip18_r0 <= {{v7ddrphy_dfi_p3_wrdata[50], v7ddrphy_dfi_p3_wrdata[18], v7ddrphy_dfi_p2_wrdata[50], v7ddrphy_dfi_p2_wrdata[18], v7ddrphy_dfi_p1_wrdata[50], v7ddrphy_dfi_p1_wrdata[18], v7ddrphy_dfi_p0_wrdata[50], v7ddrphy_dfi_p0_wrdata[18]}, v7ddrphy_bitslip18_r0[15:8]};
    if ((v7ddrphy_dly_sel_storage[2] & v7ddrphy_rdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip18_value1 <= (v7ddrphy_bitslip18_value1 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[2] & v7ddrphy_rdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip18_value1 <= 3'd7;
    end
    v7ddrphy_bitslip18_r1 <= {v7ddrphy_bitslip181, v7ddrphy_bitslip18_r1[15:8]};
    if ((v7ddrphy_dly_sel_storage[2] & v7ddrphy_wdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip19_value0 <= (v7ddrphy_bitslip19_value0 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[2] & v7ddrphy_wdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip19_value0 <= 3'd7;
    end
    v7ddrphy_bitslip19_r0 <= {{v7ddrphy_dfi_p3_wrdata[51], v7ddrphy_dfi_p3_wrdata[19], v7ddrphy_dfi_p2_wrdata[51], v7ddrphy_dfi_p2_wrdata[19], v7ddrphy_dfi_p1_wrdata[51], v7ddrphy_dfi_p1_wrdata[19], v7ddrphy_dfi_p0_wrdata[51], v7ddrphy_dfi_p0_wrdata[19]}, v7ddrphy_bitslip19_r0[15:8]};
    if ((v7ddrphy_dly_sel_storage[2] & v7ddrphy_rdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip19_value1 <= (v7ddrphy_bitslip19_value1 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[2] & v7ddrphy_rdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip19_value1 <= 3'd7;
    end
    v7ddrphy_bitslip19_r1 <= {v7ddrphy_bitslip191, v7ddrphy_bitslip19_r1[15:8]};
    if ((v7ddrphy_dly_sel_storage[2] & v7ddrphy_wdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip20_value0 <= (v7ddrphy_bitslip20_value0 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[2] & v7ddrphy_wdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip20_value0 <= 3'd7;
    end
    v7ddrphy_bitslip20_r0 <= {{v7ddrphy_dfi_p3_wrdata[52], v7ddrphy_dfi_p3_wrdata[20], v7ddrphy_dfi_p2_wrdata[52], v7ddrphy_dfi_p2_wrdata[20], v7ddrphy_dfi_p1_wrdata[52], v7ddrphy_dfi_p1_wrdata[20], v7ddrphy_dfi_p0_wrdata[52], v7ddrphy_dfi_p0_wrdata[20]}, v7ddrphy_bitslip20_r0[15:8]};
    if ((v7ddrphy_dly_sel_storage[2] & v7ddrphy_rdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip20_value1 <= (v7ddrphy_bitslip20_value1 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[2] & v7ddrphy_rdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip20_value1 <= 3'd7;
    end
    v7ddrphy_bitslip20_r1 <= {v7ddrphy_bitslip201, v7ddrphy_bitslip20_r1[15:8]};
    if ((v7ddrphy_dly_sel_storage[2] & v7ddrphy_wdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip21_value0 <= (v7ddrphy_bitslip21_value0 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[2] & v7ddrphy_wdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip21_value0 <= 3'd7;
    end
    v7ddrphy_bitslip21_r0 <= {{v7ddrphy_dfi_p3_wrdata[53], v7ddrphy_dfi_p3_wrdata[21], v7ddrphy_dfi_p2_wrdata[53], v7ddrphy_dfi_p2_wrdata[21], v7ddrphy_dfi_p1_wrdata[53], v7ddrphy_dfi_p1_wrdata[21], v7ddrphy_dfi_p0_wrdata[53], v7ddrphy_dfi_p0_wrdata[21]}, v7ddrphy_bitslip21_r0[15:8]};
    if ((v7ddrphy_dly_sel_storage[2] & v7ddrphy_rdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip21_value1 <= (v7ddrphy_bitslip21_value1 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[2] & v7ddrphy_rdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip21_value1 <= 3'd7;
    end
    v7ddrphy_bitslip21_r1 <= {v7ddrphy_bitslip211, v7ddrphy_bitslip21_r1[15:8]};
    if ((v7ddrphy_dly_sel_storage[2] & v7ddrphy_wdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip22_value0 <= (v7ddrphy_bitslip22_value0 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[2] & v7ddrphy_wdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip22_value0 <= 3'd7;
    end
    v7ddrphy_bitslip22_r0 <= {{v7ddrphy_dfi_p3_wrdata[54], v7ddrphy_dfi_p3_wrdata[22], v7ddrphy_dfi_p2_wrdata[54], v7ddrphy_dfi_p2_wrdata[22], v7ddrphy_dfi_p1_wrdata[54], v7ddrphy_dfi_p1_wrdata[22], v7ddrphy_dfi_p0_wrdata[54], v7ddrphy_dfi_p0_wrdata[22]}, v7ddrphy_bitslip22_r0[15:8]};
    if ((v7ddrphy_dly_sel_storage[2] & v7ddrphy_rdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip22_value1 <= (v7ddrphy_bitslip22_value1 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[2] & v7ddrphy_rdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip22_value1 <= 3'd7;
    end
    v7ddrphy_bitslip22_r1 <= {v7ddrphy_bitslip221, v7ddrphy_bitslip22_r1[15:8]};
    if ((v7ddrphy_dly_sel_storage[2] & v7ddrphy_wdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip23_value0 <= (v7ddrphy_bitslip23_value0 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[2] & v7ddrphy_wdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip23_value0 <= 3'd7;
    end
    v7ddrphy_bitslip23_r0 <= {{v7ddrphy_dfi_p3_wrdata[55], v7ddrphy_dfi_p3_wrdata[23], v7ddrphy_dfi_p2_wrdata[55], v7ddrphy_dfi_p2_wrdata[23], v7ddrphy_dfi_p1_wrdata[55], v7ddrphy_dfi_p1_wrdata[23], v7ddrphy_dfi_p0_wrdata[55], v7ddrphy_dfi_p0_wrdata[23]}, v7ddrphy_bitslip23_r0[15:8]};
    if ((v7ddrphy_dly_sel_storage[2] & v7ddrphy_rdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip23_value1 <= (v7ddrphy_bitslip23_value1 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[2] & v7ddrphy_rdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip23_value1 <= 3'd7;
    end
    v7ddrphy_bitslip23_r1 <= {v7ddrphy_bitslip231, v7ddrphy_bitslip23_r1[15:8]};
    if ((v7ddrphy_dly_sel_storage[3] & v7ddrphy_wdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip24_value0 <= (v7ddrphy_bitslip24_value0 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[3] & v7ddrphy_wdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip24_value0 <= 3'd7;
    end
    v7ddrphy_bitslip24_r0 <= {{v7ddrphy_dfi_p3_wrdata[56], v7ddrphy_dfi_p3_wrdata[24], v7ddrphy_dfi_p2_wrdata[56], v7ddrphy_dfi_p2_wrdata[24], v7ddrphy_dfi_p1_wrdata[56], v7ddrphy_dfi_p1_wrdata[24], v7ddrphy_dfi_p0_wrdata[56], v7ddrphy_dfi_p0_wrdata[24]}, v7ddrphy_bitslip24_r0[15:8]};
    if ((v7ddrphy_dly_sel_storage[3] & v7ddrphy_rdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip24_value1 <= (v7ddrphy_bitslip24_value1 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[3] & v7ddrphy_rdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip24_value1 <= 3'd7;
    end
    v7ddrphy_bitslip24_r1 <= {v7ddrphy_bitslip241, v7ddrphy_bitslip24_r1[15:8]};
    if ((v7ddrphy_dly_sel_storage[3] & v7ddrphy_wdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip25_value0 <= (v7ddrphy_bitslip25_value0 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[3] & v7ddrphy_wdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip25_value0 <= 3'd7;
    end
    v7ddrphy_bitslip25_r0 <= {{v7ddrphy_dfi_p3_wrdata[57], v7ddrphy_dfi_p3_wrdata[25], v7ddrphy_dfi_p2_wrdata[57], v7ddrphy_dfi_p2_wrdata[25], v7ddrphy_dfi_p1_wrdata[57], v7ddrphy_dfi_p1_wrdata[25], v7ddrphy_dfi_p0_wrdata[57], v7ddrphy_dfi_p0_wrdata[25]}, v7ddrphy_bitslip25_r0[15:8]};
    if ((v7ddrphy_dly_sel_storage[3] & v7ddrphy_rdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip25_value1 <= (v7ddrphy_bitslip25_value1 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[3] & v7ddrphy_rdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip25_value1 <= 3'd7;
    end
    v7ddrphy_bitslip25_r1 <= {v7ddrphy_bitslip251, v7ddrphy_bitslip25_r1[15:8]};
    if ((v7ddrphy_dly_sel_storage[3] & v7ddrphy_wdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip26_value0 <= (v7ddrphy_bitslip26_value0 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[3] & v7ddrphy_wdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip26_value0 <= 3'd7;
    end
    v7ddrphy_bitslip26_r0 <= {{v7ddrphy_dfi_p3_wrdata[58], v7ddrphy_dfi_p3_wrdata[26], v7ddrphy_dfi_p2_wrdata[58], v7ddrphy_dfi_p2_wrdata[26], v7ddrphy_dfi_p1_wrdata[58], v7ddrphy_dfi_p1_wrdata[26], v7ddrphy_dfi_p0_wrdata[58], v7ddrphy_dfi_p0_wrdata[26]}, v7ddrphy_bitslip26_r0[15:8]};
    if ((v7ddrphy_dly_sel_storage[3] & v7ddrphy_rdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip26_value1 <= (v7ddrphy_bitslip26_value1 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[3] & v7ddrphy_rdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip26_value1 <= 3'd7;
    end
    v7ddrphy_bitslip26_r1 <= {v7ddrphy_bitslip261, v7ddrphy_bitslip26_r1[15:8]};
    if ((v7ddrphy_dly_sel_storage[3] & v7ddrphy_wdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip27_value0 <= (v7ddrphy_bitslip27_value0 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[3] & v7ddrphy_wdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip27_value0 <= 3'd7;
    end
    v7ddrphy_bitslip27_r0 <= {{v7ddrphy_dfi_p3_wrdata[59], v7ddrphy_dfi_p3_wrdata[27], v7ddrphy_dfi_p2_wrdata[59], v7ddrphy_dfi_p2_wrdata[27], v7ddrphy_dfi_p1_wrdata[59], v7ddrphy_dfi_p1_wrdata[27], v7ddrphy_dfi_p0_wrdata[59], v7ddrphy_dfi_p0_wrdata[27]}, v7ddrphy_bitslip27_r0[15:8]};
    if ((v7ddrphy_dly_sel_storage[3] & v7ddrphy_rdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip27_value1 <= (v7ddrphy_bitslip27_value1 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[3] & v7ddrphy_rdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip27_value1 <= 3'd7;
    end
    v7ddrphy_bitslip27_r1 <= {v7ddrphy_bitslip271, v7ddrphy_bitslip27_r1[15:8]};
    if ((v7ddrphy_dly_sel_storage[3] & v7ddrphy_wdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip28_value0 <= (v7ddrphy_bitslip28_value0 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[3] & v7ddrphy_wdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip28_value0 <= 3'd7;
    end
    v7ddrphy_bitslip28_r0 <= {{v7ddrphy_dfi_p3_wrdata[60], v7ddrphy_dfi_p3_wrdata[28], v7ddrphy_dfi_p2_wrdata[60], v7ddrphy_dfi_p2_wrdata[28], v7ddrphy_dfi_p1_wrdata[60], v7ddrphy_dfi_p1_wrdata[28], v7ddrphy_dfi_p0_wrdata[60], v7ddrphy_dfi_p0_wrdata[28]}, v7ddrphy_bitslip28_r0[15:8]};
    if ((v7ddrphy_dly_sel_storage[3] & v7ddrphy_rdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip28_value1 <= (v7ddrphy_bitslip28_value1 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[3] & v7ddrphy_rdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip28_value1 <= 3'd7;
    end
    v7ddrphy_bitslip28_r1 <= {v7ddrphy_bitslip281, v7ddrphy_bitslip28_r1[15:8]};
    if ((v7ddrphy_dly_sel_storage[3] & v7ddrphy_wdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip29_value0 <= (v7ddrphy_bitslip29_value0 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[3] & v7ddrphy_wdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip29_value0 <= 3'd7;
    end
    v7ddrphy_bitslip29_r0 <= {{v7ddrphy_dfi_p3_wrdata[61], v7ddrphy_dfi_p3_wrdata[29], v7ddrphy_dfi_p2_wrdata[61], v7ddrphy_dfi_p2_wrdata[29], v7ddrphy_dfi_p1_wrdata[61], v7ddrphy_dfi_p1_wrdata[29], v7ddrphy_dfi_p0_wrdata[61], v7ddrphy_dfi_p0_wrdata[29]}, v7ddrphy_bitslip29_r0[15:8]};
    if ((v7ddrphy_dly_sel_storage[3] & v7ddrphy_rdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip29_value1 <= (v7ddrphy_bitslip29_value1 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[3] & v7ddrphy_rdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip29_value1 <= 3'd7;
    end
    v7ddrphy_bitslip29_r1 <= {v7ddrphy_bitslip291, v7ddrphy_bitslip29_r1[15:8]};
    if ((v7ddrphy_dly_sel_storage[3] & v7ddrphy_wdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip30_value0 <= (v7ddrphy_bitslip30_value0 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[3] & v7ddrphy_wdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip30_value0 <= 3'd7;
    end
    v7ddrphy_bitslip30_r0 <= {{v7ddrphy_dfi_p3_wrdata[62], v7ddrphy_dfi_p3_wrdata[30], v7ddrphy_dfi_p2_wrdata[62], v7ddrphy_dfi_p2_wrdata[30], v7ddrphy_dfi_p1_wrdata[62], v7ddrphy_dfi_p1_wrdata[30], v7ddrphy_dfi_p0_wrdata[62], v7ddrphy_dfi_p0_wrdata[30]}, v7ddrphy_bitslip30_r0[15:8]};
    if ((v7ddrphy_dly_sel_storage[3] & v7ddrphy_rdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip30_value1 <= (v7ddrphy_bitslip30_value1 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[3] & v7ddrphy_rdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip30_value1 <= 3'd7;
    end
    v7ddrphy_bitslip30_r1 <= {v7ddrphy_bitslip301, v7ddrphy_bitslip30_r1[15:8]};
    if ((v7ddrphy_dly_sel_storage[3] & v7ddrphy_wdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip31_value0 <= (v7ddrphy_bitslip31_value0 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[3] & v7ddrphy_wdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip31_value0 <= 3'd7;
    end
    v7ddrphy_bitslip31_r0 <= {{v7ddrphy_dfi_p3_wrdata[63], v7ddrphy_dfi_p3_wrdata[31], v7ddrphy_dfi_p2_wrdata[63], v7ddrphy_dfi_p2_wrdata[31], v7ddrphy_dfi_p1_wrdata[63], v7ddrphy_dfi_p1_wrdata[31], v7ddrphy_dfi_p0_wrdata[63], v7ddrphy_dfi_p0_wrdata[31]}, v7ddrphy_bitslip31_r0[15:8]};
    if ((v7ddrphy_dly_sel_storage[3] & v7ddrphy_rdly_dq_bitslip_re)) begin
        v7ddrphy_bitslip31_value1 <= (v7ddrphy_bitslip31_value1 + 1'd1);
    end
    if (((v7ddrphy_dly_sel_storage[3] & v7ddrphy_rdly_dq_bitslip_rst_re) | v7ddrphy_rst_storage)) begin
        v7ddrphy_bitslip31_value1 <= 3'd7;
    end
    v7ddrphy_bitslip31_r1 <= {v7ddrphy_bitslip311, v7ddrphy_bitslip31_r1[15:8]};
    v7ddrphy_rddata_en_tappeddelayline0 <= (((v7ddrphy_dfi_p0_rddata_en | v7ddrphy_dfi_p1_rddata_en) | v7ddrphy_dfi_p2_rddata_en) | v7ddrphy_dfi_p3_rddata_en);
    v7ddrphy_rddata_en_tappeddelayline1 <= v7ddrphy_rddata_en_tappeddelayline0;
    v7ddrphy_rddata_en_tappeddelayline2 <= v7ddrphy_rddata_en_tappeddelayline1;
    v7ddrphy_rddata_en_tappeddelayline3 <= v7ddrphy_rddata_en_tappeddelayline2;
    v7ddrphy_rddata_en_tappeddelayline4 <= v7ddrphy_rddata_en_tappeddelayline3;
    v7ddrphy_rddata_en_tappeddelayline5 <= v7ddrphy_rddata_en_tappeddelayline4;
    v7ddrphy_rddata_en_tappeddelayline6 <= v7ddrphy_rddata_en_tappeddelayline5;
    v7ddrphy_rddata_en_tappeddelayline7 <= v7ddrphy_rddata_en_tappeddelayline6;
    v7ddrphy_wrdata_en_tappeddelayline0 <= (((v7ddrphy_dfi_p0_wrdata_en | v7ddrphy_dfi_p1_wrdata_en) | v7ddrphy_dfi_p2_wrdata_en) | v7ddrphy_dfi_p3_wrdata_en);
    v7ddrphy_wrdata_en_tappeddelayline1 <= v7ddrphy_wrdata_en_tappeddelayline0;
    v7ddrphy_wrdata_en_tappeddelayline2 <= v7ddrphy_wrdata_en_tappeddelayline1;
    if (soclinux_csr_dfi_p0_rddata_valid) begin
        soclinux_phaseinjector0_rddata_status <= soclinux_csr_dfi_p0_rddata;
    end
    if (soclinux_csr_dfi_p1_rddata_valid) begin
        soclinux_phaseinjector1_rddata_status <= soclinux_csr_dfi_p1_rddata;
    end
    if (soclinux_csr_dfi_p2_rddata_valid) begin
        soclinux_phaseinjector2_rddata_status <= soclinux_csr_dfi_p2_rddata;
    end
    if (soclinux_csr_dfi_p3_rddata_valid) begin
        soclinux_phaseinjector3_rddata_status <= soclinux_csr_dfi_p3_rddata;
    end
    if ((soclinux_timer_wait & (~soclinux_timer_done0))) begin
        soclinux_timer_count1 <= (soclinux_timer_count1 - 1'd1);
    end else begin
        soclinux_timer_count1 <= 10'd976;
    end
    soclinux_postponer_req_o <= 1'd0;
    if (soclinux_postponer_req_i) begin
        soclinux_postponer_count <= (soclinux_postponer_count - 1'd1);
        if ((soclinux_postponer_count == 1'd0)) begin
            soclinux_postponer_count <= 1'd0;
            soclinux_postponer_req_o <= 1'd1;
        end
    end
    if (soclinux_sequencer_start0) begin
        soclinux_sequencer_count <= 1'd0;
    end else begin
        if (soclinux_sequencer_done1) begin
            if ((soclinux_sequencer_count != 1'd0)) begin
                soclinux_sequencer_count <= (soclinux_sequencer_count - 1'd1);
            end
        end
    end
    soclinux_cmd_payload_a <= 1'd0;
    soclinux_cmd_payload_ba <= 1'd0;
    soclinux_cmd_payload_cas <= 1'd0;
    soclinux_cmd_payload_ras <= 1'd0;
    soclinux_cmd_payload_we <= 1'd0;
    soclinux_sequencer_done1 <= 1'd0;
    if ((soclinux_sequencer_start1 & (soclinux_sequencer_counter == 1'd0))) begin
        soclinux_cmd_payload_a <= 11'd1024;
        soclinux_cmd_payload_ba <= 1'd0;
        soclinux_cmd_payload_cas <= 1'd0;
        soclinux_cmd_payload_ras <= 1'd1;
        soclinux_cmd_payload_we <= 1'd1;
    end
    if ((soclinux_sequencer_counter == 2'd3)) begin
        soclinux_cmd_payload_a <= 11'd1024;
        soclinux_cmd_payload_ba <= 1'd0;
        soclinux_cmd_payload_cas <= 1'd1;
        soclinux_cmd_payload_ras <= 1'd1;
        soclinux_cmd_payload_we <= 1'd0;
    end
    if ((soclinux_sequencer_counter == 5'd18)) begin
        soclinux_cmd_payload_a <= 1'd0;
        soclinux_cmd_payload_ba <= 1'd0;
        soclinux_cmd_payload_cas <= 1'd0;
        soclinux_cmd_payload_ras <= 1'd0;
        soclinux_cmd_payload_we <= 1'd0;
        soclinux_sequencer_done1 <= 1'd1;
    end
    if ((soclinux_sequencer_counter == 5'd18)) begin
        soclinux_sequencer_counter <= 1'd0;
    end else begin
        if ((soclinux_sequencer_counter != 1'd0)) begin
            soclinux_sequencer_counter <= (soclinux_sequencer_counter + 1'd1);
        end else begin
            if (soclinux_sequencer_start1) begin
                soclinux_sequencer_counter <= 1'd1;
            end
        end
    end
    if ((soclinux_zqcs_timer_wait & (~soclinux_zqcs_timer_done0))) begin
        soclinux_zqcs_timer_count1 <= (soclinux_zqcs_timer_count1 - 1'd1);
    end else begin
        soclinux_zqcs_timer_count1 <= 27'd124999999;
    end
    soclinux_zqcs_executer_done <= 1'd0;
    if ((soclinux_zqcs_executer_start & (soclinux_zqcs_executer_counter == 1'd0))) begin
        soclinux_cmd_payload_a <= 11'd1024;
        soclinux_cmd_payload_ba <= 1'd0;
        soclinux_cmd_payload_cas <= 1'd0;
        soclinux_cmd_payload_ras <= 1'd1;
        soclinux_cmd_payload_we <= 1'd1;
    end
    if ((soclinux_zqcs_executer_counter == 2'd3)) begin
        soclinux_cmd_payload_a <= 1'd0;
        soclinux_cmd_payload_ba <= 1'd0;
        soclinux_cmd_payload_cas <= 1'd0;
        soclinux_cmd_payload_ras <= 1'd0;
        soclinux_cmd_payload_we <= 1'd1;
    end
    if ((soclinux_zqcs_executer_counter == 5'd19)) begin
        soclinux_cmd_payload_a <= 1'd0;
        soclinux_cmd_payload_ba <= 1'd0;
        soclinux_cmd_payload_cas <= 1'd0;
        soclinux_cmd_payload_ras <= 1'd0;
        soclinux_cmd_payload_we <= 1'd0;
        soclinux_zqcs_executer_done <= 1'd1;
    end
    if ((soclinux_zqcs_executer_counter == 5'd19)) begin
        soclinux_zqcs_executer_counter <= 1'd0;
    end else begin
        if ((soclinux_zqcs_executer_counter != 1'd0)) begin
            soclinux_zqcs_executer_counter <= (soclinux_zqcs_executer_counter + 1'd1);
        end else begin
            if (soclinux_zqcs_executer_start) begin
                soclinux_zqcs_executer_counter <= 1'd1;
            end
        end
    end
    refresher_state <= refresher_next_state;
    if (soclinux_bankmachine0_row_close) begin
        soclinux_bankmachine0_row_opened <= 1'd0;
    end else begin
        if (soclinux_bankmachine0_row_open) begin
            soclinux_bankmachine0_row_opened <= 1'd1;
            soclinux_bankmachine0_row <= soclinux_bankmachine0_source_source_payload_addr[20:7];
        end
    end
    if (((soclinux_bankmachine0_syncfifo0_we & soclinux_bankmachine0_syncfifo0_writable) & (~soclinux_bankmachine0_replace))) begin
        soclinux_bankmachine0_produce <= (soclinux_bankmachine0_produce + 1'd1);
    end
    if (soclinux_bankmachine0_do_read) begin
        soclinux_bankmachine0_consume <= (soclinux_bankmachine0_consume + 1'd1);
    end
    if (((soclinux_bankmachine0_syncfifo0_we & soclinux_bankmachine0_syncfifo0_writable) & (~soclinux_bankmachine0_replace))) begin
        if ((~soclinux_bankmachine0_do_read)) begin
            soclinux_bankmachine0_level <= (soclinux_bankmachine0_level + 1'd1);
        end
    end else begin
        if (soclinux_bankmachine0_do_read) begin
            soclinux_bankmachine0_level <= (soclinux_bankmachine0_level - 1'd1);
        end
    end
    if (((~soclinux_bankmachine0_pipe_valid_source_valid) | soclinux_bankmachine0_pipe_valid_source_ready)) begin
        soclinux_bankmachine0_pipe_valid_source_valid <= soclinux_bankmachine0_pipe_valid_sink_valid;
        soclinux_bankmachine0_pipe_valid_source_first <= soclinux_bankmachine0_pipe_valid_sink_first;
        soclinux_bankmachine0_pipe_valid_source_last <= soclinux_bankmachine0_pipe_valid_sink_last;
        soclinux_bankmachine0_pipe_valid_source_payload_we <= soclinux_bankmachine0_pipe_valid_sink_payload_we;
        soclinux_bankmachine0_pipe_valid_source_payload_addr <= soclinux_bankmachine0_pipe_valid_sink_payload_addr;
    end
    if (soclinux_bankmachine0_twtpcon_valid) begin
        soclinux_bankmachine0_twtpcon_count <= 3'd5;
        if (1'd0) begin
            soclinux_bankmachine0_twtpcon_ready <= 1'd1;
        end else begin
            soclinux_bankmachine0_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_bankmachine0_twtpcon_ready)) begin
            soclinux_bankmachine0_twtpcon_count <= (soclinux_bankmachine0_twtpcon_count - 1'd1);
            if ((soclinux_bankmachine0_twtpcon_count == 1'd1)) begin
                soclinux_bankmachine0_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (soclinux_bankmachine0_trccon_valid) begin
        soclinux_bankmachine0_trccon_count <= 3'd6;
        if (1'd0) begin
            soclinux_bankmachine0_trccon_ready <= 1'd1;
        end else begin
            soclinux_bankmachine0_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_bankmachine0_trccon_ready)) begin
            soclinux_bankmachine0_trccon_count <= (soclinux_bankmachine0_trccon_count - 1'd1);
            if ((soclinux_bankmachine0_trccon_count == 1'd1)) begin
                soclinux_bankmachine0_trccon_ready <= 1'd1;
            end
        end
    end
    if (soclinux_bankmachine0_trascon_valid) begin
        soclinux_bankmachine0_trascon_count <= 3'd5;
        if (1'd0) begin
            soclinux_bankmachine0_trascon_ready <= 1'd1;
        end else begin
            soclinux_bankmachine0_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_bankmachine0_trascon_ready)) begin
            soclinux_bankmachine0_trascon_count <= (soclinux_bankmachine0_trascon_count - 1'd1);
            if ((soclinux_bankmachine0_trascon_count == 1'd1)) begin
                soclinux_bankmachine0_trascon_ready <= 1'd1;
            end
        end
    end
    bankmachine0_state <= bankmachine0_next_state;
    if (soclinux_bankmachine1_row_close) begin
        soclinux_bankmachine1_row_opened <= 1'd0;
    end else begin
        if (soclinux_bankmachine1_row_open) begin
            soclinux_bankmachine1_row_opened <= 1'd1;
            soclinux_bankmachine1_row <= soclinux_bankmachine1_source_source_payload_addr[20:7];
        end
    end
    if (((soclinux_bankmachine1_syncfifo1_we & soclinux_bankmachine1_syncfifo1_writable) & (~soclinux_bankmachine1_replace))) begin
        soclinux_bankmachine1_produce <= (soclinux_bankmachine1_produce + 1'd1);
    end
    if (soclinux_bankmachine1_do_read) begin
        soclinux_bankmachine1_consume <= (soclinux_bankmachine1_consume + 1'd1);
    end
    if (((soclinux_bankmachine1_syncfifo1_we & soclinux_bankmachine1_syncfifo1_writable) & (~soclinux_bankmachine1_replace))) begin
        if ((~soclinux_bankmachine1_do_read)) begin
            soclinux_bankmachine1_level <= (soclinux_bankmachine1_level + 1'd1);
        end
    end else begin
        if (soclinux_bankmachine1_do_read) begin
            soclinux_bankmachine1_level <= (soclinux_bankmachine1_level - 1'd1);
        end
    end
    if (((~soclinux_bankmachine1_pipe_valid_source_valid) | soclinux_bankmachine1_pipe_valid_source_ready)) begin
        soclinux_bankmachine1_pipe_valid_source_valid <= soclinux_bankmachine1_pipe_valid_sink_valid;
        soclinux_bankmachine1_pipe_valid_source_first <= soclinux_bankmachine1_pipe_valid_sink_first;
        soclinux_bankmachine1_pipe_valid_source_last <= soclinux_bankmachine1_pipe_valid_sink_last;
        soclinux_bankmachine1_pipe_valid_source_payload_we <= soclinux_bankmachine1_pipe_valid_sink_payload_we;
        soclinux_bankmachine1_pipe_valid_source_payload_addr <= soclinux_bankmachine1_pipe_valid_sink_payload_addr;
    end
    if (soclinux_bankmachine1_twtpcon_valid) begin
        soclinux_bankmachine1_twtpcon_count <= 3'd5;
        if (1'd0) begin
            soclinux_bankmachine1_twtpcon_ready <= 1'd1;
        end else begin
            soclinux_bankmachine1_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_bankmachine1_twtpcon_ready)) begin
            soclinux_bankmachine1_twtpcon_count <= (soclinux_bankmachine1_twtpcon_count - 1'd1);
            if ((soclinux_bankmachine1_twtpcon_count == 1'd1)) begin
                soclinux_bankmachine1_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (soclinux_bankmachine1_trccon_valid) begin
        soclinux_bankmachine1_trccon_count <= 3'd6;
        if (1'd0) begin
            soclinux_bankmachine1_trccon_ready <= 1'd1;
        end else begin
            soclinux_bankmachine1_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_bankmachine1_trccon_ready)) begin
            soclinux_bankmachine1_trccon_count <= (soclinux_bankmachine1_trccon_count - 1'd1);
            if ((soclinux_bankmachine1_trccon_count == 1'd1)) begin
                soclinux_bankmachine1_trccon_ready <= 1'd1;
            end
        end
    end
    if (soclinux_bankmachine1_trascon_valid) begin
        soclinux_bankmachine1_trascon_count <= 3'd5;
        if (1'd0) begin
            soclinux_bankmachine1_trascon_ready <= 1'd1;
        end else begin
            soclinux_bankmachine1_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_bankmachine1_trascon_ready)) begin
            soclinux_bankmachine1_trascon_count <= (soclinux_bankmachine1_trascon_count - 1'd1);
            if ((soclinux_bankmachine1_trascon_count == 1'd1)) begin
                soclinux_bankmachine1_trascon_ready <= 1'd1;
            end
        end
    end
    bankmachine1_state <= bankmachine1_next_state;
    if (soclinux_bankmachine2_row_close) begin
        soclinux_bankmachine2_row_opened <= 1'd0;
    end else begin
        if (soclinux_bankmachine2_row_open) begin
            soclinux_bankmachine2_row_opened <= 1'd1;
            soclinux_bankmachine2_row <= soclinux_bankmachine2_source_source_payload_addr[20:7];
        end
    end
    if (((soclinux_bankmachine2_syncfifo2_we & soclinux_bankmachine2_syncfifo2_writable) & (~soclinux_bankmachine2_replace))) begin
        soclinux_bankmachine2_produce <= (soclinux_bankmachine2_produce + 1'd1);
    end
    if (soclinux_bankmachine2_do_read) begin
        soclinux_bankmachine2_consume <= (soclinux_bankmachine2_consume + 1'd1);
    end
    if (((soclinux_bankmachine2_syncfifo2_we & soclinux_bankmachine2_syncfifo2_writable) & (~soclinux_bankmachine2_replace))) begin
        if ((~soclinux_bankmachine2_do_read)) begin
            soclinux_bankmachine2_level <= (soclinux_bankmachine2_level + 1'd1);
        end
    end else begin
        if (soclinux_bankmachine2_do_read) begin
            soclinux_bankmachine2_level <= (soclinux_bankmachine2_level - 1'd1);
        end
    end
    if (((~soclinux_bankmachine2_pipe_valid_source_valid) | soclinux_bankmachine2_pipe_valid_source_ready)) begin
        soclinux_bankmachine2_pipe_valid_source_valid <= soclinux_bankmachine2_pipe_valid_sink_valid;
        soclinux_bankmachine2_pipe_valid_source_first <= soclinux_bankmachine2_pipe_valid_sink_first;
        soclinux_bankmachine2_pipe_valid_source_last <= soclinux_bankmachine2_pipe_valid_sink_last;
        soclinux_bankmachine2_pipe_valid_source_payload_we <= soclinux_bankmachine2_pipe_valid_sink_payload_we;
        soclinux_bankmachine2_pipe_valid_source_payload_addr <= soclinux_bankmachine2_pipe_valid_sink_payload_addr;
    end
    if (soclinux_bankmachine2_twtpcon_valid) begin
        soclinux_bankmachine2_twtpcon_count <= 3'd5;
        if (1'd0) begin
            soclinux_bankmachine2_twtpcon_ready <= 1'd1;
        end else begin
            soclinux_bankmachine2_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_bankmachine2_twtpcon_ready)) begin
            soclinux_bankmachine2_twtpcon_count <= (soclinux_bankmachine2_twtpcon_count - 1'd1);
            if ((soclinux_bankmachine2_twtpcon_count == 1'd1)) begin
                soclinux_bankmachine2_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (soclinux_bankmachine2_trccon_valid) begin
        soclinux_bankmachine2_trccon_count <= 3'd6;
        if (1'd0) begin
            soclinux_bankmachine2_trccon_ready <= 1'd1;
        end else begin
            soclinux_bankmachine2_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_bankmachine2_trccon_ready)) begin
            soclinux_bankmachine2_trccon_count <= (soclinux_bankmachine2_trccon_count - 1'd1);
            if ((soclinux_bankmachine2_trccon_count == 1'd1)) begin
                soclinux_bankmachine2_trccon_ready <= 1'd1;
            end
        end
    end
    if (soclinux_bankmachine2_trascon_valid) begin
        soclinux_bankmachine2_trascon_count <= 3'd5;
        if (1'd0) begin
            soclinux_bankmachine2_trascon_ready <= 1'd1;
        end else begin
            soclinux_bankmachine2_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_bankmachine2_trascon_ready)) begin
            soclinux_bankmachine2_trascon_count <= (soclinux_bankmachine2_trascon_count - 1'd1);
            if ((soclinux_bankmachine2_trascon_count == 1'd1)) begin
                soclinux_bankmachine2_trascon_ready <= 1'd1;
            end
        end
    end
    bankmachine2_state <= bankmachine2_next_state;
    if (soclinux_bankmachine3_row_close) begin
        soclinux_bankmachine3_row_opened <= 1'd0;
    end else begin
        if (soclinux_bankmachine3_row_open) begin
            soclinux_bankmachine3_row_opened <= 1'd1;
            soclinux_bankmachine3_row <= soclinux_bankmachine3_source_source_payload_addr[20:7];
        end
    end
    if (((soclinux_bankmachine3_syncfifo3_we & soclinux_bankmachine3_syncfifo3_writable) & (~soclinux_bankmachine3_replace))) begin
        soclinux_bankmachine3_produce <= (soclinux_bankmachine3_produce + 1'd1);
    end
    if (soclinux_bankmachine3_do_read) begin
        soclinux_bankmachine3_consume <= (soclinux_bankmachine3_consume + 1'd1);
    end
    if (((soclinux_bankmachine3_syncfifo3_we & soclinux_bankmachine3_syncfifo3_writable) & (~soclinux_bankmachine3_replace))) begin
        if ((~soclinux_bankmachine3_do_read)) begin
            soclinux_bankmachine3_level <= (soclinux_bankmachine3_level + 1'd1);
        end
    end else begin
        if (soclinux_bankmachine3_do_read) begin
            soclinux_bankmachine3_level <= (soclinux_bankmachine3_level - 1'd1);
        end
    end
    if (((~soclinux_bankmachine3_pipe_valid_source_valid) | soclinux_bankmachine3_pipe_valid_source_ready)) begin
        soclinux_bankmachine3_pipe_valid_source_valid <= soclinux_bankmachine3_pipe_valid_sink_valid;
        soclinux_bankmachine3_pipe_valid_source_first <= soclinux_bankmachine3_pipe_valid_sink_first;
        soclinux_bankmachine3_pipe_valid_source_last <= soclinux_bankmachine3_pipe_valid_sink_last;
        soclinux_bankmachine3_pipe_valid_source_payload_we <= soclinux_bankmachine3_pipe_valid_sink_payload_we;
        soclinux_bankmachine3_pipe_valid_source_payload_addr <= soclinux_bankmachine3_pipe_valid_sink_payload_addr;
    end
    if (soclinux_bankmachine3_twtpcon_valid) begin
        soclinux_bankmachine3_twtpcon_count <= 3'd5;
        if (1'd0) begin
            soclinux_bankmachine3_twtpcon_ready <= 1'd1;
        end else begin
            soclinux_bankmachine3_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_bankmachine3_twtpcon_ready)) begin
            soclinux_bankmachine3_twtpcon_count <= (soclinux_bankmachine3_twtpcon_count - 1'd1);
            if ((soclinux_bankmachine3_twtpcon_count == 1'd1)) begin
                soclinux_bankmachine3_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (soclinux_bankmachine3_trccon_valid) begin
        soclinux_bankmachine3_trccon_count <= 3'd6;
        if (1'd0) begin
            soclinux_bankmachine3_trccon_ready <= 1'd1;
        end else begin
            soclinux_bankmachine3_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_bankmachine3_trccon_ready)) begin
            soclinux_bankmachine3_trccon_count <= (soclinux_bankmachine3_trccon_count - 1'd1);
            if ((soclinux_bankmachine3_trccon_count == 1'd1)) begin
                soclinux_bankmachine3_trccon_ready <= 1'd1;
            end
        end
    end
    if (soclinux_bankmachine3_trascon_valid) begin
        soclinux_bankmachine3_trascon_count <= 3'd5;
        if (1'd0) begin
            soclinux_bankmachine3_trascon_ready <= 1'd1;
        end else begin
            soclinux_bankmachine3_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_bankmachine3_trascon_ready)) begin
            soclinux_bankmachine3_trascon_count <= (soclinux_bankmachine3_trascon_count - 1'd1);
            if ((soclinux_bankmachine3_trascon_count == 1'd1)) begin
                soclinux_bankmachine3_trascon_ready <= 1'd1;
            end
        end
    end
    bankmachine3_state <= bankmachine3_next_state;
    if (soclinux_bankmachine4_row_close) begin
        soclinux_bankmachine4_row_opened <= 1'd0;
    end else begin
        if (soclinux_bankmachine4_row_open) begin
            soclinux_bankmachine4_row_opened <= 1'd1;
            soclinux_bankmachine4_row <= soclinux_bankmachine4_source_source_payload_addr[20:7];
        end
    end
    if (((soclinux_bankmachine4_syncfifo4_we & soclinux_bankmachine4_syncfifo4_writable) & (~soclinux_bankmachine4_replace))) begin
        soclinux_bankmachine4_produce <= (soclinux_bankmachine4_produce + 1'd1);
    end
    if (soclinux_bankmachine4_do_read) begin
        soclinux_bankmachine4_consume <= (soclinux_bankmachine4_consume + 1'd1);
    end
    if (((soclinux_bankmachine4_syncfifo4_we & soclinux_bankmachine4_syncfifo4_writable) & (~soclinux_bankmachine4_replace))) begin
        if ((~soclinux_bankmachine4_do_read)) begin
            soclinux_bankmachine4_level <= (soclinux_bankmachine4_level + 1'd1);
        end
    end else begin
        if (soclinux_bankmachine4_do_read) begin
            soclinux_bankmachine4_level <= (soclinux_bankmachine4_level - 1'd1);
        end
    end
    if (((~soclinux_bankmachine4_pipe_valid_source_valid) | soclinux_bankmachine4_pipe_valid_source_ready)) begin
        soclinux_bankmachine4_pipe_valid_source_valid <= soclinux_bankmachine4_pipe_valid_sink_valid;
        soclinux_bankmachine4_pipe_valid_source_first <= soclinux_bankmachine4_pipe_valid_sink_first;
        soclinux_bankmachine4_pipe_valid_source_last <= soclinux_bankmachine4_pipe_valid_sink_last;
        soclinux_bankmachine4_pipe_valid_source_payload_we <= soclinux_bankmachine4_pipe_valid_sink_payload_we;
        soclinux_bankmachine4_pipe_valid_source_payload_addr <= soclinux_bankmachine4_pipe_valid_sink_payload_addr;
    end
    if (soclinux_bankmachine4_twtpcon_valid) begin
        soclinux_bankmachine4_twtpcon_count <= 3'd5;
        if (1'd0) begin
            soclinux_bankmachine4_twtpcon_ready <= 1'd1;
        end else begin
            soclinux_bankmachine4_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_bankmachine4_twtpcon_ready)) begin
            soclinux_bankmachine4_twtpcon_count <= (soclinux_bankmachine4_twtpcon_count - 1'd1);
            if ((soclinux_bankmachine4_twtpcon_count == 1'd1)) begin
                soclinux_bankmachine4_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (soclinux_bankmachine4_trccon_valid) begin
        soclinux_bankmachine4_trccon_count <= 3'd6;
        if (1'd0) begin
            soclinux_bankmachine4_trccon_ready <= 1'd1;
        end else begin
            soclinux_bankmachine4_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_bankmachine4_trccon_ready)) begin
            soclinux_bankmachine4_trccon_count <= (soclinux_bankmachine4_trccon_count - 1'd1);
            if ((soclinux_bankmachine4_trccon_count == 1'd1)) begin
                soclinux_bankmachine4_trccon_ready <= 1'd1;
            end
        end
    end
    if (soclinux_bankmachine4_trascon_valid) begin
        soclinux_bankmachine4_trascon_count <= 3'd5;
        if (1'd0) begin
            soclinux_bankmachine4_trascon_ready <= 1'd1;
        end else begin
            soclinux_bankmachine4_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_bankmachine4_trascon_ready)) begin
            soclinux_bankmachine4_trascon_count <= (soclinux_bankmachine4_trascon_count - 1'd1);
            if ((soclinux_bankmachine4_trascon_count == 1'd1)) begin
                soclinux_bankmachine4_trascon_ready <= 1'd1;
            end
        end
    end
    bankmachine4_state <= bankmachine4_next_state;
    if (soclinux_bankmachine5_row_close) begin
        soclinux_bankmachine5_row_opened <= 1'd0;
    end else begin
        if (soclinux_bankmachine5_row_open) begin
            soclinux_bankmachine5_row_opened <= 1'd1;
            soclinux_bankmachine5_row <= soclinux_bankmachine5_source_source_payload_addr[20:7];
        end
    end
    if (((soclinux_bankmachine5_syncfifo5_we & soclinux_bankmachine5_syncfifo5_writable) & (~soclinux_bankmachine5_replace))) begin
        soclinux_bankmachine5_produce <= (soclinux_bankmachine5_produce + 1'd1);
    end
    if (soclinux_bankmachine5_do_read) begin
        soclinux_bankmachine5_consume <= (soclinux_bankmachine5_consume + 1'd1);
    end
    if (((soclinux_bankmachine5_syncfifo5_we & soclinux_bankmachine5_syncfifo5_writable) & (~soclinux_bankmachine5_replace))) begin
        if ((~soclinux_bankmachine5_do_read)) begin
            soclinux_bankmachine5_level <= (soclinux_bankmachine5_level + 1'd1);
        end
    end else begin
        if (soclinux_bankmachine5_do_read) begin
            soclinux_bankmachine5_level <= (soclinux_bankmachine5_level - 1'd1);
        end
    end
    if (((~soclinux_bankmachine5_pipe_valid_source_valid) | soclinux_bankmachine5_pipe_valid_source_ready)) begin
        soclinux_bankmachine5_pipe_valid_source_valid <= soclinux_bankmachine5_pipe_valid_sink_valid;
        soclinux_bankmachine5_pipe_valid_source_first <= soclinux_bankmachine5_pipe_valid_sink_first;
        soclinux_bankmachine5_pipe_valid_source_last <= soclinux_bankmachine5_pipe_valid_sink_last;
        soclinux_bankmachine5_pipe_valid_source_payload_we <= soclinux_bankmachine5_pipe_valid_sink_payload_we;
        soclinux_bankmachine5_pipe_valid_source_payload_addr <= soclinux_bankmachine5_pipe_valid_sink_payload_addr;
    end
    if (soclinux_bankmachine5_twtpcon_valid) begin
        soclinux_bankmachine5_twtpcon_count <= 3'd5;
        if (1'd0) begin
            soclinux_bankmachine5_twtpcon_ready <= 1'd1;
        end else begin
            soclinux_bankmachine5_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_bankmachine5_twtpcon_ready)) begin
            soclinux_bankmachine5_twtpcon_count <= (soclinux_bankmachine5_twtpcon_count - 1'd1);
            if ((soclinux_bankmachine5_twtpcon_count == 1'd1)) begin
                soclinux_bankmachine5_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (soclinux_bankmachine5_trccon_valid) begin
        soclinux_bankmachine5_trccon_count <= 3'd6;
        if (1'd0) begin
            soclinux_bankmachine5_trccon_ready <= 1'd1;
        end else begin
            soclinux_bankmachine5_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_bankmachine5_trccon_ready)) begin
            soclinux_bankmachine5_trccon_count <= (soclinux_bankmachine5_trccon_count - 1'd1);
            if ((soclinux_bankmachine5_trccon_count == 1'd1)) begin
                soclinux_bankmachine5_trccon_ready <= 1'd1;
            end
        end
    end
    if (soclinux_bankmachine5_trascon_valid) begin
        soclinux_bankmachine5_trascon_count <= 3'd5;
        if (1'd0) begin
            soclinux_bankmachine5_trascon_ready <= 1'd1;
        end else begin
            soclinux_bankmachine5_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_bankmachine5_trascon_ready)) begin
            soclinux_bankmachine5_trascon_count <= (soclinux_bankmachine5_trascon_count - 1'd1);
            if ((soclinux_bankmachine5_trascon_count == 1'd1)) begin
                soclinux_bankmachine5_trascon_ready <= 1'd1;
            end
        end
    end
    bankmachine5_state <= bankmachine5_next_state;
    if (soclinux_bankmachine6_row_close) begin
        soclinux_bankmachine6_row_opened <= 1'd0;
    end else begin
        if (soclinux_bankmachine6_row_open) begin
            soclinux_bankmachine6_row_opened <= 1'd1;
            soclinux_bankmachine6_row <= soclinux_bankmachine6_source_source_payload_addr[20:7];
        end
    end
    if (((soclinux_bankmachine6_syncfifo6_we & soclinux_bankmachine6_syncfifo6_writable) & (~soclinux_bankmachine6_replace))) begin
        soclinux_bankmachine6_produce <= (soclinux_bankmachine6_produce + 1'd1);
    end
    if (soclinux_bankmachine6_do_read) begin
        soclinux_bankmachine6_consume <= (soclinux_bankmachine6_consume + 1'd1);
    end
    if (((soclinux_bankmachine6_syncfifo6_we & soclinux_bankmachine6_syncfifo6_writable) & (~soclinux_bankmachine6_replace))) begin
        if ((~soclinux_bankmachine6_do_read)) begin
            soclinux_bankmachine6_level <= (soclinux_bankmachine6_level + 1'd1);
        end
    end else begin
        if (soclinux_bankmachine6_do_read) begin
            soclinux_bankmachine6_level <= (soclinux_bankmachine6_level - 1'd1);
        end
    end
    if (((~soclinux_bankmachine6_pipe_valid_source_valid) | soclinux_bankmachine6_pipe_valid_source_ready)) begin
        soclinux_bankmachine6_pipe_valid_source_valid <= soclinux_bankmachine6_pipe_valid_sink_valid;
        soclinux_bankmachine6_pipe_valid_source_first <= soclinux_bankmachine6_pipe_valid_sink_first;
        soclinux_bankmachine6_pipe_valid_source_last <= soclinux_bankmachine6_pipe_valid_sink_last;
        soclinux_bankmachine6_pipe_valid_source_payload_we <= soclinux_bankmachine6_pipe_valid_sink_payload_we;
        soclinux_bankmachine6_pipe_valid_source_payload_addr <= soclinux_bankmachine6_pipe_valid_sink_payload_addr;
    end
    if (soclinux_bankmachine6_twtpcon_valid) begin
        soclinux_bankmachine6_twtpcon_count <= 3'd5;
        if (1'd0) begin
            soclinux_bankmachine6_twtpcon_ready <= 1'd1;
        end else begin
            soclinux_bankmachine6_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_bankmachine6_twtpcon_ready)) begin
            soclinux_bankmachine6_twtpcon_count <= (soclinux_bankmachine6_twtpcon_count - 1'd1);
            if ((soclinux_bankmachine6_twtpcon_count == 1'd1)) begin
                soclinux_bankmachine6_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (soclinux_bankmachine6_trccon_valid) begin
        soclinux_bankmachine6_trccon_count <= 3'd6;
        if (1'd0) begin
            soclinux_bankmachine6_trccon_ready <= 1'd1;
        end else begin
            soclinux_bankmachine6_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_bankmachine6_trccon_ready)) begin
            soclinux_bankmachine6_trccon_count <= (soclinux_bankmachine6_trccon_count - 1'd1);
            if ((soclinux_bankmachine6_trccon_count == 1'd1)) begin
                soclinux_bankmachine6_trccon_ready <= 1'd1;
            end
        end
    end
    if (soclinux_bankmachine6_trascon_valid) begin
        soclinux_bankmachine6_trascon_count <= 3'd5;
        if (1'd0) begin
            soclinux_bankmachine6_trascon_ready <= 1'd1;
        end else begin
            soclinux_bankmachine6_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_bankmachine6_trascon_ready)) begin
            soclinux_bankmachine6_trascon_count <= (soclinux_bankmachine6_trascon_count - 1'd1);
            if ((soclinux_bankmachine6_trascon_count == 1'd1)) begin
                soclinux_bankmachine6_trascon_ready <= 1'd1;
            end
        end
    end
    bankmachine6_state <= bankmachine6_next_state;
    if (soclinux_bankmachine7_row_close) begin
        soclinux_bankmachine7_row_opened <= 1'd0;
    end else begin
        if (soclinux_bankmachine7_row_open) begin
            soclinux_bankmachine7_row_opened <= 1'd1;
            soclinux_bankmachine7_row <= soclinux_bankmachine7_source_source_payload_addr[20:7];
        end
    end
    if (((soclinux_bankmachine7_syncfifo7_we & soclinux_bankmachine7_syncfifo7_writable) & (~soclinux_bankmachine7_replace))) begin
        soclinux_bankmachine7_produce <= (soclinux_bankmachine7_produce + 1'd1);
    end
    if (soclinux_bankmachine7_do_read) begin
        soclinux_bankmachine7_consume <= (soclinux_bankmachine7_consume + 1'd1);
    end
    if (((soclinux_bankmachine7_syncfifo7_we & soclinux_bankmachine7_syncfifo7_writable) & (~soclinux_bankmachine7_replace))) begin
        if ((~soclinux_bankmachine7_do_read)) begin
            soclinux_bankmachine7_level <= (soclinux_bankmachine7_level + 1'd1);
        end
    end else begin
        if (soclinux_bankmachine7_do_read) begin
            soclinux_bankmachine7_level <= (soclinux_bankmachine7_level - 1'd1);
        end
    end
    if (((~soclinux_bankmachine7_pipe_valid_source_valid) | soclinux_bankmachine7_pipe_valid_source_ready)) begin
        soclinux_bankmachine7_pipe_valid_source_valid <= soclinux_bankmachine7_pipe_valid_sink_valid;
        soclinux_bankmachine7_pipe_valid_source_first <= soclinux_bankmachine7_pipe_valid_sink_first;
        soclinux_bankmachine7_pipe_valid_source_last <= soclinux_bankmachine7_pipe_valid_sink_last;
        soclinux_bankmachine7_pipe_valid_source_payload_we <= soclinux_bankmachine7_pipe_valid_sink_payload_we;
        soclinux_bankmachine7_pipe_valid_source_payload_addr <= soclinux_bankmachine7_pipe_valid_sink_payload_addr;
    end
    if (soclinux_bankmachine7_twtpcon_valid) begin
        soclinux_bankmachine7_twtpcon_count <= 3'd5;
        if (1'd0) begin
            soclinux_bankmachine7_twtpcon_ready <= 1'd1;
        end else begin
            soclinux_bankmachine7_twtpcon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_bankmachine7_twtpcon_ready)) begin
            soclinux_bankmachine7_twtpcon_count <= (soclinux_bankmachine7_twtpcon_count - 1'd1);
            if ((soclinux_bankmachine7_twtpcon_count == 1'd1)) begin
                soclinux_bankmachine7_twtpcon_ready <= 1'd1;
            end
        end
    end
    if (soclinux_bankmachine7_trccon_valid) begin
        soclinux_bankmachine7_trccon_count <= 3'd6;
        if (1'd0) begin
            soclinux_bankmachine7_trccon_ready <= 1'd1;
        end else begin
            soclinux_bankmachine7_trccon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_bankmachine7_trccon_ready)) begin
            soclinux_bankmachine7_trccon_count <= (soclinux_bankmachine7_trccon_count - 1'd1);
            if ((soclinux_bankmachine7_trccon_count == 1'd1)) begin
                soclinux_bankmachine7_trccon_ready <= 1'd1;
            end
        end
    end
    if (soclinux_bankmachine7_trascon_valid) begin
        soclinux_bankmachine7_trascon_count <= 3'd5;
        if (1'd0) begin
            soclinux_bankmachine7_trascon_ready <= 1'd1;
        end else begin
            soclinux_bankmachine7_trascon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_bankmachine7_trascon_ready)) begin
            soclinux_bankmachine7_trascon_count <= (soclinux_bankmachine7_trascon_count - 1'd1);
            if ((soclinux_bankmachine7_trascon_count == 1'd1)) begin
                soclinux_bankmachine7_trascon_ready <= 1'd1;
            end
        end
    end
    bankmachine7_state <= bankmachine7_next_state;
    if ((~soclinux_en0)) begin
        soclinux_time0 <= 5'd31;
    end else begin
        if ((~soclinux_max_time0)) begin
            soclinux_time0 <= (soclinux_time0 - 1'd1);
        end
    end
    if ((~soclinux_en1)) begin
        soclinux_time1 <= 4'd15;
    end else begin
        if ((~soclinux_max_time1)) begin
            soclinux_time1 <= (soclinux_time1 - 1'd1);
        end
    end
    if (soclinux_choose_cmd_ce) begin
        case (soclinux_choose_cmd_grant)
            1'd0: begin
                if (soclinux_choose_cmd_request[1]) begin
                    soclinux_choose_cmd_grant <= 1'd1;
                end else begin
                    if (soclinux_choose_cmd_request[2]) begin
                        soclinux_choose_cmd_grant <= 2'd2;
                    end else begin
                        if (soclinux_choose_cmd_request[3]) begin
                            soclinux_choose_cmd_grant <= 2'd3;
                        end else begin
                            if (soclinux_choose_cmd_request[4]) begin
                                soclinux_choose_cmd_grant <= 3'd4;
                            end else begin
                                if (soclinux_choose_cmd_request[5]) begin
                                    soclinux_choose_cmd_grant <= 3'd5;
                                end else begin
                                    if (soclinux_choose_cmd_request[6]) begin
                                        soclinux_choose_cmd_grant <= 3'd6;
                                    end else begin
                                        if (soclinux_choose_cmd_request[7]) begin
                                            soclinux_choose_cmd_grant <= 3'd7;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            1'd1: begin
                if (soclinux_choose_cmd_request[2]) begin
                    soclinux_choose_cmd_grant <= 2'd2;
                end else begin
                    if (soclinux_choose_cmd_request[3]) begin
                        soclinux_choose_cmd_grant <= 2'd3;
                    end else begin
                        if (soclinux_choose_cmd_request[4]) begin
                            soclinux_choose_cmd_grant <= 3'd4;
                        end else begin
                            if (soclinux_choose_cmd_request[5]) begin
                                soclinux_choose_cmd_grant <= 3'd5;
                            end else begin
                                if (soclinux_choose_cmd_request[6]) begin
                                    soclinux_choose_cmd_grant <= 3'd6;
                                end else begin
                                    if (soclinux_choose_cmd_request[7]) begin
                                        soclinux_choose_cmd_grant <= 3'd7;
                                    end else begin
                                        if (soclinux_choose_cmd_request[0]) begin
                                            soclinux_choose_cmd_grant <= 1'd0;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            2'd2: begin
                if (soclinux_choose_cmd_request[3]) begin
                    soclinux_choose_cmd_grant <= 2'd3;
                end else begin
                    if (soclinux_choose_cmd_request[4]) begin
                        soclinux_choose_cmd_grant <= 3'd4;
                    end else begin
                        if (soclinux_choose_cmd_request[5]) begin
                            soclinux_choose_cmd_grant <= 3'd5;
                        end else begin
                            if (soclinux_choose_cmd_request[6]) begin
                                soclinux_choose_cmd_grant <= 3'd6;
                            end else begin
                                if (soclinux_choose_cmd_request[7]) begin
                                    soclinux_choose_cmd_grant <= 3'd7;
                                end else begin
                                    if (soclinux_choose_cmd_request[0]) begin
                                        soclinux_choose_cmd_grant <= 1'd0;
                                    end else begin
                                        if (soclinux_choose_cmd_request[1]) begin
                                            soclinux_choose_cmd_grant <= 1'd1;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            2'd3: begin
                if (soclinux_choose_cmd_request[4]) begin
                    soclinux_choose_cmd_grant <= 3'd4;
                end else begin
                    if (soclinux_choose_cmd_request[5]) begin
                        soclinux_choose_cmd_grant <= 3'd5;
                    end else begin
                        if (soclinux_choose_cmd_request[6]) begin
                            soclinux_choose_cmd_grant <= 3'd6;
                        end else begin
                            if (soclinux_choose_cmd_request[7]) begin
                                soclinux_choose_cmd_grant <= 3'd7;
                            end else begin
                                if (soclinux_choose_cmd_request[0]) begin
                                    soclinux_choose_cmd_grant <= 1'd0;
                                end else begin
                                    if (soclinux_choose_cmd_request[1]) begin
                                        soclinux_choose_cmd_grant <= 1'd1;
                                    end else begin
                                        if (soclinux_choose_cmd_request[2]) begin
                                            soclinux_choose_cmd_grant <= 2'd2;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd4: begin
                if (soclinux_choose_cmd_request[5]) begin
                    soclinux_choose_cmd_grant <= 3'd5;
                end else begin
                    if (soclinux_choose_cmd_request[6]) begin
                        soclinux_choose_cmd_grant <= 3'd6;
                    end else begin
                        if (soclinux_choose_cmd_request[7]) begin
                            soclinux_choose_cmd_grant <= 3'd7;
                        end else begin
                            if (soclinux_choose_cmd_request[0]) begin
                                soclinux_choose_cmd_grant <= 1'd0;
                            end else begin
                                if (soclinux_choose_cmd_request[1]) begin
                                    soclinux_choose_cmd_grant <= 1'd1;
                                end else begin
                                    if (soclinux_choose_cmd_request[2]) begin
                                        soclinux_choose_cmd_grant <= 2'd2;
                                    end else begin
                                        if (soclinux_choose_cmd_request[3]) begin
                                            soclinux_choose_cmd_grant <= 2'd3;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd5: begin
                if (soclinux_choose_cmd_request[6]) begin
                    soclinux_choose_cmd_grant <= 3'd6;
                end else begin
                    if (soclinux_choose_cmd_request[7]) begin
                        soclinux_choose_cmd_grant <= 3'd7;
                    end else begin
                        if (soclinux_choose_cmd_request[0]) begin
                            soclinux_choose_cmd_grant <= 1'd0;
                        end else begin
                            if (soclinux_choose_cmd_request[1]) begin
                                soclinux_choose_cmd_grant <= 1'd1;
                            end else begin
                                if (soclinux_choose_cmd_request[2]) begin
                                    soclinux_choose_cmd_grant <= 2'd2;
                                end else begin
                                    if (soclinux_choose_cmd_request[3]) begin
                                        soclinux_choose_cmd_grant <= 2'd3;
                                    end else begin
                                        if (soclinux_choose_cmd_request[4]) begin
                                            soclinux_choose_cmd_grant <= 3'd4;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd6: begin
                if (soclinux_choose_cmd_request[7]) begin
                    soclinux_choose_cmd_grant <= 3'd7;
                end else begin
                    if (soclinux_choose_cmd_request[0]) begin
                        soclinux_choose_cmd_grant <= 1'd0;
                    end else begin
                        if (soclinux_choose_cmd_request[1]) begin
                            soclinux_choose_cmd_grant <= 1'd1;
                        end else begin
                            if (soclinux_choose_cmd_request[2]) begin
                                soclinux_choose_cmd_grant <= 2'd2;
                            end else begin
                                if (soclinux_choose_cmd_request[3]) begin
                                    soclinux_choose_cmd_grant <= 2'd3;
                                end else begin
                                    if (soclinux_choose_cmd_request[4]) begin
                                        soclinux_choose_cmd_grant <= 3'd4;
                                    end else begin
                                        if (soclinux_choose_cmd_request[5]) begin
                                            soclinux_choose_cmd_grant <= 3'd5;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd7: begin
                if (soclinux_choose_cmd_request[0]) begin
                    soclinux_choose_cmd_grant <= 1'd0;
                end else begin
                    if (soclinux_choose_cmd_request[1]) begin
                        soclinux_choose_cmd_grant <= 1'd1;
                    end else begin
                        if (soclinux_choose_cmd_request[2]) begin
                            soclinux_choose_cmd_grant <= 2'd2;
                        end else begin
                            if (soclinux_choose_cmd_request[3]) begin
                                soclinux_choose_cmd_grant <= 2'd3;
                            end else begin
                                if (soclinux_choose_cmd_request[4]) begin
                                    soclinux_choose_cmd_grant <= 3'd4;
                                end else begin
                                    if (soclinux_choose_cmd_request[5]) begin
                                        soclinux_choose_cmd_grant <= 3'd5;
                                    end else begin
                                        if (soclinux_choose_cmd_request[6]) begin
                                            soclinux_choose_cmd_grant <= 3'd6;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        endcase
    end
    if (soclinux_choose_req_ce) begin
        case (soclinux_choose_req_grant)
            1'd0: begin
                if (soclinux_choose_req_request[1]) begin
                    soclinux_choose_req_grant <= 1'd1;
                end else begin
                    if (soclinux_choose_req_request[2]) begin
                        soclinux_choose_req_grant <= 2'd2;
                    end else begin
                        if (soclinux_choose_req_request[3]) begin
                            soclinux_choose_req_grant <= 2'd3;
                        end else begin
                            if (soclinux_choose_req_request[4]) begin
                                soclinux_choose_req_grant <= 3'd4;
                            end else begin
                                if (soclinux_choose_req_request[5]) begin
                                    soclinux_choose_req_grant <= 3'd5;
                                end else begin
                                    if (soclinux_choose_req_request[6]) begin
                                        soclinux_choose_req_grant <= 3'd6;
                                    end else begin
                                        if (soclinux_choose_req_request[7]) begin
                                            soclinux_choose_req_grant <= 3'd7;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            1'd1: begin
                if (soclinux_choose_req_request[2]) begin
                    soclinux_choose_req_grant <= 2'd2;
                end else begin
                    if (soclinux_choose_req_request[3]) begin
                        soclinux_choose_req_grant <= 2'd3;
                    end else begin
                        if (soclinux_choose_req_request[4]) begin
                            soclinux_choose_req_grant <= 3'd4;
                        end else begin
                            if (soclinux_choose_req_request[5]) begin
                                soclinux_choose_req_grant <= 3'd5;
                            end else begin
                                if (soclinux_choose_req_request[6]) begin
                                    soclinux_choose_req_grant <= 3'd6;
                                end else begin
                                    if (soclinux_choose_req_request[7]) begin
                                        soclinux_choose_req_grant <= 3'd7;
                                    end else begin
                                        if (soclinux_choose_req_request[0]) begin
                                            soclinux_choose_req_grant <= 1'd0;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            2'd2: begin
                if (soclinux_choose_req_request[3]) begin
                    soclinux_choose_req_grant <= 2'd3;
                end else begin
                    if (soclinux_choose_req_request[4]) begin
                        soclinux_choose_req_grant <= 3'd4;
                    end else begin
                        if (soclinux_choose_req_request[5]) begin
                            soclinux_choose_req_grant <= 3'd5;
                        end else begin
                            if (soclinux_choose_req_request[6]) begin
                                soclinux_choose_req_grant <= 3'd6;
                            end else begin
                                if (soclinux_choose_req_request[7]) begin
                                    soclinux_choose_req_grant <= 3'd7;
                                end else begin
                                    if (soclinux_choose_req_request[0]) begin
                                        soclinux_choose_req_grant <= 1'd0;
                                    end else begin
                                        if (soclinux_choose_req_request[1]) begin
                                            soclinux_choose_req_grant <= 1'd1;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            2'd3: begin
                if (soclinux_choose_req_request[4]) begin
                    soclinux_choose_req_grant <= 3'd4;
                end else begin
                    if (soclinux_choose_req_request[5]) begin
                        soclinux_choose_req_grant <= 3'd5;
                    end else begin
                        if (soclinux_choose_req_request[6]) begin
                            soclinux_choose_req_grant <= 3'd6;
                        end else begin
                            if (soclinux_choose_req_request[7]) begin
                                soclinux_choose_req_grant <= 3'd7;
                            end else begin
                                if (soclinux_choose_req_request[0]) begin
                                    soclinux_choose_req_grant <= 1'd0;
                                end else begin
                                    if (soclinux_choose_req_request[1]) begin
                                        soclinux_choose_req_grant <= 1'd1;
                                    end else begin
                                        if (soclinux_choose_req_request[2]) begin
                                            soclinux_choose_req_grant <= 2'd2;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd4: begin
                if (soclinux_choose_req_request[5]) begin
                    soclinux_choose_req_grant <= 3'd5;
                end else begin
                    if (soclinux_choose_req_request[6]) begin
                        soclinux_choose_req_grant <= 3'd6;
                    end else begin
                        if (soclinux_choose_req_request[7]) begin
                            soclinux_choose_req_grant <= 3'd7;
                        end else begin
                            if (soclinux_choose_req_request[0]) begin
                                soclinux_choose_req_grant <= 1'd0;
                            end else begin
                                if (soclinux_choose_req_request[1]) begin
                                    soclinux_choose_req_grant <= 1'd1;
                                end else begin
                                    if (soclinux_choose_req_request[2]) begin
                                        soclinux_choose_req_grant <= 2'd2;
                                    end else begin
                                        if (soclinux_choose_req_request[3]) begin
                                            soclinux_choose_req_grant <= 2'd3;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd5: begin
                if (soclinux_choose_req_request[6]) begin
                    soclinux_choose_req_grant <= 3'd6;
                end else begin
                    if (soclinux_choose_req_request[7]) begin
                        soclinux_choose_req_grant <= 3'd7;
                    end else begin
                        if (soclinux_choose_req_request[0]) begin
                            soclinux_choose_req_grant <= 1'd0;
                        end else begin
                            if (soclinux_choose_req_request[1]) begin
                                soclinux_choose_req_grant <= 1'd1;
                            end else begin
                                if (soclinux_choose_req_request[2]) begin
                                    soclinux_choose_req_grant <= 2'd2;
                                end else begin
                                    if (soclinux_choose_req_request[3]) begin
                                        soclinux_choose_req_grant <= 2'd3;
                                    end else begin
                                        if (soclinux_choose_req_request[4]) begin
                                            soclinux_choose_req_grant <= 3'd4;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd6: begin
                if (soclinux_choose_req_request[7]) begin
                    soclinux_choose_req_grant <= 3'd7;
                end else begin
                    if (soclinux_choose_req_request[0]) begin
                        soclinux_choose_req_grant <= 1'd0;
                    end else begin
                        if (soclinux_choose_req_request[1]) begin
                            soclinux_choose_req_grant <= 1'd1;
                        end else begin
                            if (soclinux_choose_req_request[2]) begin
                                soclinux_choose_req_grant <= 2'd2;
                            end else begin
                                if (soclinux_choose_req_request[3]) begin
                                    soclinux_choose_req_grant <= 2'd3;
                                end else begin
                                    if (soclinux_choose_req_request[4]) begin
                                        soclinux_choose_req_grant <= 3'd4;
                                    end else begin
                                        if (soclinux_choose_req_request[5]) begin
                                            soclinux_choose_req_grant <= 3'd5;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            3'd7: begin
                if (soclinux_choose_req_request[0]) begin
                    soclinux_choose_req_grant <= 1'd0;
                end else begin
                    if (soclinux_choose_req_request[1]) begin
                        soclinux_choose_req_grant <= 1'd1;
                    end else begin
                        if (soclinux_choose_req_request[2]) begin
                            soclinux_choose_req_grant <= 2'd2;
                        end else begin
                            if (soclinux_choose_req_request[3]) begin
                                soclinux_choose_req_grant <= 2'd3;
                            end else begin
                                if (soclinux_choose_req_request[4]) begin
                                    soclinux_choose_req_grant <= 3'd4;
                                end else begin
                                    if (soclinux_choose_req_request[5]) begin
                                        soclinux_choose_req_grant <= 3'd5;
                                    end else begin
                                        if (soclinux_choose_req_request[6]) begin
                                            soclinux_choose_req_grant <= 3'd6;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        endcase
    end
    soclinux_dfi_p0_cs_n <= 1'd0;
    soclinux_dfi_p0_bank <= array_muxed0;
    soclinux_dfi_p0_address <= array_muxed1;
    soclinux_dfi_p0_cas_n <= (~array_muxed2);
    soclinux_dfi_p0_ras_n <= (~array_muxed3);
    soclinux_dfi_p0_we_n <= (~array_muxed4);
    soclinux_dfi_p0_rddata_en <= array_muxed5;
    soclinux_dfi_p0_wrdata_en <= array_muxed6;
    soclinux_dfi_p1_cs_n <= 1'd0;
    soclinux_dfi_p1_bank <= array_muxed7;
    soclinux_dfi_p1_address <= array_muxed8;
    soclinux_dfi_p1_cas_n <= (~array_muxed9);
    soclinux_dfi_p1_ras_n <= (~array_muxed10);
    soclinux_dfi_p1_we_n <= (~array_muxed11);
    soclinux_dfi_p1_rddata_en <= array_muxed12;
    soclinux_dfi_p1_wrdata_en <= array_muxed13;
    soclinux_dfi_p2_cs_n <= 1'd0;
    soclinux_dfi_p2_bank <= array_muxed14;
    soclinux_dfi_p2_address <= array_muxed15;
    soclinux_dfi_p2_cas_n <= (~array_muxed16);
    soclinux_dfi_p2_ras_n <= (~array_muxed17);
    soclinux_dfi_p2_we_n <= (~array_muxed18);
    soclinux_dfi_p2_rddata_en <= array_muxed19;
    soclinux_dfi_p2_wrdata_en <= array_muxed20;
    soclinux_dfi_p3_cs_n <= 1'd0;
    soclinux_dfi_p3_bank <= array_muxed21;
    soclinux_dfi_p3_address <= array_muxed22;
    soclinux_dfi_p3_cas_n <= (~array_muxed23);
    soclinux_dfi_p3_ras_n <= (~array_muxed24);
    soclinux_dfi_p3_we_n <= (~array_muxed25);
    soclinux_dfi_p3_rddata_en <= array_muxed26;
    soclinux_dfi_p3_wrdata_en <= array_muxed27;
    if (soclinux_trrdcon_valid) begin
        soclinux_trrdcon_count <= 1'd1;
        if (1'd0) begin
            soclinux_trrdcon_ready <= 1'd1;
        end else begin
            soclinux_trrdcon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_trrdcon_ready)) begin
            soclinux_trrdcon_count <= (soclinux_trrdcon_count - 1'd1);
            if ((soclinux_trrdcon_count == 1'd1)) begin
                soclinux_trrdcon_ready <= 1'd1;
            end
        end
    end
    soclinux_tfawcon_window <= {soclinux_tfawcon_window, soclinux_tfawcon_valid};
    if ((soclinux_tfawcon_count < 3'd4)) begin
        if ((soclinux_tfawcon_count == 2'd3)) begin
            soclinux_tfawcon_ready <= (~soclinux_tfawcon_valid);
        end else begin
            soclinux_tfawcon_ready <= 1'd1;
        end
    end
    if (soclinux_tccdcon_valid) begin
        soclinux_tccdcon_count <= 1'd0;
        if (1'd1) begin
            soclinux_tccdcon_ready <= 1'd1;
        end else begin
            soclinux_tccdcon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_tccdcon_ready)) begin
            soclinux_tccdcon_count <= (soclinux_tccdcon_count - 1'd1);
            if ((soclinux_tccdcon_count == 1'd1)) begin
                soclinux_tccdcon_ready <= 1'd1;
            end
        end
    end
    if (soclinux_twtrcon_valid) begin
        soclinux_twtrcon_count <= 3'd4;
        if (1'd0) begin
            soclinux_twtrcon_ready <= 1'd1;
        end else begin
            soclinux_twtrcon_ready <= 1'd0;
        end
    end else begin
        if ((~soclinux_twtrcon_ready)) begin
            soclinux_twtrcon_count <= (soclinux_twtrcon_count - 1'd1);
            if ((soclinux_twtrcon_count == 1'd1)) begin
                soclinux_twtrcon_ready <= 1'd1;
            end
        end
    end
    multiplexer_state <= multiplexer_next_state;
    new_master_wdata_ready0 <= ((((((((1'd0 | ((roundrobin0_grant == 1'd0) & soclinux_interface_bank0_wdata_ready)) | ((roundrobin1_grant == 1'd0) & soclinux_interface_bank1_wdata_ready)) | ((roundrobin2_grant == 1'd0) & soclinux_interface_bank2_wdata_ready)) | ((roundrobin3_grant == 1'd0) & soclinux_interface_bank3_wdata_ready)) | ((roundrobin4_grant == 1'd0) & soclinux_interface_bank4_wdata_ready)) | ((roundrobin5_grant == 1'd0) & soclinux_interface_bank5_wdata_ready)) | ((roundrobin6_grant == 1'd0) & soclinux_interface_bank6_wdata_ready)) | ((roundrobin7_grant == 1'd0) & soclinux_interface_bank7_wdata_ready));
    new_master_wdata_ready1 <= new_master_wdata_ready0;
    new_master_wdata_ready2 <= ((((((((1'd0 | ((roundrobin0_grant == 1'd1) & soclinux_interface_bank0_wdata_ready)) | ((roundrobin1_grant == 1'd1) & soclinux_interface_bank1_wdata_ready)) | ((roundrobin2_grant == 1'd1) & soclinux_interface_bank2_wdata_ready)) | ((roundrobin3_grant == 1'd1) & soclinux_interface_bank3_wdata_ready)) | ((roundrobin4_grant == 1'd1) & soclinux_interface_bank4_wdata_ready)) | ((roundrobin5_grant == 1'd1) & soclinux_interface_bank5_wdata_ready)) | ((roundrobin6_grant == 1'd1) & soclinux_interface_bank6_wdata_ready)) | ((roundrobin7_grant == 1'd1) & soclinux_interface_bank7_wdata_ready));
    new_master_wdata_ready3 <= new_master_wdata_ready2;
    new_master_wdata_ready4 <= ((((((((1'd0 | ((roundrobin0_grant == 2'd2) & soclinux_interface_bank0_wdata_ready)) | ((roundrobin1_grant == 2'd2) & soclinux_interface_bank1_wdata_ready)) | ((roundrobin2_grant == 2'd2) & soclinux_interface_bank2_wdata_ready)) | ((roundrobin3_grant == 2'd2) & soclinux_interface_bank3_wdata_ready)) | ((roundrobin4_grant == 2'd2) & soclinux_interface_bank4_wdata_ready)) | ((roundrobin5_grant == 2'd2) & soclinux_interface_bank5_wdata_ready)) | ((roundrobin6_grant == 2'd2) & soclinux_interface_bank6_wdata_ready)) | ((roundrobin7_grant == 2'd2) & soclinux_interface_bank7_wdata_ready));
    new_master_wdata_ready5 <= new_master_wdata_ready4;
    new_master_rdata_valid0 <= ((((((((1'd0 | ((roundrobin0_grant == 1'd0) & soclinux_interface_bank0_rdata_valid)) | ((roundrobin1_grant == 1'd0) & soclinux_interface_bank1_rdata_valid)) | ((roundrobin2_grant == 1'd0) & soclinux_interface_bank2_rdata_valid)) | ((roundrobin3_grant == 1'd0) & soclinux_interface_bank3_rdata_valid)) | ((roundrobin4_grant == 1'd0) & soclinux_interface_bank4_rdata_valid)) | ((roundrobin5_grant == 1'd0) & soclinux_interface_bank5_rdata_valid)) | ((roundrobin6_grant == 1'd0) & soclinux_interface_bank6_rdata_valid)) | ((roundrobin7_grant == 1'd0) & soclinux_interface_bank7_rdata_valid));
    new_master_rdata_valid1 <= new_master_rdata_valid0;
    new_master_rdata_valid2 <= new_master_rdata_valid1;
    new_master_rdata_valid3 <= new_master_rdata_valid2;
    new_master_rdata_valid4 <= new_master_rdata_valid3;
    new_master_rdata_valid5 <= new_master_rdata_valid4;
    new_master_rdata_valid6 <= new_master_rdata_valid5;
    new_master_rdata_valid7 <= new_master_rdata_valid6;
    new_master_rdata_valid8 <= new_master_rdata_valid7;
    new_master_rdata_valid9 <= ((((((((1'd0 | ((roundrobin0_grant == 1'd1) & soclinux_interface_bank0_rdata_valid)) | ((roundrobin1_grant == 1'd1) & soclinux_interface_bank1_rdata_valid)) | ((roundrobin2_grant == 1'd1) & soclinux_interface_bank2_rdata_valid)) | ((roundrobin3_grant == 1'd1) & soclinux_interface_bank3_rdata_valid)) | ((roundrobin4_grant == 1'd1) & soclinux_interface_bank4_rdata_valid)) | ((roundrobin5_grant == 1'd1) & soclinux_interface_bank5_rdata_valid)) | ((roundrobin6_grant == 1'd1) & soclinux_interface_bank6_rdata_valid)) | ((roundrobin7_grant == 1'd1) & soclinux_interface_bank7_rdata_valid));
    new_master_rdata_valid10 <= new_master_rdata_valid9;
    new_master_rdata_valid11 <= new_master_rdata_valid10;
    new_master_rdata_valid12 <= new_master_rdata_valid11;
    new_master_rdata_valid13 <= new_master_rdata_valid12;
    new_master_rdata_valid14 <= new_master_rdata_valid13;
    new_master_rdata_valid15 <= new_master_rdata_valid14;
    new_master_rdata_valid16 <= new_master_rdata_valid15;
    new_master_rdata_valid17 <= new_master_rdata_valid16;
    new_master_rdata_valid18 <= ((((((((1'd0 | ((roundrobin0_grant == 2'd2) & soclinux_interface_bank0_rdata_valid)) | ((roundrobin1_grant == 2'd2) & soclinux_interface_bank1_rdata_valid)) | ((roundrobin2_grant == 2'd2) & soclinux_interface_bank2_rdata_valid)) | ((roundrobin3_grant == 2'd2) & soclinux_interface_bank3_rdata_valid)) | ((roundrobin4_grant == 2'd2) & soclinux_interface_bank4_rdata_valid)) | ((roundrobin5_grant == 2'd2) & soclinux_interface_bank5_rdata_valid)) | ((roundrobin6_grant == 2'd2) & soclinux_interface_bank6_rdata_valid)) | ((roundrobin7_grant == 2'd2) & soclinux_interface_bank7_rdata_valid));
    new_master_rdata_valid19 <= new_master_rdata_valid18;
    new_master_rdata_valid20 <= new_master_rdata_valid19;
    new_master_rdata_valid21 <= new_master_rdata_valid20;
    new_master_rdata_valid22 <= new_master_rdata_valid21;
    new_master_rdata_valid23 <= new_master_rdata_valid22;
    new_master_rdata_valid24 <= new_master_rdata_valid23;
    new_master_rdata_valid25 <= new_master_rdata_valid24;
    new_master_rdata_valid26 <= new_master_rdata_valid25;
    if (roundrobin0_ce) begin
        case (roundrobin0_grant)
            1'd0: begin
                if (roundrobin0_request[1]) begin
                    roundrobin0_grant <= 1'd1;
                end else begin
                    if (roundrobin0_request[2]) begin
                        roundrobin0_grant <= 2'd2;
                    end
                end
            end
            1'd1: begin
                if (roundrobin0_request[2]) begin
                    roundrobin0_grant <= 2'd2;
                end else begin
                    if (roundrobin0_request[0]) begin
                        roundrobin0_grant <= 1'd0;
                    end
                end
            end
            2'd2: begin
                if (roundrobin0_request[0]) begin
                    roundrobin0_grant <= 1'd0;
                end else begin
                    if (roundrobin0_request[1]) begin
                        roundrobin0_grant <= 1'd1;
                    end
                end
            end
        endcase
    end
    if (roundrobin1_ce) begin
        case (roundrobin1_grant)
            1'd0: begin
                if (roundrobin1_request[1]) begin
                    roundrobin1_grant <= 1'd1;
                end else begin
                    if (roundrobin1_request[2]) begin
                        roundrobin1_grant <= 2'd2;
                    end
                end
            end
            1'd1: begin
                if (roundrobin1_request[2]) begin
                    roundrobin1_grant <= 2'd2;
                end else begin
                    if (roundrobin1_request[0]) begin
                        roundrobin1_grant <= 1'd0;
                    end
                end
            end
            2'd2: begin
                if (roundrobin1_request[0]) begin
                    roundrobin1_grant <= 1'd0;
                end else begin
                    if (roundrobin1_request[1]) begin
                        roundrobin1_grant <= 1'd1;
                    end
                end
            end
        endcase
    end
    if (roundrobin2_ce) begin
        case (roundrobin2_grant)
            1'd0: begin
                if (roundrobin2_request[1]) begin
                    roundrobin2_grant <= 1'd1;
                end else begin
                    if (roundrobin2_request[2]) begin
                        roundrobin2_grant <= 2'd2;
                    end
                end
            end
            1'd1: begin
                if (roundrobin2_request[2]) begin
                    roundrobin2_grant <= 2'd2;
                end else begin
                    if (roundrobin2_request[0]) begin
                        roundrobin2_grant <= 1'd0;
                    end
                end
            end
            2'd2: begin
                if (roundrobin2_request[0]) begin
                    roundrobin2_grant <= 1'd0;
                end else begin
                    if (roundrobin2_request[1]) begin
                        roundrobin2_grant <= 1'd1;
                    end
                end
            end
        endcase
    end
    if (roundrobin3_ce) begin
        case (roundrobin3_grant)
            1'd0: begin
                if (roundrobin3_request[1]) begin
                    roundrobin3_grant <= 1'd1;
                end else begin
                    if (roundrobin3_request[2]) begin
                        roundrobin3_grant <= 2'd2;
                    end
                end
            end
            1'd1: begin
                if (roundrobin3_request[2]) begin
                    roundrobin3_grant <= 2'd2;
                end else begin
                    if (roundrobin3_request[0]) begin
                        roundrobin3_grant <= 1'd0;
                    end
                end
            end
            2'd2: begin
                if (roundrobin3_request[0]) begin
                    roundrobin3_grant <= 1'd0;
                end else begin
                    if (roundrobin3_request[1]) begin
                        roundrobin3_grant <= 1'd1;
                    end
                end
            end
        endcase
    end
    if (roundrobin4_ce) begin
        case (roundrobin4_grant)
            1'd0: begin
                if (roundrobin4_request[1]) begin
                    roundrobin4_grant <= 1'd1;
                end else begin
                    if (roundrobin4_request[2]) begin
                        roundrobin4_grant <= 2'd2;
                    end
                end
            end
            1'd1: begin
                if (roundrobin4_request[2]) begin
                    roundrobin4_grant <= 2'd2;
                end else begin
                    if (roundrobin4_request[0]) begin
                        roundrobin4_grant <= 1'd0;
                    end
                end
            end
            2'd2: begin
                if (roundrobin4_request[0]) begin
                    roundrobin4_grant <= 1'd0;
                end else begin
                    if (roundrobin4_request[1]) begin
                        roundrobin4_grant <= 1'd1;
                    end
                end
            end
        endcase
    end
    if (roundrobin5_ce) begin
        case (roundrobin5_grant)
            1'd0: begin
                if (roundrobin5_request[1]) begin
                    roundrobin5_grant <= 1'd1;
                end else begin
                    if (roundrobin5_request[2]) begin
                        roundrobin5_grant <= 2'd2;
                    end
                end
            end
            1'd1: begin
                if (roundrobin5_request[2]) begin
                    roundrobin5_grant <= 2'd2;
                end else begin
                    if (roundrobin5_request[0]) begin
                        roundrobin5_grant <= 1'd0;
                    end
                end
            end
            2'd2: begin
                if (roundrobin5_request[0]) begin
                    roundrobin5_grant <= 1'd0;
                end else begin
                    if (roundrobin5_request[1]) begin
                        roundrobin5_grant <= 1'd1;
                    end
                end
            end
        endcase
    end
    if (roundrobin6_ce) begin
        case (roundrobin6_grant)
            1'd0: begin
                if (roundrobin6_request[1]) begin
                    roundrobin6_grant <= 1'd1;
                end else begin
                    if (roundrobin6_request[2]) begin
                        roundrobin6_grant <= 2'd2;
                    end
                end
            end
            1'd1: begin
                if (roundrobin6_request[2]) begin
                    roundrobin6_grant <= 2'd2;
                end else begin
                    if (roundrobin6_request[0]) begin
                        roundrobin6_grant <= 1'd0;
                    end
                end
            end
            2'd2: begin
                if (roundrobin6_request[0]) begin
                    roundrobin6_grant <= 1'd0;
                end else begin
                    if (roundrobin6_request[1]) begin
                        roundrobin6_grant <= 1'd1;
                    end
                end
            end
        endcase
    end
    if (roundrobin7_ce) begin
        case (roundrobin7_grant)
            1'd0: begin
                if (roundrobin7_request[1]) begin
                    roundrobin7_grant <= 1'd1;
                end else begin
                    if (roundrobin7_request[2]) begin
                        roundrobin7_grant <= 2'd2;
                    end
                end
            end
            1'd1: begin
                if (roundrobin7_request[2]) begin
                    roundrobin7_grant <= 2'd2;
                end else begin
                    if (roundrobin7_request[0]) begin
                        roundrobin7_grant <= 1'd0;
                    end
                end
            end
            2'd2: begin
                if (roundrobin7_request[0]) begin
                    roundrobin7_grant <= 1'd0;
                end else begin
                    if (roundrobin7_request[1]) begin
                        roundrobin7_grant <= 1'd1;
                    end
                end
            end
        endcase
    end
    litedramwishbone2native_state <= litedramwishbone2native_next_state;
    if (soclinux_aborted_litedramwishbone2native_next_value_ce) begin
        soclinux_aborted <= soclinux_aborted_litedramwishbone2native_next_value;
    end
    if (leds_done) begin
        leds_chaser <= {leds_chaser, (~leds_chaser[7])};
    end
    if (leds_re) begin
        leds_mode <= 1'd1;
    end
    if (leds_wait) begin
        if ((~leds_done)) begin
            leds_count <= (leds_count - 1'd1);
        end
    end else begin
        leds_count <= 23'd7812500;
    end
    card_detect_d <= card_detect_status0;
    card_detect_irq <= (card_detect_status0 ^ card_detect_d);
    if ((~clocker_stop)) begin
        clocker_count <= (clocker_count + 1'd1);
        if ((clocker_count >= (clocker_storage[8:1] - 1'd1))) begin
            clocker_clk1 <= (~clocker_clk1);
            clocker_count <= 1'd0;
        end
    end
    clocker_clk_d <= clocker_clk1;
    if (clocker_clk_d) begin
        clocker_ce_delayed <= clocker_clk_en;
    end
    sdphyinit_state <= sdphyinit_next_state;
    if (init_count_sdphyinit_next_value_ce) begin
        init_count <= init_count_sdphyinit_next_value;
    end
    sdphycmdw_state <= sdphycmdw_next_state;
    if (cmdw_count_sdphycmdw_next_value_ce) begin
        cmdw_count <= cmdw_count_sdphycmdw_next_value;
    end
    if (cmdr_cmdr_pads_in_valid) begin
        cmdr_cmdr_run <= (cmdr_cmdr_start | cmdr_cmdr_run);
    end
    if (cmdr_cmdr_converter_converter_source_ready) begin
        cmdr_cmdr_converter_converter_strobe_all <= 1'd0;
    end
    if (cmdr_cmdr_converter_converter_load_part) begin
        if (((cmdr_cmdr_converter_converter_demux == 3'd7) | cmdr_cmdr_converter_converter_sink_last)) begin
            cmdr_cmdr_converter_converter_demux <= 1'd0;
            cmdr_cmdr_converter_converter_strobe_all <= 1'd1;
        end else begin
            cmdr_cmdr_converter_converter_demux <= (cmdr_cmdr_converter_converter_demux + 1'd1);
        end
    end
    if ((cmdr_cmdr_converter_converter_source_valid & cmdr_cmdr_converter_converter_source_ready)) begin
        if ((cmdr_cmdr_converter_converter_sink_valid & cmdr_cmdr_converter_converter_sink_ready)) begin
            cmdr_cmdr_converter_converter_source_first <= cmdr_cmdr_converter_converter_sink_first;
            cmdr_cmdr_converter_converter_source_last <= cmdr_cmdr_converter_converter_sink_last;
        end else begin
            cmdr_cmdr_converter_converter_source_first <= 1'd0;
            cmdr_cmdr_converter_converter_source_last <= 1'd0;
        end
    end else begin
        if ((cmdr_cmdr_converter_converter_sink_valid & cmdr_cmdr_converter_converter_sink_ready)) begin
            cmdr_cmdr_converter_converter_source_first <= (cmdr_cmdr_converter_converter_sink_first | cmdr_cmdr_converter_converter_source_first);
            cmdr_cmdr_converter_converter_source_last <= (cmdr_cmdr_converter_converter_sink_last | cmdr_cmdr_converter_converter_source_last);
        end
    end
    if (cmdr_cmdr_converter_converter_load_part) begin
        case (cmdr_cmdr_converter_converter_demux)
            1'd0: begin
                cmdr_cmdr_converter_converter_source_payload_data[7] <= cmdr_cmdr_converter_converter_sink_payload_data;
            end
            1'd1: begin
                cmdr_cmdr_converter_converter_source_payload_data[6] <= cmdr_cmdr_converter_converter_sink_payload_data;
            end
            2'd2: begin
                cmdr_cmdr_converter_converter_source_payload_data[5] <= cmdr_cmdr_converter_converter_sink_payload_data;
            end
            2'd3: begin
                cmdr_cmdr_converter_converter_source_payload_data[4] <= cmdr_cmdr_converter_converter_sink_payload_data;
            end
            3'd4: begin
                cmdr_cmdr_converter_converter_source_payload_data[3] <= cmdr_cmdr_converter_converter_sink_payload_data;
            end
            3'd5: begin
                cmdr_cmdr_converter_converter_source_payload_data[2] <= cmdr_cmdr_converter_converter_sink_payload_data;
            end
            3'd6: begin
                cmdr_cmdr_converter_converter_source_payload_data[1] <= cmdr_cmdr_converter_converter_sink_payload_data;
            end
            3'd7: begin
                cmdr_cmdr_converter_converter_source_payload_data[0] <= cmdr_cmdr_converter_converter_sink_payload_data;
            end
        endcase
    end
    if (cmdr_cmdr_converter_converter_load_part) begin
        cmdr_cmdr_converter_converter_source_payload_valid_token_count <= (cmdr_cmdr_converter_converter_demux + 1'd1);
    end
    if (((~cmdr_cmdr_buf_pipe_valid_source_valid) | cmdr_cmdr_buf_pipe_valid_source_ready)) begin
        cmdr_cmdr_buf_pipe_valid_source_valid <= cmdr_cmdr_buf_pipe_valid_sink_valid;
        cmdr_cmdr_buf_pipe_valid_source_first <= cmdr_cmdr_buf_pipe_valid_sink_first;
        cmdr_cmdr_buf_pipe_valid_source_last <= cmdr_cmdr_buf_pipe_valid_sink_last;
        cmdr_cmdr_buf_pipe_valid_source_payload_data <= cmdr_cmdr_buf_pipe_valid_sink_payload_data;
    end
    if (cmdr_cmdr_reset) begin
        cmdr_cmdr_run <= 1'd0;
        cmdr_cmdr_converter_converter_source_payload_data <= 8'd0;
        cmdr_cmdr_converter_converter_source_payload_valid_token_count <= 4'd0;
        cmdr_cmdr_converter_converter_demux <= 3'd0;
        cmdr_cmdr_converter_converter_strobe_all <= 1'd0;
        cmdr_cmdr_buf_pipe_valid_source_valid <= 1'd0;
        cmdr_cmdr_buf_pipe_valid_source_payload_data <= 8'd0;
    end
    sdphycmdr_state <= sdphycmdr_next_state;
    if (cmdr_timeout_sdphycmdr_next_value_ce0) begin
        cmdr_timeout <= cmdr_timeout_sdphycmdr_next_value0;
    end
    if (cmdr_count_sdphycmdr_next_value_ce1) begin
        cmdr_count <= cmdr_count_sdphycmdr_next_value1;
    end
    if (cmdr_busy_sdphycmdr_next_value_ce2) begin
        cmdr_busy <= cmdr_busy_sdphycmdr_next_value2;
    end
    if (cmdr_cmdr_reset_sdphycmdr_next_value_ce3) begin
        cmdr_cmdr_reset <= cmdr_cmdr_reset_sdphycmdr_next_value3;
    end
    if (dataw_crc_pads_in_valid) begin
        dataw_crc_run <= (dataw_crc_start | dataw_crc_run);
    end
    if (dataw_crc_converter_converter_source_ready) begin
        dataw_crc_converter_converter_strobe_all <= 1'd0;
    end
    if (dataw_crc_converter_converter_load_part) begin
        if (((dataw_crc_converter_converter_demux == 3'd7) | dataw_crc_converter_converter_sink_last)) begin
            dataw_crc_converter_converter_demux <= 1'd0;
            dataw_crc_converter_converter_strobe_all <= 1'd1;
        end else begin
            dataw_crc_converter_converter_demux <= (dataw_crc_converter_converter_demux + 1'd1);
        end
    end
    if ((dataw_crc_converter_converter_source_valid & dataw_crc_converter_converter_source_ready)) begin
        if ((dataw_crc_converter_converter_sink_valid & dataw_crc_converter_converter_sink_ready)) begin
            dataw_crc_converter_converter_source_first <= dataw_crc_converter_converter_sink_first;
            dataw_crc_converter_converter_source_last <= dataw_crc_converter_converter_sink_last;
        end else begin
            dataw_crc_converter_converter_source_first <= 1'd0;
            dataw_crc_converter_converter_source_last <= 1'd0;
        end
    end else begin
        if ((dataw_crc_converter_converter_sink_valid & dataw_crc_converter_converter_sink_ready)) begin
            dataw_crc_converter_converter_source_first <= (dataw_crc_converter_converter_sink_first | dataw_crc_converter_converter_source_first);
            dataw_crc_converter_converter_source_last <= (dataw_crc_converter_converter_sink_last | dataw_crc_converter_converter_source_last);
        end
    end
    if (dataw_crc_converter_converter_load_part) begin
        case (dataw_crc_converter_converter_demux)
            1'd0: begin
                dataw_crc_converter_converter_source_payload_data[7] <= dataw_crc_converter_converter_sink_payload_data;
            end
            1'd1: begin
                dataw_crc_converter_converter_source_payload_data[6] <= dataw_crc_converter_converter_sink_payload_data;
            end
            2'd2: begin
                dataw_crc_converter_converter_source_payload_data[5] <= dataw_crc_converter_converter_sink_payload_data;
            end
            2'd3: begin
                dataw_crc_converter_converter_source_payload_data[4] <= dataw_crc_converter_converter_sink_payload_data;
            end
            3'd4: begin
                dataw_crc_converter_converter_source_payload_data[3] <= dataw_crc_converter_converter_sink_payload_data;
            end
            3'd5: begin
                dataw_crc_converter_converter_source_payload_data[2] <= dataw_crc_converter_converter_sink_payload_data;
            end
            3'd6: begin
                dataw_crc_converter_converter_source_payload_data[1] <= dataw_crc_converter_converter_sink_payload_data;
            end
            3'd7: begin
                dataw_crc_converter_converter_source_payload_data[0] <= dataw_crc_converter_converter_sink_payload_data;
            end
        endcase
    end
    if (dataw_crc_converter_converter_load_part) begin
        dataw_crc_converter_converter_source_payload_valid_token_count <= (dataw_crc_converter_converter_demux + 1'd1);
    end
    if (((~dataw_crc_buf_pipe_valid_source_valid) | dataw_crc_buf_pipe_valid_source_ready)) begin
        dataw_crc_buf_pipe_valid_source_valid <= dataw_crc_buf_pipe_valid_sink_valid;
        dataw_crc_buf_pipe_valid_source_first <= dataw_crc_buf_pipe_valid_sink_first;
        dataw_crc_buf_pipe_valid_source_last <= dataw_crc_buf_pipe_valid_sink_last;
        dataw_crc_buf_pipe_valid_source_payload_data <= dataw_crc_buf_pipe_valid_sink_payload_data;
    end
    if (dataw_crc_reset) begin
        dataw_crc_run <= 1'd0;
        dataw_crc_converter_converter_source_payload_data <= 8'd0;
        dataw_crc_converter_converter_source_payload_valid_token_count <= 4'd0;
        dataw_crc_converter_converter_demux <= 3'd0;
        dataw_crc_converter_converter_strobe_all <= 1'd0;
        dataw_crc_buf_pipe_valid_source_valid <= 1'd0;
        dataw_crc_buf_pipe_valid_source_payload_data <= 8'd0;
    end
    sdphydataw_state <= sdphydataw_next_state;
    if (dataw_accepted1_sdphydataw_next_value_ce0) begin
        dataw_accepted1 <= dataw_accepted1_sdphydataw_next_value0;
    end
    if (dataw_crc_error1_sdphydataw_next_value_ce1) begin
        dataw_crc_error1 <= dataw_crc_error1_sdphydataw_next_value1;
    end
    if (dataw_write_error1_sdphydataw_next_value_ce2) begin
        dataw_write_error1 <= dataw_write_error1_sdphydataw_next_value2;
    end
    if (dataw_count_sdphydataw_next_value_ce3) begin
        dataw_count <= dataw_count_sdphydataw_next_value3;
    end
    if (datar_datar_pads_in_valid) begin
        datar_datar_run <= (datar_datar_start | datar_datar_run);
    end
    if (datar_datar_converter_converter_source_ready) begin
        datar_datar_converter_converter_strobe_all <= 1'd0;
    end
    if (datar_datar_converter_converter_load_part) begin
        if (((datar_datar_converter_converter_demux == 1'd1) | datar_datar_converter_converter_sink_last)) begin
            datar_datar_converter_converter_demux <= 1'd0;
            datar_datar_converter_converter_strobe_all <= 1'd1;
        end else begin
            datar_datar_converter_converter_demux <= (datar_datar_converter_converter_demux + 1'd1);
        end
    end
    if ((datar_datar_converter_converter_source_valid & datar_datar_converter_converter_source_ready)) begin
        if ((datar_datar_converter_converter_sink_valid & datar_datar_converter_converter_sink_ready)) begin
            datar_datar_converter_converter_source_first <= datar_datar_converter_converter_sink_first;
            datar_datar_converter_converter_source_last <= datar_datar_converter_converter_sink_last;
        end else begin
            datar_datar_converter_converter_source_first <= 1'd0;
            datar_datar_converter_converter_source_last <= 1'd0;
        end
    end else begin
        if ((datar_datar_converter_converter_sink_valid & datar_datar_converter_converter_sink_ready)) begin
            datar_datar_converter_converter_source_first <= (datar_datar_converter_converter_sink_first | datar_datar_converter_converter_source_first);
            datar_datar_converter_converter_source_last <= (datar_datar_converter_converter_sink_last | datar_datar_converter_converter_source_last);
        end
    end
    if (datar_datar_converter_converter_load_part) begin
        case (datar_datar_converter_converter_demux)
            1'd0: begin
                datar_datar_converter_converter_source_payload_data[7:4] <= datar_datar_converter_converter_sink_payload_data;
            end
            1'd1: begin
                datar_datar_converter_converter_source_payload_data[3:0] <= datar_datar_converter_converter_sink_payload_data;
            end
        endcase
    end
    if (datar_datar_converter_converter_load_part) begin
        datar_datar_converter_converter_source_payload_valid_token_count <= (datar_datar_converter_converter_demux + 1'd1);
    end
    if (((~datar_datar_buf_pipe_valid_source_valid) | datar_datar_buf_pipe_valid_source_ready)) begin
        datar_datar_buf_pipe_valid_source_valid <= datar_datar_buf_pipe_valid_sink_valid;
        datar_datar_buf_pipe_valid_source_first <= datar_datar_buf_pipe_valid_sink_first;
        datar_datar_buf_pipe_valid_source_last <= datar_datar_buf_pipe_valid_sink_last;
        datar_datar_buf_pipe_valid_source_payload_data <= datar_datar_buf_pipe_valid_sink_payload_data;
    end
    if (datar_datar_reset) begin
        datar_datar_run <= 1'd0;
        datar_datar_converter_converter_source_payload_data <= 8'd0;
        datar_datar_converter_converter_source_payload_valid_token_count <= 2'd0;
        datar_datar_converter_converter_demux <= 1'd0;
        datar_datar_converter_converter_strobe_all <= 1'd0;
        datar_datar_buf_pipe_valid_source_valid <= 1'd0;
        datar_datar_buf_pipe_valid_source_payload_data <= 8'd0;
    end
    sdphydatar_state <= sdphydatar_next_state;
    if (datar_count_sdphydatar_next_value_ce0) begin
        datar_count <= datar_count_sdphydatar_next_value0;
    end
    if (datar_timeout_sdphydatar_next_value_ce1) begin
        datar_timeout <= datar_timeout_sdphydatar_next_value1;
    end
    if (datar_datar_reset_sdphydatar_next_value_ce2) begin
        datar_datar_reset <= datar_datar_reset_sdphydatar_next_value2;
    end
    clk_i_d <= clk_i;
    sdcard_core_done_d <= sdcard_core_cmd_done;
    sdcard_core_irq <= (sdcard_core_cmd_done & (~sdcard_core_done_d));
    if (sdcard_core_crc7_inserter_reset) begin
        sdcard_core_crc7_inserter_reg0 <= 1'd0;
    end else begin
        if (sdcard_core_crc7_inserter_enable) begin
            sdcard_core_crc7_inserter_reg0 <= sdcard_core_crc7_inserter_reg40;
        end
    end
    if (sdcard_core_crc16_inserter_crc0_reset) begin
        sdcard_core_crc16_inserter_crc0_reg0 <= 1'd0;
    end else begin
        if (sdcard_core_crc16_inserter_crc0_enable) begin
            sdcard_core_crc16_inserter_crc0_reg0 <= sdcard_core_crc16_inserter_crc0_reg2;
        end
    end
    if (sdcard_core_crc16_inserter_crc1_reset) begin
        sdcard_core_crc16_inserter_crc1_reg0 <= 1'd0;
    end else begin
        if (sdcard_core_crc16_inserter_crc1_enable) begin
            sdcard_core_crc16_inserter_crc1_reg0 <= sdcard_core_crc16_inserter_crc1_reg2;
        end
    end
    if (sdcard_core_crc16_inserter_crc2_reset) begin
        sdcard_core_crc16_inserter_crc2_reg0 <= 1'd0;
    end else begin
        if (sdcard_core_crc16_inserter_crc2_enable) begin
            sdcard_core_crc16_inserter_crc2_reg0 <= sdcard_core_crc16_inserter_crc2_reg2;
        end
    end
    if (sdcard_core_crc16_inserter_crc3_reset) begin
        sdcard_core_crc16_inserter_crc3_reg0 <= 1'd0;
    end else begin
        if (sdcard_core_crc16_inserter_crc3_enable) begin
            sdcard_core_crc16_inserter_crc3_reg0 <= sdcard_core_crc16_inserter_crc3_reg2;
        end
    end
    crc16inserter_state <= crc16inserter_next_state;
    if (sdcard_core_crc16_inserter_count_crc16inserter_next_value_ce) begin
        sdcard_core_crc16_inserter_count <= sdcard_core_crc16_inserter_count_crc16inserter_next_value;
    end
    if (((sdcard_core_fifo_syncfifo_we & sdcard_core_fifo_syncfifo_writable) & (~sdcard_core_fifo_replace))) begin
        sdcard_core_fifo_produce <= (sdcard_core_fifo_produce + 1'd1);
    end
    if (sdcard_core_fifo_do_read) begin
        sdcard_core_fifo_consume <= (sdcard_core_fifo_consume + 1'd1);
    end
    if (((sdcard_core_fifo_syncfifo_we & sdcard_core_fifo_syncfifo_writable) & (~sdcard_core_fifo_replace))) begin
        if ((~sdcard_core_fifo_do_read)) begin
            sdcard_core_fifo_level <= (sdcard_core_fifo_level + 1'd1);
        end
    end else begin
        if (sdcard_core_fifo_do_read) begin
            sdcard_core_fifo_level <= (sdcard_core_fifo_level - 1'd1);
        end
    end
    if (sdcard_core_fifo_reset) begin
        sdcard_core_fifo_level <= 4'd0;
        sdcard_core_fifo_produce <= 3'd0;
        sdcard_core_fifo_consume <= 3'd0;
    end
    fsm_state <= fsm_next_state;
    if (sdcard_core_cmd_done_fsm_next_value_ce0) begin
        sdcard_core_cmd_done <= sdcard_core_cmd_done_fsm_next_value0;
    end
    if (sdcard_core_data_done_fsm_next_value_ce1) begin
        sdcard_core_data_done <= sdcard_core_data_done_fsm_next_value1;
    end
    if (sdcard_core_cmd_count_fsm_next_value_ce2) begin
        sdcard_core_cmd_count <= sdcard_core_cmd_count_fsm_next_value2;
    end
    if (sdcard_core_data_count_fsm_next_value_ce3) begin
        sdcard_core_data_count <= sdcard_core_data_count_fsm_next_value3;
    end
    if (sdcard_core_cmd_error_fsm_next_value_ce4) begin
        sdcard_core_cmd_error <= sdcard_core_cmd_error_fsm_next_value4;
    end
    if (sdcard_core_cmd_timeout_fsm_next_value_ce5) begin
        sdcard_core_cmd_timeout <= sdcard_core_cmd_timeout_fsm_next_value5;
    end
    if (sdcard_core_data_error_fsm_next_value_ce6) begin
        sdcard_core_data_error <= sdcard_core_data_error_fsm_next_value6;
    end
    if (sdcard_core_data_timeout_fsm_next_value_ce7) begin
        sdcard_core_data_timeout <= sdcard_core_data_timeout_fsm_next_value7;
    end
    if (sdcard_core_cmd_response_status_fsm_next_value_ce8) begin
        sdcard_core_cmd_response_status <= sdcard_core_cmd_response_status_fsm_next_value8;
    end
    if ((~sdcard_block2mem_wishbonedmawriter_enable_storage)) begin
        sdcard_block2mem_connect <= 1'd0;
    end else begin
        if (sdcard_block2mem_start) begin
            sdcard_block2mem_connect <= 1'd1;
        end
    end
    sdcard_block2mem_done_d <= sdcard_block2mem_wishbonedmawriter_done_status;
    sdcard_block2mem_irq <= (sdcard_block2mem_wishbonedmawriter_done_status & (~sdcard_block2mem_done_d));
    if (sdcard_block2mem_fifo_syncfifo_re) begin
        sdcard_block2mem_fifo_readable <= 1'd1;
    end else begin
        if (sdcard_block2mem_fifo_re) begin
            sdcard_block2mem_fifo_readable <= 1'd0;
        end
    end
    if (((sdcard_block2mem_fifo_syncfifo_we & sdcard_block2mem_fifo_syncfifo_writable) & (~sdcard_block2mem_fifo_replace))) begin
        sdcard_block2mem_fifo_produce <= (sdcard_block2mem_fifo_produce + 1'd1);
    end
    if (sdcard_block2mem_fifo_do_read) begin
        sdcard_block2mem_fifo_consume <= (sdcard_block2mem_fifo_consume + 1'd1);
    end
    if (((sdcard_block2mem_fifo_syncfifo_we & sdcard_block2mem_fifo_syncfifo_writable) & (~sdcard_block2mem_fifo_replace))) begin
        if ((~sdcard_block2mem_fifo_do_read)) begin
            sdcard_block2mem_fifo_level0 <= (sdcard_block2mem_fifo_level0 + 1'd1);
        end
    end else begin
        if (sdcard_block2mem_fifo_do_read) begin
            sdcard_block2mem_fifo_level0 <= (sdcard_block2mem_fifo_level0 - 1'd1);
        end
    end
    if (sdcard_block2mem_converter_source_ready) begin
        sdcard_block2mem_converter_strobe_all <= 1'd0;
    end
    if (sdcard_block2mem_converter_load_part) begin
        if (((sdcard_block2mem_converter_demux == 2'd3) | sdcard_block2mem_converter_sink_last)) begin
            sdcard_block2mem_converter_demux <= 1'd0;
            sdcard_block2mem_converter_strobe_all <= 1'd1;
        end else begin
            sdcard_block2mem_converter_demux <= (sdcard_block2mem_converter_demux + 1'd1);
        end
    end
    if ((sdcard_block2mem_converter_source_valid & sdcard_block2mem_converter_source_ready)) begin
        if ((sdcard_block2mem_converter_sink_valid & sdcard_block2mem_converter_sink_ready)) begin
            sdcard_block2mem_converter_source_first <= sdcard_block2mem_converter_sink_first;
            sdcard_block2mem_converter_source_last <= sdcard_block2mem_converter_sink_last;
        end else begin
            sdcard_block2mem_converter_source_first <= 1'd0;
            sdcard_block2mem_converter_source_last <= 1'd0;
        end
    end else begin
        if ((sdcard_block2mem_converter_sink_valid & sdcard_block2mem_converter_sink_ready)) begin
            sdcard_block2mem_converter_source_first <= (sdcard_block2mem_converter_sink_first | sdcard_block2mem_converter_source_first);
            sdcard_block2mem_converter_source_last <= (sdcard_block2mem_converter_sink_last | sdcard_block2mem_converter_source_last);
        end
    end
    if (sdcard_block2mem_converter_load_part) begin
        case (sdcard_block2mem_converter_demux)
            1'd0: begin
                sdcard_block2mem_converter_source_payload_data[31:24] <= sdcard_block2mem_converter_sink_payload_data;
            end
            1'd1: begin
                sdcard_block2mem_converter_source_payload_data[23:16] <= sdcard_block2mem_converter_sink_payload_data;
            end
            2'd2: begin
                sdcard_block2mem_converter_source_payload_data[15:8] <= sdcard_block2mem_converter_sink_payload_data;
            end
            2'd3: begin
                sdcard_block2mem_converter_source_payload_data[7:0] <= sdcard_block2mem_converter_sink_payload_data;
            end
        endcase
    end
    if (sdcard_block2mem_converter_load_part) begin
        sdcard_block2mem_converter_source_payload_valid_token_count <= (sdcard_block2mem_converter_demux + 1'd1);
    end
    sdblock2memdma_state <= sdblock2memdma_next_state;
    if (sdcard_block2mem_wishbonedmawriter_offset1_sdblock2memdma_next_value_ce) begin
        sdcard_block2mem_wishbonedmawriter_offset1 <= sdcard_block2mem_wishbonedmawriter_offset1_sdblock2memdma_next_value;
    end
    if (sdcard_block2mem_wishbonedmawriter_reset) begin
        sdcard_block2mem_wishbonedmawriter_offset1 <= 32'd0;
        sdblock2memdma_state <= 2'd0;
    end
    if ((sdcard_mem2block_source_source_valid & sdcard_mem2block_source_source_ready)) begin
        sdcard_mem2block_count <= (sdcard_mem2block_count + 1'd1);
        if (sdcard_mem2block_source_source_last) begin
            sdcard_mem2block_count <= 1'd0;
        end
    end
    sdcard_mem2block_done_d <= sdcard_mem2block_dma_done_status;
    sdcard_mem2block_irq <= (sdcard_mem2block_dma_done_status & (~sdcard_mem2block_done_d));
    if (((sdcard_mem2block_dma_fifo_syncfifo_we & sdcard_mem2block_dma_fifo_syncfifo_writable) & (~sdcard_mem2block_dma_fifo_replace))) begin
        sdcard_mem2block_dma_fifo_produce <= (sdcard_mem2block_dma_fifo_produce + 1'd1);
    end
    if (sdcard_mem2block_dma_fifo_do_read) begin
        sdcard_mem2block_dma_fifo_consume <= (sdcard_mem2block_dma_fifo_consume + 1'd1);
    end
    if (((sdcard_mem2block_dma_fifo_syncfifo_we & sdcard_mem2block_dma_fifo_syncfifo_writable) & (~sdcard_mem2block_dma_fifo_replace))) begin
        if ((~sdcard_mem2block_dma_fifo_do_read)) begin
            sdcard_mem2block_dma_fifo_level <= (sdcard_mem2block_dma_fifo_level + 1'd1);
        end
    end else begin
        if (sdcard_mem2block_dma_fifo_do_read) begin
            sdcard_mem2block_dma_fifo_level <= (sdcard_mem2block_dma_fifo_level - 1'd1);
        end
    end
    sdmem2blockdma_state <= sdmem2blockdma_next_state;
    if (sdcard_mem2block_dma_offset1_sdmem2blockdma_next_value_ce) begin
        sdcard_mem2block_dma_offset1 <= sdcard_mem2block_dma_offset1_sdmem2blockdma_next_value;
    end
    if (sdcard_mem2block_dma_reset) begin
        sdcard_mem2block_dma_offset1 <= 32'd0;
        sdmem2blockdma_state <= 2'd0;
    end
    if ((sdcard_mem2block_converter_converter_source_valid & sdcard_mem2block_converter_converter_source_ready)) begin
        if (sdcard_mem2block_converter_converter_last) begin
            sdcard_mem2block_converter_converter_mux <= 1'd0;
        end else begin
            sdcard_mem2block_converter_converter_mux <= (sdcard_mem2block_converter_converter_mux + 1'd1);
        end
    end
    if (sdcard_mem2block_fifo_syncfifo_re) begin
        sdcard_mem2block_fifo_readable <= 1'd1;
    end else begin
        if (sdcard_mem2block_fifo_re) begin
            sdcard_mem2block_fifo_readable <= 1'd0;
        end
    end
    if (((sdcard_mem2block_fifo_syncfifo_we & sdcard_mem2block_fifo_syncfifo_writable) & (~sdcard_mem2block_fifo_replace))) begin
        sdcard_mem2block_fifo_produce <= (sdcard_mem2block_fifo_produce + 1'd1);
    end
    if (sdcard_mem2block_fifo_do_read) begin
        sdcard_mem2block_fifo_consume <= (sdcard_mem2block_fifo_consume + 1'd1);
    end
    if (((sdcard_mem2block_fifo_syncfifo_we & sdcard_mem2block_fifo_syncfifo_writable) & (~sdcard_mem2block_fifo_replace))) begin
        if ((~sdcard_mem2block_fifo_do_read)) begin
            sdcard_mem2block_fifo_level0 <= (sdcard_mem2block_fifo_level0 + 1'd1);
        end
    end else begin
        if (sdcard_mem2block_fifo_do_read) begin
            sdcard_mem2block_fifo_level0 <= (sdcard_mem2block_fifo_level0 - 1'd1);
        end
    end
    if (card_detect_clear) begin
        card_detect_pending <= 1'd0;
    end
    if (card_detect_trigger) begin
        card_detect_pending <= 1'd1;
    end
    if (block2mem_dma_clear) begin
        block2mem_dma_pending <= 1'd0;
    end
    if (block2mem_dma_trigger) begin
        block2mem_dma_pending <= 1'd1;
    end
    if (mem2block_dma_clear) begin
        mem2block_dma_pending <= 1'd0;
    end
    if (mem2block_dma_trigger) begin
        mem2block_dma_pending <= 1'd1;
    end
    wishbone2csr_state <= wishbone2csr_next_state;
    if (interface1_dat_w_wishbone2csr_next_value_ce0) begin
        interface1_dat_w <= interface1_dat_w_wishbone2csr_next_value0;
    end
    if (interface1_adr_wishbone2csr_next_value_ce1) begin
        interface1_adr <= interface1_adr_wishbone2csr_next_value1;
    end
    if (interface1_re_wishbone2csr_next_value_ce2) begin
        interface1_re <= interface1_re_wishbone2csr_next_value2;
    end
    if (interface1_we_wishbone2csr_next_value_ce3) begin
        interface1_we <= interface1_we_wishbone2csr_next_value3;
    end
    csr_bankarray_interface0_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank0_sel) begin
        case (csr_bankarray_interface0_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_in10_w;
            end
            1'd1: begin
                csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_in20_w;
            end
            2'd2: begin
                csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_result_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank0_in10_re) begin
        in1_storage[31:0] <= csr_bankarray_csrbank0_in10_r;
    end
    in1_re <= csr_bankarray_csrbank0_in10_re;
    if (csr_bankarray_csrbank0_in20_re) begin
        in2_storage[31:0] <= csr_bankarray_csrbank0_in20_r;
    end
    in2_re <= csr_bankarray_csrbank0_in20_re;
    result_re <= csr_bankarray_csrbank0_result_re;
    csr_bankarray_interface1_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank1_sel) begin
        case (csr_bankarray_interface1_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface1_bank_bus_dat_r <= csr_bankarray_csrbank1_reset0_w;
            end
            1'd1: begin
                csr_bankarray_interface1_bank_bus_dat_r <= csr_bankarray_csrbank1_scratch0_w;
            end
            2'd2: begin
                csr_bankarray_interface1_bank_bus_dat_r <= csr_bankarray_csrbank1_bus_errors_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank1_reset0_re) begin
        soclinux_reset_storage[1:0] <= csr_bankarray_csrbank1_reset0_r;
    end
    soclinux_reset_re <= csr_bankarray_csrbank1_reset0_re;
    if (csr_bankarray_csrbank1_scratch0_re) begin
        soclinux_scratch_storage[31:0] <= csr_bankarray_csrbank1_scratch0_r;
    end
    soclinux_scratch_re <= csr_bankarray_csrbank1_scratch0_re;
    soclinux_bus_errors_re <= csr_bankarray_csrbank1_bus_errors_re;
    csr_bankarray_interface2_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank2_sel) begin
        case (csr_bankarray_interface2_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_rst0_w;
            end
            1'd1: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_dly_sel0_w;
            end
            2'd2: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_half_sys8x_taps0_w;
            end
            2'd3: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_wlevel_en0_w;
            end
            3'd4: begin
                csr_bankarray_interface2_bank_bus_dat_r <= v7ddrphy_wlevel_strobe_w;
            end
            3'd5: begin
                csr_bankarray_interface2_bank_bus_dat_r <= v7ddrphy_cdly_rst_w;
            end
            3'd6: begin
                csr_bankarray_interface2_bank_bus_dat_r <= v7ddrphy_cdly_inc_w;
            end
            3'd7: begin
                csr_bankarray_interface2_bank_bus_dat_r <= v7ddrphy_rdly_dq_rst_w;
            end
            4'd8: begin
                csr_bankarray_interface2_bank_bus_dat_r <= v7ddrphy_rdly_dq_inc_w;
            end
            4'd9: begin
                csr_bankarray_interface2_bank_bus_dat_r <= v7ddrphy_rdly_dq_bitslip_rst_w;
            end
            4'd10: begin
                csr_bankarray_interface2_bank_bus_dat_r <= v7ddrphy_rdly_dq_bitslip_w;
            end
            4'd11: begin
                csr_bankarray_interface2_bank_bus_dat_r <= v7ddrphy_wdly_dq_rst_w;
            end
            4'd12: begin
                csr_bankarray_interface2_bank_bus_dat_r <= v7ddrphy_wdly_dq_inc_w;
            end
            4'd13: begin
                csr_bankarray_interface2_bank_bus_dat_r <= v7ddrphy_wdly_dqs_rst_w;
            end
            4'd14: begin
                csr_bankarray_interface2_bank_bus_dat_r <= v7ddrphy_wdly_dqs_inc_w;
            end
            4'd15: begin
                csr_bankarray_interface2_bank_bus_dat_r <= v7ddrphy_wdly_dq_bitslip_rst_w;
            end
            5'd16: begin
                csr_bankarray_interface2_bank_bus_dat_r <= v7ddrphy_wdly_dq_bitslip_w;
            end
            5'd17: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_rdphase0_w;
            end
            5'd18: begin
                csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_wrphase0_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank2_rst0_re) begin
        v7ddrphy_rst_storage <= csr_bankarray_csrbank2_rst0_r;
    end
    v7ddrphy_rst_re <= csr_bankarray_csrbank2_rst0_re;
    if (csr_bankarray_csrbank2_dly_sel0_re) begin
        v7ddrphy_dly_sel_storage[3:0] <= csr_bankarray_csrbank2_dly_sel0_r;
    end
    v7ddrphy_dly_sel_re <= csr_bankarray_csrbank2_dly_sel0_re;
    if (csr_bankarray_csrbank2_half_sys8x_taps0_re) begin
        v7ddrphy_half_sys8x_taps_storage[4:0] <= csr_bankarray_csrbank2_half_sys8x_taps0_r;
    end
    v7ddrphy_half_sys8x_taps_re <= csr_bankarray_csrbank2_half_sys8x_taps0_re;
    if (csr_bankarray_csrbank2_wlevel_en0_re) begin
        v7ddrphy_wlevel_en_storage <= csr_bankarray_csrbank2_wlevel_en0_r;
    end
    v7ddrphy_wlevel_en_re <= csr_bankarray_csrbank2_wlevel_en0_re;
    if (csr_bankarray_csrbank2_rdphase0_re) begin
        v7ddrphy_rdphase_storage[1:0] <= csr_bankarray_csrbank2_rdphase0_r;
    end
    v7ddrphy_rdphase_re <= csr_bankarray_csrbank2_rdphase0_re;
    if (csr_bankarray_csrbank2_wrphase0_re) begin
        v7ddrphy_wrphase_storage[1:0] <= csr_bankarray_csrbank2_wrphase0_r;
    end
    v7ddrphy_wrphase_re <= csr_bankarray_csrbank2_wrphase0_re;
    csr_bankarray_sel_r <= csr_bankarray_sel;
    csr_bankarray_interface3_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank3_sel) begin
        case (csr_bankarray_interface3_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface3_bank_bus_dat_r <= csr_bankarray_csrbank3_out0_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank3_out0_re) begin
        leds_storage[7:0] <= csr_bankarray_csrbank3_out0_r;
    end
    leds_re <= csr_bankarray_csrbank3_out0_re;
    csr_bankarray_interface4_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank4_sel) begin
        case (csr_bankarray_interface4_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_dma_base1_w;
            end
            1'd1: begin
                csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_dma_base0_w;
            end
            2'd2: begin
                csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_dma_length0_w;
            end
            2'd3: begin
                csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_dma_enable0_w;
            end
            3'd4: begin
                csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_dma_done_w;
            end
            3'd5: begin
                csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_dma_loop0_w;
            end
            3'd6: begin
                csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_dma_offset_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank4_dma_base1_re) begin
        sdcard_block2mem_wishbonedmawriter_base_storage[63:32] <= csr_bankarray_csrbank4_dma_base1_r;
    end
    if (csr_bankarray_csrbank4_dma_base0_re) begin
        sdcard_block2mem_wishbonedmawriter_base_storage[31:0] <= csr_bankarray_csrbank4_dma_base0_r;
    end
    sdcard_block2mem_wishbonedmawriter_base_re <= csr_bankarray_csrbank4_dma_base0_re;
    if (csr_bankarray_csrbank4_dma_length0_re) begin
        sdcard_block2mem_wishbonedmawriter_length_storage[31:0] <= csr_bankarray_csrbank4_dma_length0_r;
    end
    sdcard_block2mem_wishbonedmawriter_length_re <= csr_bankarray_csrbank4_dma_length0_re;
    if (csr_bankarray_csrbank4_dma_enable0_re) begin
        sdcard_block2mem_wishbonedmawriter_enable_storage <= csr_bankarray_csrbank4_dma_enable0_r;
    end
    sdcard_block2mem_wishbonedmawriter_enable_re <= csr_bankarray_csrbank4_dma_enable0_re;
    sdcard_block2mem_wishbonedmawriter_done_re <= csr_bankarray_csrbank4_dma_done_re;
    if (csr_bankarray_csrbank4_dma_loop0_re) begin
        sdcard_block2mem_wishbonedmawriter_loop_storage <= csr_bankarray_csrbank4_dma_loop0_r;
    end
    sdcard_block2mem_wishbonedmawriter_loop_re <= csr_bankarray_csrbank4_dma_loop0_re;
    sdcard_block2mem_wishbonedmawriter_offset_re <= csr_bankarray_csrbank4_dma_offset_re;
    csr_bankarray_interface5_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank5_sel) begin
        case (csr_bankarray_interface5_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_cmd_argument0_w;
            end
            1'd1: begin
                csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_cmd_command0_w;
            end
            2'd2: begin
                csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_cmd_send0_w;
            end
            2'd3: begin
                csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_cmd_response3_w;
            end
            3'd4: begin
                csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_cmd_response2_w;
            end
            3'd5: begin
                csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_cmd_response1_w;
            end
            3'd6: begin
                csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_cmd_response0_w;
            end
            3'd7: begin
                csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_cmd_event_w;
            end
            4'd8: begin
                csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_data_event_w;
            end
            4'd9: begin
                csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_block_length0_w;
            end
            4'd10: begin
                csr_bankarray_interface5_bank_bus_dat_r <= csr_bankarray_csrbank5_block_count0_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank5_cmd_argument0_re) begin
        sdcard_core_cmd_argument_storage[31:0] <= csr_bankarray_csrbank5_cmd_argument0_r;
    end
    sdcard_core_cmd_argument_re <= csr_bankarray_csrbank5_cmd_argument0_re;
    if (csr_bankarray_csrbank5_cmd_command0_re) begin
        sdcard_core_cmd_command_storage[13:0] <= csr_bankarray_csrbank5_cmd_command0_r;
    end
    sdcard_core_cmd_command_re <= csr_bankarray_csrbank5_cmd_command0_re;
    if (csr_bankarray_csrbank5_cmd_send0_re) begin
        sdcard_core_cmd_send_storage <= csr_bankarray_csrbank5_cmd_send0_r;
    end
    sdcard_core_cmd_send_re <= csr_bankarray_csrbank5_cmd_send0_re;
    sdcard_core_cmd_response_re <= csr_bankarray_csrbank5_cmd_response0_re;
    sdcard_core_cmd_event_re <= csr_bankarray_csrbank5_cmd_event_re;
    sdcard_core_data_event_re <= csr_bankarray_csrbank5_data_event_re;
    if (csr_bankarray_csrbank5_block_length0_re) begin
        sdcard_core_block_length_storage[9:0] <= csr_bankarray_csrbank5_block_length0_r;
    end
    sdcard_core_block_length_re <= csr_bankarray_csrbank5_block_length0_re;
    if (csr_bankarray_csrbank5_block_count0_re) begin
        sdcard_core_block_count_storage[31:0] <= csr_bankarray_csrbank5_block_count0_r;
    end
    sdcard_core_block_count_re <= csr_bankarray_csrbank5_block_count0_re;
    csr_bankarray_interface6_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank6_sel) begin
        case (csr_bankarray_interface6_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface6_bank_bus_dat_r <= csr_bankarray_csrbank6_status_w;
            end
            1'd1: begin
                csr_bankarray_interface6_bank_bus_dat_r <= csr_bankarray_csrbank6_pending_w;
            end
            2'd2: begin
                csr_bankarray_interface6_bank_bus_dat_r <= csr_bankarray_csrbank6_enable0_w;
            end
        endcase
    end
    eventmanager_status_re <= csr_bankarray_csrbank6_status_re;
    if (csr_bankarray_csrbank6_pending_re) begin
        eventmanager_pending_r[3:0] <= csr_bankarray_csrbank6_pending_r;
    end
    eventmanager_pending_re <= csr_bankarray_csrbank6_pending_re;
    if (csr_bankarray_csrbank6_enable0_re) begin
        eventmanager_enable_storage[3:0] <= csr_bankarray_csrbank6_enable0_r;
    end
    eventmanager_enable_re <= csr_bankarray_csrbank6_enable0_re;
    csr_bankarray_interface7_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank7_sel) begin
        case (csr_bankarray_interface7_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface7_bank_bus_dat_r <= csr_bankarray_csrbank7_dma_base1_w;
            end
            1'd1: begin
                csr_bankarray_interface7_bank_bus_dat_r <= csr_bankarray_csrbank7_dma_base0_w;
            end
            2'd2: begin
                csr_bankarray_interface7_bank_bus_dat_r <= csr_bankarray_csrbank7_dma_length0_w;
            end
            2'd3: begin
                csr_bankarray_interface7_bank_bus_dat_r <= csr_bankarray_csrbank7_dma_enable0_w;
            end
            3'd4: begin
                csr_bankarray_interface7_bank_bus_dat_r <= csr_bankarray_csrbank7_dma_done_w;
            end
            3'd5: begin
                csr_bankarray_interface7_bank_bus_dat_r <= csr_bankarray_csrbank7_dma_loop0_w;
            end
            3'd6: begin
                csr_bankarray_interface7_bank_bus_dat_r <= csr_bankarray_csrbank7_dma_offset_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank7_dma_base1_re) begin
        sdcard_mem2block_dma_base_storage[63:32] <= csr_bankarray_csrbank7_dma_base1_r;
    end
    if (csr_bankarray_csrbank7_dma_base0_re) begin
        sdcard_mem2block_dma_base_storage[31:0] <= csr_bankarray_csrbank7_dma_base0_r;
    end
    sdcard_mem2block_dma_base_re <= csr_bankarray_csrbank7_dma_base0_re;
    if (csr_bankarray_csrbank7_dma_length0_re) begin
        sdcard_mem2block_dma_length_storage[31:0] <= csr_bankarray_csrbank7_dma_length0_r;
    end
    sdcard_mem2block_dma_length_re <= csr_bankarray_csrbank7_dma_length0_re;
    if (csr_bankarray_csrbank7_dma_enable0_re) begin
        sdcard_mem2block_dma_enable_storage <= csr_bankarray_csrbank7_dma_enable0_r;
    end
    sdcard_mem2block_dma_enable_re <= csr_bankarray_csrbank7_dma_enable0_re;
    sdcard_mem2block_dma_done_re <= csr_bankarray_csrbank7_dma_done_re;
    if (csr_bankarray_csrbank7_dma_loop0_re) begin
        sdcard_mem2block_dma_loop_storage <= csr_bankarray_csrbank7_dma_loop0_r;
    end
    sdcard_mem2block_dma_loop_re <= csr_bankarray_csrbank7_dma_loop0_re;
    sdcard_mem2block_dma_offset_re <= csr_bankarray_csrbank7_dma_offset_re;
    csr_bankarray_interface8_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank8_sel) begin
        case (csr_bankarray_interface8_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface8_bank_bus_dat_r <= csr_bankarray_csrbank8_card_detect_w;
            end
            1'd1: begin
                csr_bankarray_interface8_bank_bus_dat_r <= csr_bankarray_csrbank8_clocker_divider0_w;
            end
            2'd2: begin
                csr_bankarray_interface8_bank_bus_dat_r <= init_initialize_w;
            end
            2'd3: begin
                csr_bankarray_interface8_bank_bus_dat_r <= csr_bankarray_csrbank8_dataw_status_w;
            end
        endcase
    end
    card_detect_re <= csr_bankarray_csrbank8_card_detect_re;
    if (csr_bankarray_csrbank8_clocker_divider0_re) begin
        clocker_storage[8:0] <= csr_bankarray_csrbank8_clocker_divider0_r;
    end
    clocker_re <= csr_bankarray_csrbank8_clocker_divider0_re;
    dataw_re <= csr_bankarray_csrbank8_dataw_status_re;
    csr_bankarray_interface9_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank9_sel) begin
        case (csr_bankarray_interface9_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface9_bank_bus_dat_r <= csr_bankarray_csrbank9_dfii_control0_w;
            end
            1'd1: begin
                csr_bankarray_interface9_bank_bus_dat_r <= csr_bankarray_csrbank9_dfii_pi0_command0_w;
            end
            2'd2: begin
                csr_bankarray_interface9_bank_bus_dat_r <= soclinux_phaseinjector0_command_issue_w;
            end
            2'd3: begin
                csr_bankarray_interface9_bank_bus_dat_r <= csr_bankarray_csrbank9_dfii_pi0_address0_w;
            end
            3'd4: begin
                csr_bankarray_interface9_bank_bus_dat_r <= csr_bankarray_csrbank9_dfii_pi0_baddress0_w;
            end
            3'd5: begin
                csr_bankarray_interface9_bank_bus_dat_r <= csr_bankarray_csrbank9_dfii_pi0_wrdata1_w;
            end
            3'd6: begin
                csr_bankarray_interface9_bank_bus_dat_r <= csr_bankarray_csrbank9_dfii_pi0_wrdata0_w;
            end
            3'd7: begin
                csr_bankarray_interface9_bank_bus_dat_r <= csr_bankarray_csrbank9_dfii_pi0_rddata1_w;
            end
            4'd8: begin
                csr_bankarray_interface9_bank_bus_dat_r <= csr_bankarray_csrbank9_dfii_pi0_rddata0_w;
            end
            4'd9: begin
                csr_bankarray_interface9_bank_bus_dat_r <= csr_bankarray_csrbank9_dfii_pi1_command0_w;
            end
            4'd10: begin
                csr_bankarray_interface9_bank_bus_dat_r <= soclinux_phaseinjector1_command_issue_w;
            end
            4'd11: begin
                csr_bankarray_interface9_bank_bus_dat_r <= csr_bankarray_csrbank9_dfii_pi1_address0_w;
            end
            4'd12: begin
                csr_bankarray_interface9_bank_bus_dat_r <= csr_bankarray_csrbank9_dfii_pi1_baddress0_w;
            end
            4'd13: begin
                csr_bankarray_interface9_bank_bus_dat_r <= csr_bankarray_csrbank9_dfii_pi1_wrdata1_w;
            end
            4'd14: begin
                csr_bankarray_interface9_bank_bus_dat_r <= csr_bankarray_csrbank9_dfii_pi1_wrdata0_w;
            end
            4'd15: begin
                csr_bankarray_interface9_bank_bus_dat_r <= csr_bankarray_csrbank9_dfii_pi1_rddata1_w;
            end
            5'd16: begin
                csr_bankarray_interface9_bank_bus_dat_r <= csr_bankarray_csrbank9_dfii_pi1_rddata0_w;
            end
            5'd17: begin
                csr_bankarray_interface9_bank_bus_dat_r <= csr_bankarray_csrbank9_dfii_pi2_command0_w;
            end
            5'd18: begin
                csr_bankarray_interface9_bank_bus_dat_r <= soclinux_phaseinjector2_command_issue_w;
            end
            5'd19: begin
                csr_bankarray_interface9_bank_bus_dat_r <= csr_bankarray_csrbank9_dfii_pi2_address0_w;
            end
            5'd20: begin
                csr_bankarray_interface9_bank_bus_dat_r <= csr_bankarray_csrbank9_dfii_pi2_baddress0_w;
            end
            5'd21: begin
                csr_bankarray_interface9_bank_bus_dat_r <= csr_bankarray_csrbank9_dfii_pi2_wrdata1_w;
            end
            5'd22: begin
                csr_bankarray_interface9_bank_bus_dat_r <= csr_bankarray_csrbank9_dfii_pi2_wrdata0_w;
            end
            5'd23: begin
                csr_bankarray_interface9_bank_bus_dat_r <= csr_bankarray_csrbank9_dfii_pi2_rddata1_w;
            end
            5'd24: begin
                csr_bankarray_interface9_bank_bus_dat_r <= csr_bankarray_csrbank9_dfii_pi2_rddata0_w;
            end
            5'd25: begin
                csr_bankarray_interface9_bank_bus_dat_r <= csr_bankarray_csrbank9_dfii_pi3_command0_w;
            end
            5'd26: begin
                csr_bankarray_interface9_bank_bus_dat_r <= soclinux_phaseinjector3_command_issue_w;
            end
            5'd27: begin
                csr_bankarray_interface9_bank_bus_dat_r <= csr_bankarray_csrbank9_dfii_pi3_address0_w;
            end
            5'd28: begin
                csr_bankarray_interface9_bank_bus_dat_r <= csr_bankarray_csrbank9_dfii_pi3_baddress0_w;
            end
            5'd29: begin
                csr_bankarray_interface9_bank_bus_dat_r <= csr_bankarray_csrbank9_dfii_pi3_wrdata1_w;
            end
            5'd30: begin
                csr_bankarray_interface9_bank_bus_dat_r <= csr_bankarray_csrbank9_dfii_pi3_wrdata0_w;
            end
            5'd31: begin
                csr_bankarray_interface9_bank_bus_dat_r <= csr_bankarray_csrbank9_dfii_pi3_rddata1_w;
            end
            6'd32: begin
                csr_bankarray_interface9_bank_bus_dat_r <= csr_bankarray_csrbank9_dfii_pi3_rddata0_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank9_dfii_control0_re) begin
        soclinux_storage[3:0] <= csr_bankarray_csrbank9_dfii_control0_r;
    end
    soclinux_re <= csr_bankarray_csrbank9_dfii_control0_re;
    if (csr_bankarray_csrbank9_dfii_pi0_command0_re) begin
        soclinux_phaseinjector0_command_storage[7:0] <= csr_bankarray_csrbank9_dfii_pi0_command0_r;
    end
    soclinux_phaseinjector0_command_re <= csr_bankarray_csrbank9_dfii_pi0_command0_re;
    if (csr_bankarray_csrbank9_dfii_pi0_address0_re) begin
        soclinux_phaseinjector0_address_storage[13:0] <= csr_bankarray_csrbank9_dfii_pi0_address0_r;
    end
    soclinux_phaseinjector0_address_re <= csr_bankarray_csrbank9_dfii_pi0_address0_re;
    if (csr_bankarray_csrbank9_dfii_pi0_baddress0_re) begin
        soclinux_phaseinjector0_baddress_storage[2:0] <= csr_bankarray_csrbank9_dfii_pi0_baddress0_r;
    end
    soclinux_phaseinjector0_baddress_re <= csr_bankarray_csrbank9_dfii_pi0_baddress0_re;
    if (csr_bankarray_csrbank9_dfii_pi0_wrdata1_re) begin
        soclinux_phaseinjector0_wrdata_storage[63:32] <= csr_bankarray_csrbank9_dfii_pi0_wrdata1_r;
    end
    if (csr_bankarray_csrbank9_dfii_pi0_wrdata0_re) begin
        soclinux_phaseinjector0_wrdata_storage[31:0] <= csr_bankarray_csrbank9_dfii_pi0_wrdata0_r;
    end
    soclinux_phaseinjector0_wrdata_re <= csr_bankarray_csrbank9_dfii_pi0_wrdata0_re;
    soclinux_phaseinjector0_rddata_re <= csr_bankarray_csrbank9_dfii_pi0_rddata0_re;
    if (csr_bankarray_csrbank9_dfii_pi1_command0_re) begin
        soclinux_phaseinjector1_command_storage[7:0] <= csr_bankarray_csrbank9_dfii_pi1_command0_r;
    end
    soclinux_phaseinjector1_command_re <= csr_bankarray_csrbank9_dfii_pi1_command0_re;
    if (csr_bankarray_csrbank9_dfii_pi1_address0_re) begin
        soclinux_phaseinjector1_address_storage[13:0] <= csr_bankarray_csrbank9_dfii_pi1_address0_r;
    end
    soclinux_phaseinjector1_address_re <= csr_bankarray_csrbank9_dfii_pi1_address0_re;
    if (csr_bankarray_csrbank9_dfii_pi1_baddress0_re) begin
        soclinux_phaseinjector1_baddress_storage[2:0] <= csr_bankarray_csrbank9_dfii_pi1_baddress0_r;
    end
    soclinux_phaseinjector1_baddress_re <= csr_bankarray_csrbank9_dfii_pi1_baddress0_re;
    if (csr_bankarray_csrbank9_dfii_pi1_wrdata1_re) begin
        soclinux_phaseinjector1_wrdata_storage[63:32] <= csr_bankarray_csrbank9_dfii_pi1_wrdata1_r;
    end
    if (csr_bankarray_csrbank9_dfii_pi1_wrdata0_re) begin
        soclinux_phaseinjector1_wrdata_storage[31:0] <= csr_bankarray_csrbank9_dfii_pi1_wrdata0_r;
    end
    soclinux_phaseinjector1_wrdata_re <= csr_bankarray_csrbank9_dfii_pi1_wrdata0_re;
    soclinux_phaseinjector1_rddata_re <= csr_bankarray_csrbank9_dfii_pi1_rddata0_re;
    if (csr_bankarray_csrbank9_dfii_pi2_command0_re) begin
        soclinux_phaseinjector2_command_storage[7:0] <= csr_bankarray_csrbank9_dfii_pi2_command0_r;
    end
    soclinux_phaseinjector2_command_re <= csr_bankarray_csrbank9_dfii_pi2_command0_re;
    if (csr_bankarray_csrbank9_dfii_pi2_address0_re) begin
        soclinux_phaseinjector2_address_storage[13:0] <= csr_bankarray_csrbank9_dfii_pi2_address0_r;
    end
    soclinux_phaseinjector2_address_re <= csr_bankarray_csrbank9_dfii_pi2_address0_re;
    if (csr_bankarray_csrbank9_dfii_pi2_baddress0_re) begin
        soclinux_phaseinjector2_baddress_storage[2:0] <= csr_bankarray_csrbank9_dfii_pi2_baddress0_r;
    end
    soclinux_phaseinjector2_baddress_re <= csr_bankarray_csrbank9_dfii_pi2_baddress0_re;
    if (csr_bankarray_csrbank9_dfii_pi2_wrdata1_re) begin
        soclinux_phaseinjector2_wrdata_storage[63:32] <= csr_bankarray_csrbank9_dfii_pi2_wrdata1_r;
    end
    if (csr_bankarray_csrbank9_dfii_pi2_wrdata0_re) begin
        soclinux_phaseinjector2_wrdata_storage[31:0] <= csr_bankarray_csrbank9_dfii_pi2_wrdata0_r;
    end
    soclinux_phaseinjector2_wrdata_re <= csr_bankarray_csrbank9_dfii_pi2_wrdata0_re;
    soclinux_phaseinjector2_rddata_re <= csr_bankarray_csrbank9_dfii_pi2_rddata0_re;
    if (csr_bankarray_csrbank9_dfii_pi3_command0_re) begin
        soclinux_phaseinjector3_command_storage[7:0] <= csr_bankarray_csrbank9_dfii_pi3_command0_r;
    end
    soclinux_phaseinjector3_command_re <= csr_bankarray_csrbank9_dfii_pi3_command0_re;
    if (csr_bankarray_csrbank9_dfii_pi3_address0_re) begin
        soclinux_phaseinjector3_address_storage[13:0] <= csr_bankarray_csrbank9_dfii_pi3_address0_r;
    end
    soclinux_phaseinjector3_address_re <= csr_bankarray_csrbank9_dfii_pi3_address0_re;
    if (csr_bankarray_csrbank9_dfii_pi3_baddress0_re) begin
        soclinux_phaseinjector3_baddress_storage[2:0] <= csr_bankarray_csrbank9_dfii_pi3_baddress0_r;
    end
    soclinux_phaseinjector3_baddress_re <= csr_bankarray_csrbank9_dfii_pi3_baddress0_re;
    if (csr_bankarray_csrbank9_dfii_pi3_wrdata1_re) begin
        soclinux_phaseinjector3_wrdata_storage[63:32] <= csr_bankarray_csrbank9_dfii_pi3_wrdata1_r;
    end
    if (csr_bankarray_csrbank9_dfii_pi3_wrdata0_re) begin
        soclinux_phaseinjector3_wrdata_storage[31:0] <= csr_bankarray_csrbank9_dfii_pi3_wrdata0_r;
    end
    soclinux_phaseinjector3_wrdata_re <= csr_bankarray_csrbank9_dfii_pi3_wrdata0_re;
    soclinux_phaseinjector3_rddata_re <= csr_bankarray_csrbank9_dfii_pi3_rddata0_re;
    csr_bankarray_interface10_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank10_sel) begin
        case (csr_bankarray_interface10_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_load0_w;
            end
            1'd1: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_reload0_w;
            end
            2'd2: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_en0_w;
            end
            2'd3: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_update_value0_w;
            end
            3'd4: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_value_w;
            end
            3'd5: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_ev_status_w;
            end
            3'd6: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_ev_pending_w;
            end
            3'd7: begin
                csr_bankarray_interface10_bank_bus_dat_r <= csr_bankarray_csrbank10_ev_enable0_w;
            end
        endcase
    end
    if (csr_bankarray_csrbank10_load0_re) begin
        soclinux_timer_load_storage[31:0] <= csr_bankarray_csrbank10_load0_r;
    end
    soclinux_timer_load_re <= csr_bankarray_csrbank10_load0_re;
    if (csr_bankarray_csrbank10_reload0_re) begin
        soclinux_timer_reload_storage[31:0] <= csr_bankarray_csrbank10_reload0_r;
    end
    soclinux_timer_reload_re <= csr_bankarray_csrbank10_reload0_re;
    if (csr_bankarray_csrbank10_en0_re) begin
        soclinux_timer_en_storage <= csr_bankarray_csrbank10_en0_r;
    end
    soclinux_timer_en_re <= csr_bankarray_csrbank10_en0_re;
    if (csr_bankarray_csrbank10_update_value0_re) begin
        soclinux_timer_update_value_storage <= csr_bankarray_csrbank10_update_value0_r;
    end
    soclinux_timer_update_value_re <= csr_bankarray_csrbank10_update_value0_re;
    soclinux_timer_value_re <= csr_bankarray_csrbank10_value_re;
    soclinux_timer_status_re <= csr_bankarray_csrbank10_ev_status_re;
    if (csr_bankarray_csrbank10_ev_pending_re) begin
        soclinux_timer_pending_r <= csr_bankarray_csrbank10_ev_pending_r;
    end
    soclinux_timer_pending_re <= csr_bankarray_csrbank10_ev_pending_re;
    if (csr_bankarray_csrbank10_ev_enable0_re) begin
        soclinux_timer_enable_storage <= csr_bankarray_csrbank10_ev_enable0_r;
    end
    soclinux_timer_enable_re <= csr_bankarray_csrbank10_ev_enable0_re;
    csr_bankarray_interface11_bank_bus_dat_r <= 1'd0;
    if (csr_bankarray_csrbank11_sel) begin
        case (csr_bankarray_interface11_bank_bus_adr[8:0])
            1'd0: begin
                csr_bankarray_interface11_bank_bus_dat_r <= soclinux_uart_rxtx_w;
            end
            1'd1: begin
                csr_bankarray_interface11_bank_bus_dat_r <= csr_bankarray_csrbank11_txfull_w;
            end
            2'd2: begin
                csr_bankarray_interface11_bank_bus_dat_r <= csr_bankarray_csrbank11_rxempty_w;
            end
            2'd3: begin
                csr_bankarray_interface11_bank_bus_dat_r <= csr_bankarray_csrbank11_ev_status_w;
            end
            3'd4: begin
                csr_bankarray_interface11_bank_bus_dat_r <= csr_bankarray_csrbank11_ev_pending_w;
            end
            3'd5: begin
                csr_bankarray_interface11_bank_bus_dat_r <= csr_bankarray_csrbank11_ev_enable0_w;
            end
            3'd6: begin
                csr_bankarray_interface11_bank_bus_dat_r <= csr_bankarray_csrbank11_txempty_w;
            end
            3'd7: begin
                csr_bankarray_interface11_bank_bus_dat_r <= csr_bankarray_csrbank11_rxfull_w;
            end
        endcase
    end
    soclinux_uart_txfull_re <= csr_bankarray_csrbank11_txfull_re;
    soclinux_uart_rxempty_re <= csr_bankarray_csrbank11_rxempty_re;
    soclinux_uart_status_re <= csr_bankarray_csrbank11_ev_status_re;
    if (csr_bankarray_csrbank11_ev_pending_re) begin
        soclinux_uart_pending_r[1:0] <= csr_bankarray_csrbank11_ev_pending_r;
    end
    soclinux_uart_pending_re <= csr_bankarray_csrbank11_ev_pending_re;
    if (csr_bankarray_csrbank11_ev_enable0_re) begin
        soclinux_uart_enable_storage[1:0] <= csr_bankarray_csrbank11_ev_enable0_r;
    end
    soclinux_uart_enable_re <= csr_bankarray_csrbank11_ev_enable0_re;
    soclinux_uart_txempty_re <= csr_bankarray_csrbank11_txempty_re;
    soclinux_uart_rxfull_re <= csr_bankarray_csrbank11_rxfull_re;
    if (sys_rst) begin
        soclinux_reset_storage <= 2'd0;
        soclinux_reset_re <= 1'd0;
        soclinux_scratch_storage <= 32'd305419896;
        soclinux_scratch_re <= 1'd0;
        soclinux_bus_errors_re <= 1'd0;
        soclinux_bus_errors <= 32'd0;
        soclinux_soclinux_ram_bus_ack <= 1'd0;
        soclinux_ram_bus_ram_bus_ack <= 1'd0;
        serial_tx <= 1'd1;
        soclinux_tx_tick <= 1'd0;
        soclinux_rx_tick <= 1'd0;
        soclinux_rx_rx_d <= 1'd0;
        soclinux_uart_txfull_re <= 1'd0;
        soclinux_uart_rxempty_re <= 1'd0;
        soclinux_uart_tx_pending <= 1'd0;
        soclinux_uart_tx_trigger_d <= 1'd0;
        soclinux_uart_rx_pending <= 1'd0;
        soclinux_uart_rx_trigger_d <= 1'd0;
        soclinux_uart_status_re <= 1'd0;
        soclinux_uart_pending_re <= 1'd0;
        soclinux_uart_pending_r <= 2'd0;
        soclinux_uart_enable_storage <= 2'd0;
        soclinux_uart_enable_re <= 1'd0;
        soclinux_uart_txempty_re <= 1'd0;
        soclinux_uart_rxfull_re <= 1'd0;
        soclinux_uart_tx_fifo_readable <= 1'd0;
        soclinux_uart_tx_fifo_level0 <= 5'd0;
        soclinux_uart_tx_fifo_produce <= 4'd0;
        soclinux_uart_tx_fifo_consume <= 4'd0;
        soclinux_uart_rx_fifo_readable <= 1'd0;
        soclinux_uart_rx_fifo_level0 <= 5'd0;
        soclinux_uart_rx_fifo_produce <= 4'd0;
        soclinux_uart_rx_fifo_consume <= 4'd0;
        soclinux_timer_load_storage <= 32'd0;
        soclinux_timer_load_re <= 1'd0;
        soclinux_timer_reload_storage <= 32'd0;
        soclinux_timer_reload_re <= 1'd0;
        soclinux_timer_en_storage <= 1'd0;
        soclinux_timer_en_re <= 1'd0;
        soclinux_timer_update_value_storage <= 1'd0;
        soclinux_timer_update_value_re <= 1'd0;
        soclinux_timer_value_status <= 32'd0;
        soclinux_timer_value_re <= 1'd0;
        soclinux_timer_zero_pending <= 1'd0;
        soclinux_timer_zero_trigger_d <= 1'd0;
        soclinux_timer_status_re <= 1'd0;
        soclinux_timer_pending_re <= 1'd0;
        soclinux_timer_pending_r <= 1'd0;
        soclinux_timer_enable_storage <= 1'd0;
        soclinux_timer_enable_re <= 1'd0;
        soclinux_timer_value <= 32'd0;
        v7ddrphy_rst_storage <= 1'd0;
        v7ddrphy_rst_re <= 1'd0;
        v7ddrphy_dly_sel_storage <= 4'd0;
        v7ddrphy_dly_sel_re <= 1'd0;
        v7ddrphy_half_sys8x_taps_storage <= 5'd6;
        v7ddrphy_half_sys8x_taps_re <= 1'd0;
        v7ddrphy_wlevel_en_storage <= 1'd0;
        v7ddrphy_wlevel_en_re <= 1'd0;
        v7ddrphy_rdphase_storage <= 2'd1;
        v7ddrphy_rdphase_re <= 1'd0;
        v7ddrphy_wrphase_storage <= 2'd2;
        v7ddrphy_wrphase_re <= 1'd0;
        v7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline0 <= 1'd0;
        v7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline1 <= 1'd0;
        v7ddrphy_bitslip0_value0 <= 3'd7;
        v7ddrphy_bitslip1_value0 <= 3'd7;
        v7ddrphy_bitslip2_value0 <= 3'd7;
        v7ddrphy_bitslip3_value0 <= 3'd7;
        v7ddrphy_bitslip0_value1 <= 3'd7;
        v7ddrphy_bitslip1_value1 <= 3'd7;
        v7ddrphy_bitslip2_value1 <= 3'd7;
        v7ddrphy_bitslip3_value1 <= 3'd7;
        v7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline0 <= 1'd0;
        v7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1 <= 1'd0;
        v7ddrphy_bitslip0_value2 <= 3'd7;
        v7ddrphy_bitslip0_value3 <= 3'd7;
        v7ddrphy_bitslip1_value2 <= 3'd7;
        v7ddrphy_bitslip1_value3 <= 3'd7;
        v7ddrphy_bitslip2_value2 <= 3'd7;
        v7ddrphy_bitslip2_value3 <= 3'd7;
        v7ddrphy_bitslip3_value2 <= 3'd7;
        v7ddrphy_bitslip3_value3 <= 3'd7;
        v7ddrphy_bitslip4_value0 <= 3'd7;
        v7ddrphy_bitslip4_value1 <= 3'd7;
        v7ddrphy_bitslip5_value0 <= 3'd7;
        v7ddrphy_bitslip5_value1 <= 3'd7;
        v7ddrphy_bitslip6_value0 <= 3'd7;
        v7ddrphy_bitslip6_value1 <= 3'd7;
        v7ddrphy_bitslip7_value0 <= 3'd7;
        v7ddrphy_bitslip7_value1 <= 3'd7;
        v7ddrphy_bitslip8_value0 <= 3'd7;
        v7ddrphy_bitslip8_value1 <= 3'd7;
        v7ddrphy_bitslip9_value0 <= 3'd7;
        v7ddrphy_bitslip9_value1 <= 3'd7;
        v7ddrphy_bitslip10_value0 <= 3'd7;
        v7ddrphy_bitslip10_value1 <= 3'd7;
        v7ddrphy_bitslip11_value0 <= 3'd7;
        v7ddrphy_bitslip11_value1 <= 3'd7;
        v7ddrphy_bitslip12_value0 <= 3'd7;
        v7ddrphy_bitslip12_value1 <= 3'd7;
        v7ddrphy_bitslip13_value0 <= 3'd7;
        v7ddrphy_bitslip13_value1 <= 3'd7;
        v7ddrphy_bitslip14_value0 <= 3'd7;
        v7ddrphy_bitslip14_value1 <= 3'd7;
        v7ddrphy_bitslip15_value0 <= 3'd7;
        v7ddrphy_bitslip15_value1 <= 3'd7;
        v7ddrphy_bitslip16_value0 <= 3'd7;
        v7ddrphy_bitslip16_value1 <= 3'd7;
        v7ddrphy_bitslip17_value0 <= 3'd7;
        v7ddrphy_bitslip17_value1 <= 3'd7;
        v7ddrphy_bitslip18_value0 <= 3'd7;
        v7ddrphy_bitslip18_value1 <= 3'd7;
        v7ddrphy_bitslip19_value0 <= 3'd7;
        v7ddrphy_bitslip19_value1 <= 3'd7;
        v7ddrphy_bitslip20_value0 <= 3'd7;
        v7ddrphy_bitslip20_value1 <= 3'd7;
        v7ddrphy_bitslip21_value0 <= 3'd7;
        v7ddrphy_bitslip21_value1 <= 3'd7;
        v7ddrphy_bitslip22_value0 <= 3'd7;
        v7ddrphy_bitslip22_value1 <= 3'd7;
        v7ddrphy_bitslip23_value0 <= 3'd7;
        v7ddrphy_bitslip23_value1 <= 3'd7;
        v7ddrphy_bitslip24_value0 <= 3'd7;
        v7ddrphy_bitslip24_value1 <= 3'd7;
        v7ddrphy_bitslip25_value0 <= 3'd7;
        v7ddrphy_bitslip25_value1 <= 3'd7;
        v7ddrphy_bitslip26_value0 <= 3'd7;
        v7ddrphy_bitslip26_value1 <= 3'd7;
        v7ddrphy_bitslip27_value0 <= 3'd7;
        v7ddrphy_bitslip27_value1 <= 3'd7;
        v7ddrphy_bitslip28_value0 <= 3'd7;
        v7ddrphy_bitslip28_value1 <= 3'd7;
        v7ddrphy_bitslip29_value0 <= 3'd7;
        v7ddrphy_bitslip29_value1 <= 3'd7;
        v7ddrphy_bitslip30_value0 <= 3'd7;
        v7ddrphy_bitslip30_value1 <= 3'd7;
        v7ddrphy_bitslip31_value0 <= 3'd7;
        v7ddrphy_bitslip31_value1 <= 3'd7;
        v7ddrphy_rddata_en_tappeddelayline0 <= 1'd0;
        v7ddrphy_rddata_en_tappeddelayline1 <= 1'd0;
        v7ddrphy_rddata_en_tappeddelayline2 <= 1'd0;
        v7ddrphy_rddata_en_tappeddelayline3 <= 1'd0;
        v7ddrphy_rddata_en_tappeddelayline4 <= 1'd0;
        v7ddrphy_rddata_en_tappeddelayline5 <= 1'd0;
        v7ddrphy_rddata_en_tappeddelayline6 <= 1'd0;
        v7ddrphy_rddata_en_tappeddelayline7 <= 1'd0;
        v7ddrphy_wrdata_en_tappeddelayline0 <= 1'd0;
        v7ddrphy_wrdata_en_tappeddelayline1 <= 1'd0;
        v7ddrphy_wrdata_en_tappeddelayline2 <= 1'd0;
        soclinux_storage <= 4'd1;
        soclinux_re <= 1'd0;
        soclinux_phaseinjector0_command_storage <= 8'd0;
        soclinux_phaseinjector0_command_re <= 1'd0;
        soclinux_phaseinjector0_address_re <= 1'd0;
        soclinux_phaseinjector0_baddress_re <= 1'd0;
        soclinux_phaseinjector0_wrdata_re <= 1'd0;
        soclinux_phaseinjector0_rddata_status <= 64'd0;
        soclinux_phaseinjector0_rddata_re <= 1'd0;
        soclinux_phaseinjector1_command_storage <= 8'd0;
        soclinux_phaseinjector1_command_re <= 1'd0;
        soclinux_phaseinjector1_address_re <= 1'd0;
        soclinux_phaseinjector1_baddress_re <= 1'd0;
        soclinux_phaseinjector1_wrdata_re <= 1'd0;
        soclinux_phaseinjector1_rddata_status <= 64'd0;
        soclinux_phaseinjector1_rddata_re <= 1'd0;
        soclinux_phaseinjector2_command_storage <= 8'd0;
        soclinux_phaseinjector2_command_re <= 1'd0;
        soclinux_phaseinjector2_address_re <= 1'd0;
        soclinux_phaseinjector2_baddress_re <= 1'd0;
        soclinux_phaseinjector2_wrdata_re <= 1'd0;
        soclinux_phaseinjector2_rddata_status <= 64'd0;
        soclinux_phaseinjector2_rddata_re <= 1'd0;
        soclinux_phaseinjector3_command_storage <= 8'd0;
        soclinux_phaseinjector3_command_re <= 1'd0;
        soclinux_phaseinjector3_address_re <= 1'd0;
        soclinux_phaseinjector3_baddress_re <= 1'd0;
        soclinux_phaseinjector3_wrdata_re <= 1'd0;
        soclinux_phaseinjector3_rddata_status <= 64'd0;
        soclinux_phaseinjector3_rddata_re <= 1'd0;
        soclinux_dfi_p0_address <= 14'd0;
        soclinux_dfi_p0_bank <= 3'd0;
        soclinux_dfi_p0_cas_n <= 1'd1;
        soclinux_dfi_p0_cs_n <= 1'd1;
        soclinux_dfi_p0_ras_n <= 1'd1;
        soclinux_dfi_p0_we_n <= 1'd1;
        soclinux_dfi_p0_wrdata_en <= 1'd0;
        soclinux_dfi_p0_rddata_en <= 1'd0;
        soclinux_dfi_p1_address <= 14'd0;
        soclinux_dfi_p1_bank <= 3'd0;
        soclinux_dfi_p1_cas_n <= 1'd1;
        soclinux_dfi_p1_cs_n <= 1'd1;
        soclinux_dfi_p1_ras_n <= 1'd1;
        soclinux_dfi_p1_we_n <= 1'd1;
        soclinux_dfi_p1_wrdata_en <= 1'd0;
        soclinux_dfi_p1_rddata_en <= 1'd0;
        soclinux_dfi_p2_address <= 14'd0;
        soclinux_dfi_p2_bank <= 3'd0;
        soclinux_dfi_p2_cas_n <= 1'd1;
        soclinux_dfi_p2_cs_n <= 1'd1;
        soclinux_dfi_p2_ras_n <= 1'd1;
        soclinux_dfi_p2_we_n <= 1'd1;
        soclinux_dfi_p2_wrdata_en <= 1'd0;
        soclinux_dfi_p2_rddata_en <= 1'd0;
        soclinux_dfi_p3_address <= 14'd0;
        soclinux_dfi_p3_bank <= 3'd0;
        soclinux_dfi_p3_cas_n <= 1'd1;
        soclinux_dfi_p3_cs_n <= 1'd1;
        soclinux_dfi_p3_ras_n <= 1'd1;
        soclinux_dfi_p3_we_n <= 1'd1;
        soclinux_dfi_p3_wrdata_en <= 1'd0;
        soclinux_dfi_p3_rddata_en <= 1'd0;
        soclinux_cmd_payload_a <= 14'd0;
        soclinux_cmd_payload_ba <= 3'd0;
        soclinux_cmd_payload_cas <= 1'd0;
        soclinux_cmd_payload_ras <= 1'd0;
        soclinux_cmd_payload_we <= 1'd0;
        soclinux_timer_count1 <= 10'd976;
        soclinux_postponer_req_o <= 1'd0;
        soclinux_postponer_count <= 1'd0;
        soclinux_sequencer_done1 <= 1'd0;
        soclinux_sequencer_counter <= 5'd0;
        soclinux_sequencer_count <= 1'd0;
        soclinux_zqcs_timer_count1 <= 27'd124999999;
        soclinux_zqcs_executer_done <= 1'd0;
        soclinux_zqcs_executer_counter <= 5'd0;
        soclinux_bankmachine0_level <= 4'd0;
        soclinux_bankmachine0_produce <= 3'd0;
        soclinux_bankmachine0_consume <= 3'd0;
        soclinux_bankmachine0_pipe_valid_source_valid <= 1'd0;
        soclinux_bankmachine0_pipe_valid_source_payload_we <= 1'd0;
        soclinux_bankmachine0_pipe_valid_source_payload_addr <= 21'd0;
        soclinux_bankmachine0_row <= 14'd0;
        soclinux_bankmachine0_row_opened <= 1'd0;
        soclinux_bankmachine0_twtpcon_ready <= 1'd0;
        soclinux_bankmachine0_twtpcon_count <= 3'd0;
        soclinux_bankmachine0_trccon_ready <= 1'd0;
        soclinux_bankmachine0_trccon_count <= 3'd0;
        soclinux_bankmachine0_trascon_ready <= 1'd0;
        soclinux_bankmachine0_trascon_count <= 3'd0;
        soclinux_bankmachine1_level <= 4'd0;
        soclinux_bankmachine1_produce <= 3'd0;
        soclinux_bankmachine1_consume <= 3'd0;
        soclinux_bankmachine1_pipe_valid_source_valid <= 1'd0;
        soclinux_bankmachine1_pipe_valid_source_payload_we <= 1'd0;
        soclinux_bankmachine1_pipe_valid_source_payload_addr <= 21'd0;
        soclinux_bankmachine1_row <= 14'd0;
        soclinux_bankmachine1_row_opened <= 1'd0;
        soclinux_bankmachine1_twtpcon_ready <= 1'd0;
        soclinux_bankmachine1_twtpcon_count <= 3'd0;
        soclinux_bankmachine1_trccon_ready <= 1'd0;
        soclinux_bankmachine1_trccon_count <= 3'd0;
        soclinux_bankmachine1_trascon_ready <= 1'd0;
        soclinux_bankmachine1_trascon_count <= 3'd0;
        soclinux_bankmachine2_level <= 4'd0;
        soclinux_bankmachine2_produce <= 3'd0;
        soclinux_bankmachine2_consume <= 3'd0;
        soclinux_bankmachine2_pipe_valid_source_valid <= 1'd0;
        soclinux_bankmachine2_pipe_valid_source_payload_we <= 1'd0;
        soclinux_bankmachine2_pipe_valid_source_payload_addr <= 21'd0;
        soclinux_bankmachine2_row <= 14'd0;
        soclinux_bankmachine2_row_opened <= 1'd0;
        soclinux_bankmachine2_twtpcon_ready <= 1'd0;
        soclinux_bankmachine2_twtpcon_count <= 3'd0;
        soclinux_bankmachine2_trccon_ready <= 1'd0;
        soclinux_bankmachine2_trccon_count <= 3'd0;
        soclinux_bankmachine2_trascon_ready <= 1'd0;
        soclinux_bankmachine2_trascon_count <= 3'd0;
        soclinux_bankmachine3_level <= 4'd0;
        soclinux_bankmachine3_produce <= 3'd0;
        soclinux_bankmachine3_consume <= 3'd0;
        soclinux_bankmachine3_pipe_valid_source_valid <= 1'd0;
        soclinux_bankmachine3_pipe_valid_source_payload_we <= 1'd0;
        soclinux_bankmachine3_pipe_valid_source_payload_addr <= 21'd0;
        soclinux_bankmachine3_row <= 14'd0;
        soclinux_bankmachine3_row_opened <= 1'd0;
        soclinux_bankmachine3_twtpcon_ready <= 1'd0;
        soclinux_bankmachine3_twtpcon_count <= 3'd0;
        soclinux_bankmachine3_trccon_ready <= 1'd0;
        soclinux_bankmachine3_trccon_count <= 3'd0;
        soclinux_bankmachine3_trascon_ready <= 1'd0;
        soclinux_bankmachine3_trascon_count <= 3'd0;
        soclinux_bankmachine4_level <= 4'd0;
        soclinux_bankmachine4_produce <= 3'd0;
        soclinux_bankmachine4_consume <= 3'd0;
        soclinux_bankmachine4_pipe_valid_source_valid <= 1'd0;
        soclinux_bankmachine4_pipe_valid_source_payload_we <= 1'd0;
        soclinux_bankmachine4_pipe_valid_source_payload_addr <= 21'd0;
        soclinux_bankmachine4_row <= 14'd0;
        soclinux_bankmachine4_row_opened <= 1'd0;
        soclinux_bankmachine4_twtpcon_ready <= 1'd0;
        soclinux_bankmachine4_twtpcon_count <= 3'd0;
        soclinux_bankmachine4_trccon_ready <= 1'd0;
        soclinux_bankmachine4_trccon_count <= 3'd0;
        soclinux_bankmachine4_trascon_ready <= 1'd0;
        soclinux_bankmachine4_trascon_count <= 3'd0;
        soclinux_bankmachine5_level <= 4'd0;
        soclinux_bankmachine5_produce <= 3'd0;
        soclinux_bankmachine5_consume <= 3'd0;
        soclinux_bankmachine5_pipe_valid_source_valid <= 1'd0;
        soclinux_bankmachine5_pipe_valid_source_payload_we <= 1'd0;
        soclinux_bankmachine5_pipe_valid_source_payload_addr <= 21'd0;
        soclinux_bankmachine5_row <= 14'd0;
        soclinux_bankmachine5_row_opened <= 1'd0;
        soclinux_bankmachine5_twtpcon_ready <= 1'd0;
        soclinux_bankmachine5_twtpcon_count <= 3'd0;
        soclinux_bankmachine5_trccon_ready <= 1'd0;
        soclinux_bankmachine5_trccon_count <= 3'd0;
        soclinux_bankmachine5_trascon_ready <= 1'd0;
        soclinux_bankmachine5_trascon_count <= 3'd0;
        soclinux_bankmachine6_level <= 4'd0;
        soclinux_bankmachine6_produce <= 3'd0;
        soclinux_bankmachine6_consume <= 3'd0;
        soclinux_bankmachine6_pipe_valid_source_valid <= 1'd0;
        soclinux_bankmachine6_pipe_valid_source_payload_we <= 1'd0;
        soclinux_bankmachine6_pipe_valid_source_payload_addr <= 21'd0;
        soclinux_bankmachine6_row <= 14'd0;
        soclinux_bankmachine6_row_opened <= 1'd0;
        soclinux_bankmachine6_twtpcon_ready <= 1'd0;
        soclinux_bankmachine6_twtpcon_count <= 3'd0;
        soclinux_bankmachine6_trccon_ready <= 1'd0;
        soclinux_bankmachine6_trccon_count <= 3'd0;
        soclinux_bankmachine6_trascon_ready <= 1'd0;
        soclinux_bankmachine6_trascon_count <= 3'd0;
        soclinux_bankmachine7_level <= 4'd0;
        soclinux_bankmachine7_produce <= 3'd0;
        soclinux_bankmachine7_consume <= 3'd0;
        soclinux_bankmachine7_pipe_valid_source_valid <= 1'd0;
        soclinux_bankmachine7_pipe_valid_source_payload_we <= 1'd0;
        soclinux_bankmachine7_pipe_valid_source_payload_addr <= 21'd0;
        soclinux_bankmachine7_row <= 14'd0;
        soclinux_bankmachine7_row_opened <= 1'd0;
        soclinux_bankmachine7_twtpcon_ready <= 1'd0;
        soclinux_bankmachine7_twtpcon_count <= 3'd0;
        soclinux_bankmachine7_trccon_ready <= 1'd0;
        soclinux_bankmachine7_trccon_count <= 3'd0;
        soclinux_bankmachine7_trascon_ready <= 1'd0;
        soclinux_bankmachine7_trascon_count <= 3'd0;
        soclinux_choose_cmd_grant <= 3'd0;
        soclinux_choose_req_grant <= 3'd0;
        soclinux_trrdcon_ready <= 1'd0;
        soclinux_trrdcon_count <= 1'd0;
        soclinux_tfawcon_ready <= 1'd1;
        soclinux_tfawcon_window <= 5'd0;
        soclinux_tccdcon_ready <= 1'd0;
        soclinux_tccdcon_count <= 1'd0;
        soclinux_twtrcon_ready <= 1'd0;
        soclinux_twtrcon_count <= 3'd0;
        soclinux_time0 <= 5'd0;
        soclinux_time1 <= 4'd0;
        soclinux_aborted <= 1'd0;
        leds_storage <= 8'd0;
        leds_re <= 1'd0;
        leds_chaser <= 8'd0;
        leds_mode <= 1'd0;
        leds_count <= 23'd7812500;
        in1_storage <= 32'd0;
        in1_re <= 1'd0;
        in2_storage <= 32'd0;
        in2_re <= 1'd0;
        result_re <= 1'd0;
        card_detect_re <= 1'd0;
        clocker_storage <= 9'd256;
        clocker_re <= 1'd0;
        clocker_clk1 <= 1'd0;
        clocker_count <= 10'd0;
        clocker_clk_d <= 1'd0;
        clocker_ce_delayed <= 1'd0;
        init_count <= 8'd0;
        cmdw_count <= 8'd0;
        cmdr_timeout <= 32'd125000000;
        cmdr_count <= 8'd0;
        cmdr_busy <= 1'd0;
        cmdr_cmdr_run <= 1'd0;
        cmdr_cmdr_converter_converter_source_payload_data <= 8'd0;
        cmdr_cmdr_converter_converter_source_payload_valid_token_count <= 4'd0;
        cmdr_cmdr_converter_converter_demux <= 3'd0;
        cmdr_cmdr_converter_converter_strobe_all <= 1'd0;
        cmdr_cmdr_buf_pipe_valid_source_valid <= 1'd0;
        cmdr_cmdr_buf_pipe_valid_source_payload_data <= 8'd0;
        cmdr_cmdr_reset <= 1'd0;
        dataw_re <= 1'd0;
        dataw_count <= 8'd0;
        dataw_accepted1 <= 1'd0;
        dataw_crc_error1 <= 1'd0;
        dataw_write_error1 <= 1'd0;
        dataw_crc_run <= 1'd0;
        dataw_crc_converter_converter_source_payload_data <= 8'd0;
        dataw_crc_converter_converter_source_payload_valid_token_count <= 4'd0;
        dataw_crc_converter_converter_demux <= 3'd0;
        dataw_crc_converter_converter_strobe_all <= 1'd0;
        dataw_crc_buf_pipe_valid_source_valid <= 1'd0;
        dataw_crc_buf_pipe_valid_source_payload_data <= 8'd0;
        datar_timeout <= 32'd125000000;
        datar_count <= 10'd0;
        datar_datar_run <= 1'd0;
        datar_datar_converter_converter_source_payload_data <= 8'd0;
        datar_datar_converter_converter_source_payload_valid_token_count <= 2'd0;
        datar_datar_converter_converter_demux <= 1'd0;
        datar_datar_converter_converter_strobe_all <= 1'd0;
        datar_datar_buf_pipe_valid_source_valid <= 1'd0;
        datar_datar_buf_pipe_valid_source_payload_data <= 8'd0;
        datar_datar_reset <= 1'd0;
        clk_i_d <= 1'd0;
        card_detect_irq <= 1'd0;
        card_detect_d <= 1'd0;
        sdcard_core_irq <= 1'd0;
        sdcard_core_cmd_argument_storage <= 32'd0;
        sdcard_core_cmd_argument_re <= 1'd0;
        sdcard_core_cmd_command_storage <= 14'd0;
        sdcard_core_cmd_command_re <= 1'd0;
        sdcard_core_cmd_send_storage <= 1'd0;
        sdcard_core_cmd_send_re <= 1'd0;
        sdcard_core_cmd_response_status <= 128'd0;
        sdcard_core_cmd_response_re <= 1'd0;
        sdcard_core_cmd_event_re <= 1'd0;
        sdcard_core_data_event_re <= 1'd0;
        sdcard_core_block_length_storage <= 10'd0;
        sdcard_core_block_length_re <= 1'd0;
        sdcard_core_block_count_storage <= 32'd0;
        sdcard_core_block_count_re <= 1'd0;
        sdcard_core_crc7_inserter_reg0 <= 7'd0;
        sdcard_core_crc16_inserter_count <= 3'd0;
        sdcard_core_crc16_inserter_crc0_reg0 <= 16'd0;
        sdcard_core_crc16_inserter_crc1_reg0 <= 16'd0;
        sdcard_core_crc16_inserter_crc2_reg0 <= 16'd0;
        sdcard_core_crc16_inserter_crc3_reg0 <= 16'd0;
        sdcard_core_fifo_level <= 4'd0;
        sdcard_core_fifo_produce <= 3'd0;
        sdcard_core_fifo_consume <= 3'd0;
        sdcard_core_cmd_count <= 3'd0;
        sdcard_core_cmd_done <= 1'd0;
        sdcard_core_cmd_error <= 1'd0;
        sdcard_core_cmd_timeout <= 1'd0;
        sdcard_core_data_count <= 32'd0;
        sdcard_core_data_done <= 1'd0;
        sdcard_core_data_error <= 1'd0;
        sdcard_core_data_timeout <= 1'd0;
        sdcard_core_done_d <= 1'd0;
        sdcard_block2mem_irq <= 1'd0;
        sdcard_block2mem_fifo_readable <= 1'd0;
        sdcard_block2mem_fifo_level0 <= 10'd0;
        sdcard_block2mem_fifo_produce <= 9'd0;
        sdcard_block2mem_fifo_consume <= 9'd0;
        sdcard_block2mem_converter_source_payload_data <= 32'd0;
        sdcard_block2mem_converter_source_payload_valid_token_count <= 3'd0;
        sdcard_block2mem_converter_demux <= 2'd0;
        sdcard_block2mem_converter_strobe_all <= 1'd0;
        sdcard_block2mem_wishbonedmawriter_offset1 <= 32'd0;
        sdcard_block2mem_wishbonedmawriter_base_storage <= 64'd0;
        sdcard_block2mem_wishbonedmawriter_base_re <= 1'd0;
        sdcard_block2mem_wishbonedmawriter_length_storage <= 32'd0;
        sdcard_block2mem_wishbonedmawriter_length_re <= 1'd0;
        sdcard_block2mem_wishbonedmawriter_enable_storage <= 1'd0;
        sdcard_block2mem_wishbonedmawriter_enable_re <= 1'd0;
        sdcard_block2mem_wishbonedmawriter_done_re <= 1'd0;
        sdcard_block2mem_wishbonedmawriter_loop_storage <= 1'd0;
        sdcard_block2mem_wishbonedmawriter_loop_re <= 1'd0;
        sdcard_block2mem_wishbonedmawriter_offset_re <= 1'd0;
        sdcard_block2mem_connect <= 1'd0;
        sdcard_block2mem_done_d <= 1'd0;
        sdcard_mem2block_irq <= 1'd0;
        sdcard_mem2block_dma_fifo_level <= 5'd0;
        sdcard_mem2block_dma_fifo_produce <= 4'd0;
        sdcard_mem2block_dma_fifo_consume <= 4'd0;
        sdcard_mem2block_dma_offset1 <= 32'd0;
        sdcard_mem2block_dma_base_storage <= 64'd0;
        sdcard_mem2block_dma_base_re <= 1'd0;
        sdcard_mem2block_dma_length_storage <= 32'd0;
        sdcard_mem2block_dma_length_re <= 1'd0;
        sdcard_mem2block_dma_enable_storage <= 1'd0;
        sdcard_mem2block_dma_enable_re <= 1'd0;
        sdcard_mem2block_dma_done_re <= 1'd0;
        sdcard_mem2block_dma_loop_storage <= 1'd0;
        sdcard_mem2block_dma_loop_re <= 1'd0;
        sdcard_mem2block_dma_offset_re <= 1'd0;
        sdcard_mem2block_converter_converter_mux <= 2'd0;
        sdcard_mem2block_fifo_readable <= 1'd0;
        sdcard_mem2block_fifo_level0 <= 10'd0;
        sdcard_mem2block_fifo_produce <= 9'd0;
        sdcard_mem2block_fifo_consume <= 9'd0;
        sdcard_mem2block_count <= 9'd0;
        sdcard_mem2block_done_d <= 1'd0;
        card_detect_pending <= 1'd0;
        block2mem_dma_pending <= 1'd0;
        mem2block_dma_pending <= 1'd0;
        eventmanager_status_re <= 1'd0;
        eventmanager_pending_re <= 1'd0;
        eventmanager_pending_r <= 4'd0;
        eventmanager_enable_storage <= 4'd0;
        eventmanager_enable_re <= 1'd0;
        interface1_re <= 1'd0;
        interface1_we <= 1'd0;
        grant <= 2'd0;
        slave_sel_r <= 6'd0;
        count <= 20'd1000000;
        csr_bankarray_sel_r <= 1'd0;
        rs232phytx_state <= 1'd0;
        rs232phyrx_state <= 1'd0;
        refresher_state <= 2'd0;
        bankmachine0_state <= 4'd0;
        bankmachine1_state <= 4'd0;
        bankmachine2_state <= 4'd0;
        bankmachine3_state <= 4'd0;
        bankmachine4_state <= 4'd0;
        bankmachine5_state <= 4'd0;
        bankmachine6_state <= 4'd0;
        bankmachine7_state <= 4'd0;
        multiplexer_state <= 4'd0;
        roundrobin0_grant <= 2'd0;
        roundrobin1_grant <= 2'd0;
        roundrobin2_grant <= 2'd0;
        roundrobin3_grant <= 2'd0;
        roundrobin4_grant <= 2'd0;
        roundrobin5_grant <= 2'd0;
        roundrobin6_grant <= 2'd0;
        roundrobin7_grant <= 2'd0;
        new_master_wdata_ready0 <= 1'd0;
        new_master_wdata_ready1 <= 1'd0;
        new_master_wdata_ready2 <= 1'd0;
        new_master_wdata_ready3 <= 1'd0;
        new_master_wdata_ready4 <= 1'd0;
        new_master_wdata_ready5 <= 1'd0;
        new_master_rdata_valid0 <= 1'd0;
        new_master_rdata_valid1 <= 1'd0;
        new_master_rdata_valid2 <= 1'd0;
        new_master_rdata_valid3 <= 1'd0;
        new_master_rdata_valid4 <= 1'd0;
        new_master_rdata_valid5 <= 1'd0;
        new_master_rdata_valid6 <= 1'd0;
        new_master_rdata_valid7 <= 1'd0;
        new_master_rdata_valid8 <= 1'd0;
        new_master_rdata_valid9 <= 1'd0;
        new_master_rdata_valid10 <= 1'd0;
        new_master_rdata_valid11 <= 1'd0;
        new_master_rdata_valid12 <= 1'd0;
        new_master_rdata_valid13 <= 1'd0;
        new_master_rdata_valid14 <= 1'd0;
        new_master_rdata_valid15 <= 1'd0;
        new_master_rdata_valid16 <= 1'd0;
        new_master_rdata_valid17 <= 1'd0;
        new_master_rdata_valid18 <= 1'd0;
        new_master_rdata_valid19 <= 1'd0;
        new_master_rdata_valid20 <= 1'd0;
        new_master_rdata_valid21 <= 1'd0;
        new_master_rdata_valid22 <= 1'd0;
        new_master_rdata_valid23 <= 1'd0;
        new_master_rdata_valid24 <= 1'd0;
        new_master_rdata_valid25 <= 1'd0;
        new_master_rdata_valid26 <= 1'd0;
        litedramwishbone2native_state <= 2'd0;
        sdphyinit_state <= 1'd0;
        sdphycmdw_state <= 2'd0;
        sdphycmdr_state <= 3'd0;
        sdphydataw_state <= 3'd0;
        sdphydatar_state <= 3'd0;
        crc16inserter_state <= 1'd0;
        fsm_state <= 3'd0;
        sdblock2memdma_state <= 2'd0;
        sdmem2blockdma_state <= 2'd0;
        wishbone2csr_state <= 2'd0;
    end
    impl_xilinxmultiregimpl0_regs0 <= serial_rx;
    impl_xilinxmultiregimpl0_regs1 <= impl_xilinxmultiregimpl0_regs0;
    impl_xilinxmultiregimpl1_regs <= (~clocker_clk0);
end


//------------------------------------------------------------------------------
// Specialized Logic
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// Instance BUFG of BUFG Module.
//------------------------------------------------------------------------------
BUFG BUFG(
	// Inputs.
	.I (crg_clkout0),

	// Outputs.
	.O (crg_clkout_buf0)
);

//------------------------------------------------------------------------------
// Instance BUFG_1 of BUFG Module.
//------------------------------------------------------------------------------
BUFG BUFG_1(
	// Inputs.
	.I (crg_clkout1),

	// Outputs.
	.O (crg_clkout_buf1)
);

//------------------------------------------------------------------------------
// Instance BUFG_2 of BUFG Module.
//------------------------------------------------------------------------------
BUFG BUFG_2(
	// Inputs.
	.I (crg_clkout2),

	// Outputs.
	.O (crg_clkout_buf2)
);

//------------------------------------------------------------------------------
// Instance IDELAYCTRL of IDELAYCTRL Module.
//------------------------------------------------------------------------------
IDELAYCTRL IDELAYCTRL(
	// Inputs.
	.REFCLK (idelay_clk),
	.RST    (crg_ic_reset)
);

//------------------------------------------------------------------------------
// Memory rom: 11233-words x 32-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: ---- | 
reg [31:0] rom[0:11232];
initial begin
	$readmemh("vc707_rom.init", rom);
end
reg [31:0] rom_dat0;
always @(posedge sys_clk) begin
	rom_dat0 <= rom[soclinux_soclinux_adr];
end
assign soclinux_soclinux_dat_r = rom_dat0;


//------------------------------------------------------------------------------
// Memory sram: 1536-words x 32-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [31:0] sram[0:1535];
initial begin
	$readmemh("vc707_sram.init", sram);
end
reg [10:0] sram_adr0;
always @(posedge sys_clk) begin
	if (soclinux_ram_we[0])
		sram[soclinux_ram_adr][7:0] <= soclinux_ram_dat_w[7:0];
	if (soclinux_ram_we[1])
		sram[soclinux_ram_adr][15:8] <= soclinux_ram_dat_w[15:8];
	if (soclinux_ram_we[2])
		sram[soclinux_ram_adr][23:16] <= soclinux_ram_dat_w[23:16];
	if (soclinux_ram_we[3])
		sram[soclinux_ram_adr][31:24] <= soclinux_ram_dat_w[31:24];
	sram_adr0 <= soclinux_ram_adr;
end
assign soclinux_ram_dat_r = sram[sram_adr0];


//------------------------------------------------------------------------------
// Memory mem: 19-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: ---- | 
reg [7:0] mem[0:18];
initial begin
	$readmemh("vc707_mem.init", mem);
end
reg [4:0] mem_adr0;
always @(posedge sys_clk) begin
	mem_adr0 <= csr_bankarray_adr;
end
assign csr_bankarray_dat_r = mem[mem_adr0];


//------------------------------------------------------------------------------
// Memory storage: 16-words x 10-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 10 
// Port 1 | Read: Sync  | Write: ---- | 
reg [9:0] storage[0:15];
reg [9:0] storage_dat0;
reg [9:0] storage_dat1;
always @(posedge sys_clk) begin
	if (soclinux_uart_tx_fifo_wrport_we)
		storage[soclinux_uart_tx_fifo_wrport_adr] <= soclinux_uart_tx_fifo_wrport_dat_w;
	storage_dat0 <= storage[soclinux_uart_tx_fifo_wrport_adr];
end
always @(posedge sys_clk) begin
	if (soclinux_uart_tx_fifo_rdport_re)
		storage_dat1 <= storage[soclinux_uart_tx_fifo_rdport_adr];
end
assign soclinux_uart_tx_fifo_wrport_dat_r = storage_dat0;
assign soclinux_uart_tx_fifo_rdport_dat_r = storage_dat1;


//------------------------------------------------------------------------------
// Memory storage_1: 16-words x 10-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 10 
// Port 1 | Read: Sync  | Write: ---- | 
reg [9:0] storage_1[0:15];
reg [9:0] storage_1_dat0;
reg [9:0] storage_1_dat1;
always @(posedge sys_clk) begin
	if (soclinux_uart_rx_fifo_wrport_we)
		storage_1[soclinux_uart_rx_fifo_wrport_adr] <= soclinux_uart_rx_fifo_wrport_dat_w;
	storage_1_dat0 <= storage_1[soclinux_uart_rx_fifo_wrport_adr];
end
always @(posedge sys_clk) begin
	if (soclinux_uart_rx_fifo_rdport_re)
		storage_1_dat1 <= storage_1[soclinux_uart_rx_fifo_rdport_adr];
end
assign soclinux_uart_rx_fifo_wrport_dat_r = storage_1_dat0;
assign soclinux_uart_rx_fifo_rdport_dat_r = storage_1_dat1;


//------------------------------------------------------------------------------
// Instance OSERDESE2 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (1'd0),
	.D2     (1'd1),
	.D3     (1'd0),
	.D4     (1'd1),
	.D5     (1'd0),
	.D6     (1'd1),
	.D7     (1'd0),
	.D8     (1'd1),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (v7ddrphy_sd_clk_se_nodelay)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2 (
	// Inputs.
	.C        (sys_clk),
	.CE       (v7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((v7ddrphy_cdly_rst_re | v7ddrphy_rst_storage) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_sd_clk_se_delayed),
	.ODATAIN  (v7ddrphy_sd_clk_se_nodelay)
);

//------------------------------------------------------------------------------
// Instance OBUFDS of OBUFDS Module.
//------------------------------------------------------------------------------
OBUFDS OBUFDS(
	// Inputs.
	.I  (v7ddrphy_sd_clk_se_delayed),

	// Outputs.
	.O  (ddram_clk_p),
	.OB (ddram_clk_n)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_1 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_1 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_dfi_p0_reset_n),
	.D2     (v7ddrphy_dfi_p0_reset_n),
	.D3     (v7ddrphy_dfi_p1_reset_n),
	.D4     (v7ddrphy_dfi_p1_reset_n),
	.D5     (v7ddrphy_dfi_p2_reset_n),
	.D6     (v7ddrphy_dfi_p2_reset_n),
	.D7     (v7ddrphy_dfi_p3_reset_n),
	.D8     (v7ddrphy_dfi_p3_reset_n),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (v7ddrphy_oq0)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_1 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_1 (
	// Inputs.
	.C        (sys_clk),
	.CE       (v7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((v7ddrphy_cdly_rst_re | v7ddrphy_rst_storage) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_reset_n),
	.ODATAIN  (v7ddrphy_oq0)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_2 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_2 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_dfi_p0_cs_n),
	.D2     (v7ddrphy_dfi_p0_cs_n),
	.D3     (v7ddrphy_dfi_p1_cs_n),
	.D4     (v7ddrphy_dfi_p1_cs_n),
	.D5     (v7ddrphy_dfi_p2_cs_n),
	.D6     (v7ddrphy_dfi_p2_cs_n),
	.D7     (v7ddrphy_dfi_p3_cs_n),
	.D8     (v7ddrphy_dfi_p3_cs_n),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (v7ddrphy_oq1)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_2 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_2 (
	// Inputs.
	.C        (sys_clk),
	.CE       (v7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((v7ddrphy_cdly_rst_re | v7ddrphy_rst_storage) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_cs_n),
	.ODATAIN  (v7ddrphy_oq1)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_3 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_3 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_dfi_p0_address[0]),
	.D2     (v7ddrphy_dfi_p0_address[0]),
	.D3     (v7ddrphy_dfi_p1_address[0]),
	.D4     (v7ddrphy_dfi_p1_address[0]),
	.D5     (v7ddrphy_dfi_p2_address[0]),
	.D6     (v7ddrphy_dfi_p2_address[0]),
	.D7     (v7ddrphy_dfi_p3_address[0]),
	.D8     (v7ddrphy_dfi_p3_address[0]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (v7ddrphy_oq2)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_3 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_3 (
	// Inputs.
	.C        (sys_clk),
	.CE       (v7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((v7ddrphy_cdly_rst_re | v7ddrphy_rst_storage) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_a[0]),
	.ODATAIN  (v7ddrphy_oq2)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_4 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_4 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_dfi_p0_address[1]),
	.D2     (v7ddrphy_dfi_p0_address[1]),
	.D3     (v7ddrphy_dfi_p1_address[1]),
	.D4     (v7ddrphy_dfi_p1_address[1]),
	.D5     (v7ddrphy_dfi_p2_address[1]),
	.D6     (v7ddrphy_dfi_p2_address[1]),
	.D7     (v7ddrphy_dfi_p3_address[1]),
	.D8     (v7ddrphy_dfi_p3_address[1]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (v7ddrphy_oq3)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_4 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_4 (
	// Inputs.
	.C        (sys_clk),
	.CE       (v7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((v7ddrphy_cdly_rst_re | v7ddrphy_rst_storage) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_a[1]),
	.ODATAIN  (v7ddrphy_oq3)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_5 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_5 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_dfi_p0_address[2]),
	.D2     (v7ddrphy_dfi_p0_address[2]),
	.D3     (v7ddrphy_dfi_p1_address[2]),
	.D4     (v7ddrphy_dfi_p1_address[2]),
	.D5     (v7ddrphy_dfi_p2_address[2]),
	.D6     (v7ddrphy_dfi_p2_address[2]),
	.D7     (v7ddrphy_dfi_p3_address[2]),
	.D8     (v7ddrphy_dfi_p3_address[2]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (v7ddrphy_oq4)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_5 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_5 (
	// Inputs.
	.C        (sys_clk),
	.CE       (v7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((v7ddrphy_cdly_rst_re | v7ddrphy_rst_storage) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_a[2]),
	.ODATAIN  (v7ddrphy_oq4)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_6 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_6 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_dfi_p0_address[3]),
	.D2     (v7ddrphy_dfi_p0_address[3]),
	.D3     (v7ddrphy_dfi_p1_address[3]),
	.D4     (v7ddrphy_dfi_p1_address[3]),
	.D5     (v7ddrphy_dfi_p2_address[3]),
	.D6     (v7ddrphy_dfi_p2_address[3]),
	.D7     (v7ddrphy_dfi_p3_address[3]),
	.D8     (v7ddrphy_dfi_p3_address[3]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (v7ddrphy_oq5)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_6 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_6 (
	// Inputs.
	.C        (sys_clk),
	.CE       (v7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((v7ddrphy_cdly_rst_re | v7ddrphy_rst_storage) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_a[3]),
	.ODATAIN  (v7ddrphy_oq5)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_7 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_7 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_dfi_p0_address[4]),
	.D2     (v7ddrphy_dfi_p0_address[4]),
	.D3     (v7ddrphy_dfi_p1_address[4]),
	.D4     (v7ddrphy_dfi_p1_address[4]),
	.D5     (v7ddrphy_dfi_p2_address[4]),
	.D6     (v7ddrphy_dfi_p2_address[4]),
	.D7     (v7ddrphy_dfi_p3_address[4]),
	.D8     (v7ddrphy_dfi_p3_address[4]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (v7ddrphy_oq6)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_7 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_7 (
	// Inputs.
	.C        (sys_clk),
	.CE       (v7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((v7ddrphy_cdly_rst_re | v7ddrphy_rst_storage) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_a[4]),
	.ODATAIN  (v7ddrphy_oq6)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_8 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_8 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_dfi_p0_address[5]),
	.D2     (v7ddrphy_dfi_p0_address[5]),
	.D3     (v7ddrphy_dfi_p1_address[5]),
	.D4     (v7ddrphy_dfi_p1_address[5]),
	.D5     (v7ddrphy_dfi_p2_address[5]),
	.D6     (v7ddrphy_dfi_p2_address[5]),
	.D7     (v7ddrphy_dfi_p3_address[5]),
	.D8     (v7ddrphy_dfi_p3_address[5]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (v7ddrphy_oq7)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_8 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_8 (
	// Inputs.
	.C        (sys_clk),
	.CE       (v7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((v7ddrphy_cdly_rst_re | v7ddrphy_rst_storage) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_a[5]),
	.ODATAIN  (v7ddrphy_oq7)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_9 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_9 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_dfi_p0_address[6]),
	.D2     (v7ddrphy_dfi_p0_address[6]),
	.D3     (v7ddrphy_dfi_p1_address[6]),
	.D4     (v7ddrphy_dfi_p1_address[6]),
	.D5     (v7ddrphy_dfi_p2_address[6]),
	.D6     (v7ddrphy_dfi_p2_address[6]),
	.D7     (v7ddrphy_dfi_p3_address[6]),
	.D8     (v7ddrphy_dfi_p3_address[6]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (v7ddrphy_oq8)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_9 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_9 (
	// Inputs.
	.C        (sys_clk),
	.CE       (v7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((v7ddrphy_cdly_rst_re | v7ddrphy_rst_storage) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_a[6]),
	.ODATAIN  (v7ddrphy_oq8)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_10 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_10 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_dfi_p0_address[7]),
	.D2     (v7ddrphy_dfi_p0_address[7]),
	.D3     (v7ddrphy_dfi_p1_address[7]),
	.D4     (v7ddrphy_dfi_p1_address[7]),
	.D5     (v7ddrphy_dfi_p2_address[7]),
	.D6     (v7ddrphy_dfi_p2_address[7]),
	.D7     (v7ddrphy_dfi_p3_address[7]),
	.D8     (v7ddrphy_dfi_p3_address[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (v7ddrphy_oq9)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_10 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_10 (
	// Inputs.
	.C        (sys_clk),
	.CE       (v7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((v7ddrphy_cdly_rst_re | v7ddrphy_rst_storage) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_a[7]),
	.ODATAIN  (v7ddrphy_oq9)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_11 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_11 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_dfi_p0_address[8]),
	.D2     (v7ddrphy_dfi_p0_address[8]),
	.D3     (v7ddrphy_dfi_p1_address[8]),
	.D4     (v7ddrphy_dfi_p1_address[8]),
	.D5     (v7ddrphy_dfi_p2_address[8]),
	.D6     (v7ddrphy_dfi_p2_address[8]),
	.D7     (v7ddrphy_dfi_p3_address[8]),
	.D8     (v7ddrphy_dfi_p3_address[8]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (v7ddrphy_oq10)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_11 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_11 (
	// Inputs.
	.C        (sys_clk),
	.CE       (v7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((v7ddrphy_cdly_rst_re | v7ddrphy_rst_storage) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_a[8]),
	.ODATAIN  (v7ddrphy_oq10)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_12 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_12 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_dfi_p0_address[9]),
	.D2     (v7ddrphy_dfi_p0_address[9]),
	.D3     (v7ddrphy_dfi_p1_address[9]),
	.D4     (v7ddrphy_dfi_p1_address[9]),
	.D5     (v7ddrphy_dfi_p2_address[9]),
	.D6     (v7ddrphy_dfi_p2_address[9]),
	.D7     (v7ddrphy_dfi_p3_address[9]),
	.D8     (v7ddrphy_dfi_p3_address[9]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (v7ddrphy_oq11)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_12 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_12 (
	// Inputs.
	.C        (sys_clk),
	.CE       (v7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((v7ddrphy_cdly_rst_re | v7ddrphy_rst_storage) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_a[9]),
	.ODATAIN  (v7ddrphy_oq11)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_13 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_13 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_dfi_p0_address[10]),
	.D2     (v7ddrphy_dfi_p0_address[10]),
	.D3     (v7ddrphy_dfi_p1_address[10]),
	.D4     (v7ddrphy_dfi_p1_address[10]),
	.D5     (v7ddrphy_dfi_p2_address[10]),
	.D6     (v7ddrphy_dfi_p2_address[10]),
	.D7     (v7ddrphy_dfi_p3_address[10]),
	.D8     (v7ddrphy_dfi_p3_address[10]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (v7ddrphy_oq12)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_13 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_13 (
	// Inputs.
	.C        (sys_clk),
	.CE       (v7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((v7ddrphy_cdly_rst_re | v7ddrphy_rst_storage) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_a[10]),
	.ODATAIN  (v7ddrphy_oq12)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_14 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_14 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_dfi_p0_address[11]),
	.D2     (v7ddrphy_dfi_p0_address[11]),
	.D3     (v7ddrphy_dfi_p1_address[11]),
	.D4     (v7ddrphy_dfi_p1_address[11]),
	.D5     (v7ddrphy_dfi_p2_address[11]),
	.D6     (v7ddrphy_dfi_p2_address[11]),
	.D7     (v7ddrphy_dfi_p3_address[11]),
	.D8     (v7ddrphy_dfi_p3_address[11]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (v7ddrphy_oq13)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_14 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_14 (
	// Inputs.
	.C        (sys_clk),
	.CE       (v7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((v7ddrphy_cdly_rst_re | v7ddrphy_rst_storage) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_a[11]),
	.ODATAIN  (v7ddrphy_oq13)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_15 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_15 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_dfi_p0_address[12]),
	.D2     (v7ddrphy_dfi_p0_address[12]),
	.D3     (v7ddrphy_dfi_p1_address[12]),
	.D4     (v7ddrphy_dfi_p1_address[12]),
	.D5     (v7ddrphy_dfi_p2_address[12]),
	.D6     (v7ddrphy_dfi_p2_address[12]),
	.D7     (v7ddrphy_dfi_p3_address[12]),
	.D8     (v7ddrphy_dfi_p3_address[12]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (v7ddrphy_oq14)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_15 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_15 (
	// Inputs.
	.C        (sys_clk),
	.CE       (v7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((v7ddrphy_cdly_rst_re | v7ddrphy_rst_storage) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_a[12]),
	.ODATAIN  (v7ddrphy_oq14)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_16 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_16 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_dfi_p0_address[13]),
	.D2     (v7ddrphy_dfi_p0_address[13]),
	.D3     (v7ddrphy_dfi_p1_address[13]),
	.D4     (v7ddrphy_dfi_p1_address[13]),
	.D5     (v7ddrphy_dfi_p2_address[13]),
	.D6     (v7ddrphy_dfi_p2_address[13]),
	.D7     (v7ddrphy_dfi_p3_address[13]),
	.D8     (v7ddrphy_dfi_p3_address[13]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (v7ddrphy_oq15)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_16 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_16 (
	// Inputs.
	.C        (sys_clk),
	.CE       (v7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((v7ddrphy_cdly_rst_re | v7ddrphy_rst_storage) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_a[13]),
	.ODATAIN  (v7ddrphy_oq15)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_17 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_17 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_dfi_p0_address[14]),
	.D2     (v7ddrphy_dfi_p0_address[14]),
	.D3     (v7ddrphy_dfi_p1_address[14]),
	.D4     (v7ddrphy_dfi_p1_address[14]),
	.D5     (v7ddrphy_dfi_p2_address[14]),
	.D6     (v7ddrphy_dfi_p2_address[14]),
	.D7     (v7ddrphy_dfi_p3_address[14]),
	.D8     (v7ddrphy_dfi_p3_address[14]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (v7ddrphy_oq16)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_17 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_17 (
	// Inputs.
	.C        (sys_clk),
	.CE       (v7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((v7ddrphy_cdly_rst_re | v7ddrphy_rst_storage) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_a[14]),
	.ODATAIN  (v7ddrphy_oq16)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_18 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_18 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_dfi_p0_address[15]),
	.D2     (v7ddrphy_dfi_p0_address[15]),
	.D3     (v7ddrphy_dfi_p1_address[15]),
	.D4     (v7ddrphy_dfi_p1_address[15]),
	.D5     (v7ddrphy_dfi_p2_address[15]),
	.D6     (v7ddrphy_dfi_p2_address[15]),
	.D7     (v7ddrphy_dfi_p3_address[15]),
	.D8     (v7ddrphy_dfi_p3_address[15]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (v7ddrphy_oq17)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_18 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_18 (
	// Inputs.
	.C        (sys_clk),
	.CE       (v7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((v7ddrphy_cdly_rst_re | v7ddrphy_rst_storage) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_a[15]),
	.ODATAIN  (v7ddrphy_oq17)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_19 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_19 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_dfi_p0_bank[0]),
	.D2     (v7ddrphy_dfi_p0_bank[0]),
	.D3     (v7ddrphy_dfi_p1_bank[0]),
	.D4     (v7ddrphy_dfi_p1_bank[0]),
	.D5     (v7ddrphy_dfi_p2_bank[0]),
	.D6     (v7ddrphy_dfi_p2_bank[0]),
	.D7     (v7ddrphy_dfi_p3_bank[0]),
	.D8     (v7ddrphy_dfi_p3_bank[0]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (v7ddrphy_oq18)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_19 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_19 (
	// Inputs.
	.C        (sys_clk),
	.CE       (v7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((v7ddrphy_cdly_rst_re | v7ddrphy_rst_storage) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_pads_ba[0]),
	.ODATAIN  (v7ddrphy_oq18)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_20 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_20 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_dfi_p0_bank[1]),
	.D2     (v7ddrphy_dfi_p0_bank[1]),
	.D3     (v7ddrphy_dfi_p1_bank[1]),
	.D4     (v7ddrphy_dfi_p1_bank[1]),
	.D5     (v7ddrphy_dfi_p2_bank[1]),
	.D6     (v7ddrphy_dfi_p2_bank[1]),
	.D7     (v7ddrphy_dfi_p3_bank[1]),
	.D8     (v7ddrphy_dfi_p3_bank[1]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (v7ddrphy_oq19)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_20 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_20 (
	// Inputs.
	.C        (sys_clk),
	.CE       (v7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((v7ddrphy_cdly_rst_re | v7ddrphy_rst_storage) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_pads_ba[1]),
	.ODATAIN  (v7ddrphy_oq19)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_21 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_21 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_dfi_p0_bank[2]),
	.D2     (v7ddrphy_dfi_p0_bank[2]),
	.D3     (v7ddrphy_dfi_p1_bank[2]),
	.D4     (v7ddrphy_dfi_p1_bank[2]),
	.D5     (v7ddrphy_dfi_p2_bank[2]),
	.D6     (v7ddrphy_dfi_p2_bank[2]),
	.D7     (v7ddrphy_dfi_p3_bank[2]),
	.D8     (v7ddrphy_dfi_p3_bank[2]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (v7ddrphy_oq20)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_21 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_21 (
	// Inputs.
	.C        (sys_clk),
	.CE       (v7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((v7ddrphy_cdly_rst_re | v7ddrphy_rst_storage) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_pads_ba[2]),
	.ODATAIN  (v7ddrphy_oq20)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_22 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_22 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_dfi_p0_ras_n),
	.D2     (v7ddrphy_dfi_p0_ras_n),
	.D3     (v7ddrphy_dfi_p1_ras_n),
	.D4     (v7ddrphy_dfi_p1_ras_n),
	.D5     (v7ddrphy_dfi_p2_ras_n),
	.D6     (v7ddrphy_dfi_p2_ras_n),
	.D7     (v7ddrphy_dfi_p3_ras_n),
	.D8     (v7ddrphy_dfi_p3_ras_n),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (v7ddrphy_oq21)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_22 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_22 (
	// Inputs.
	.C        (sys_clk),
	.CE       (v7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((v7ddrphy_cdly_rst_re | v7ddrphy_rst_storage) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_ras_n),
	.ODATAIN  (v7ddrphy_oq21)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_23 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_23 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_dfi_p0_cas_n),
	.D2     (v7ddrphy_dfi_p0_cas_n),
	.D3     (v7ddrphy_dfi_p1_cas_n),
	.D4     (v7ddrphy_dfi_p1_cas_n),
	.D5     (v7ddrphy_dfi_p2_cas_n),
	.D6     (v7ddrphy_dfi_p2_cas_n),
	.D7     (v7ddrphy_dfi_p3_cas_n),
	.D8     (v7ddrphy_dfi_p3_cas_n),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (v7ddrphy_oq22)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_23 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_23 (
	// Inputs.
	.C        (sys_clk),
	.CE       (v7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((v7ddrphy_cdly_rst_re | v7ddrphy_rst_storage) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_cas_n),
	.ODATAIN  (v7ddrphy_oq22)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_24 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_24 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_dfi_p0_we_n),
	.D2     (v7ddrphy_dfi_p0_we_n),
	.D3     (v7ddrphy_dfi_p1_we_n),
	.D4     (v7ddrphy_dfi_p1_we_n),
	.D5     (v7ddrphy_dfi_p2_we_n),
	.D6     (v7ddrphy_dfi_p2_we_n),
	.D7     (v7ddrphy_dfi_p3_we_n),
	.D8     (v7ddrphy_dfi_p3_we_n),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (v7ddrphy_oq23)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_24 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_24 (
	// Inputs.
	.C        (sys_clk),
	.CE       (v7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((v7ddrphy_cdly_rst_re | v7ddrphy_rst_storage) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_we_n),
	.ODATAIN  (v7ddrphy_oq23)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_25 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_25 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_dfi_p0_cke),
	.D2     (v7ddrphy_dfi_p0_cke),
	.D3     (v7ddrphy_dfi_p1_cke),
	.D4     (v7ddrphy_dfi_p1_cke),
	.D5     (v7ddrphy_dfi_p2_cke),
	.D6     (v7ddrphy_dfi_p2_cke),
	.D7     (v7ddrphy_dfi_p3_cke),
	.D8     (v7ddrphy_dfi_p3_cke),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (v7ddrphy_oq24)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_25 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_25 (
	// Inputs.
	.C        (sys_clk),
	.CE       (v7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((v7ddrphy_cdly_rst_re | v7ddrphy_rst_storage) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_cke),
	.ODATAIN  (v7ddrphy_oq24)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_26 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_26 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_dfi_p0_odt),
	.D2     (v7ddrphy_dfi_p0_odt),
	.D3     (v7ddrphy_dfi_p1_odt),
	.D4     (v7ddrphy_dfi_p1_odt),
	.D5     (v7ddrphy_dfi_p2_odt),
	.D6     (v7ddrphy_dfi_p2_odt),
	.D7     (v7ddrphy_dfi_p3_odt),
	.D8     (v7ddrphy_dfi_p3_odt),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (v7ddrphy_oq25)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_26 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_26 (
	// Inputs.
	.C        (sys_clk),
	.CE       (v7ddrphy_cdly_inc_re),
	.INC      (1'd1),
	.LD       (((v7ddrphy_cdly_rst_re | v7ddrphy_rst_storage) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_odt),
	.ODATAIN  (v7ddrphy_oq25)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_27 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_27 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_bitslip00[0]),
	.D2     (v7ddrphy_bitslip00[1]),
	.D3     (v7ddrphy_bitslip00[2]),
	.D4     (v7ddrphy_bitslip00[3]),
	.D5     (v7ddrphy_bitslip00[4]),
	.D6     (v7ddrphy_bitslip00[5]),
	.D7     (v7ddrphy_bitslip00[6]),
	.D8     (v7ddrphy_bitslip00[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),
	.T1     ((~v7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OFB    (v7ddrphy_dqs_o_no_delay0),
	.OQ     (v7ddrphy0),
	.TQ     (v7ddrphy_dqs_t0)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_27 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (3'd6),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_27 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[0] & v7ddrphy_wdly_dqs_inc_re)),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[0] & v7ddrphy_wdly_dqs_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dqs_o_delayed0),
	.ODATAIN  (v7ddrphy_dqs_o_no_delay0)
);

//------------------------------------------------------------------------------
// Instance IOBUFDS of IOBUFDS Module.
//------------------------------------------------------------------------------
IOBUFDS IOBUFDS(
	// Inputs.
	.I   (v7ddrphy_dqs_o_delayed0),
	.T   (v7ddrphy_dqs_t0),

	// InOuts.
	.IO  (ddram_dqs_p[0]),
	.IOB (ddram_dqs_n[0])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_28 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_28 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_bitslip10[0]),
	.D2     (v7ddrphy_bitslip10[1]),
	.D3     (v7ddrphy_bitslip10[2]),
	.D4     (v7ddrphy_bitslip10[3]),
	.D5     (v7ddrphy_bitslip10[4]),
	.D6     (v7ddrphy_bitslip10[5]),
	.D7     (v7ddrphy_bitslip10[6]),
	.D8     (v7ddrphy_bitslip10[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),
	.T1     ((~v7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OFB    (v7ddrphy_dqs_o_no_delay1),
	.OQ     (v7ddrphy1),
	.TQ     (v7ddrphy_dqs_t1)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_28 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (3'd6),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_28 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[1] & v7ddrphy_wdly_dqs_inc_re)),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[1] & v7ddrphy_wdly_dqs_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dqs_o_delayed1),
	.ODATAIN  (v7ddrphy_dqs_o_no_delay1)
);

//------------------------------------------------------------------------------
// Instance IOBUFDS_1 of IOBUFDS Module.
//------------------------------------------------------------------------------
IOBUFDS IOBUFDS_1(
	// Inputs.
	.I   (v7ddrphy_dqs_o_delayed1),
	.T   (v7ddrphy_dqs_t1),

	// InOuts.
	.IO  (ddram_dqs_p[1]),
	.IOB (ddram_dqs_n[1])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_29 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_29 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_bitslip20[0]),
	.D2     (v7ddrphy_bitslip20[1]),
	.D3     (v7ddrphy_bitslip20[2]),
	.D4     (v7ddrphy_bitslip20[3]),
	.D5     (v7ddrphy_bitslip20[4]),
	.D6     (v7ddrphy_bitslip20[5]),
	.D7     (v7ddrphy_bitslip20[6]),
	.D8     (v7ddrphy_bitslip20[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),
	.T1     ((~v7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OFB    (v7ddrphy_dqs_o_no_delay2),
	.OQ     (v7ddrphy2),
	.TQ     (v7ddrphy_dqs_t2)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_29 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (3'd6),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_29 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[2] & v7ddrphy_wdly_dqs_inc_re)),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[2] & v7ddrphy_wdly_dqs_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dqs_o_delayed2),
	.ODATAIN  (v7ddrphy_dqs_o_no_delay2)
);

//------------------------------------------------------------------------------
// Instance IOBUFDS_2 of IOBUFDS Module.
//------------------------------------------------------------------------------
IOBUFDS IOBUFDS_2(
	// Inputs.
	.I   (v7ddrphy_dqs_o_delayed2),
	.T   (v7ddrphy_dqs_t2),

	// InOuts.
	.IO  (ddram_dqs_p[2]),
	.IOB (ddram_dqs_n[2])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_30 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_30 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_bitslip30[0]),
	.D2     (v7ddrphy_bitslip30[1]),
	.D3     (v7ddrphy_bitslip30[2]),
	.D4     (v7ddrphy_bitslip30[3]),
	.D5     (v7ddrphy_bitslip30[4]),
	.D6     (v7ddrphy_bitslip30[5]),
	.D7     (v7ddrphy_bitslip30[6]),
	.D8     (v7ddrphy_bitslip30[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),
	.T1     ((~v7ddrphy_dqs_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OFB    (v7ddrphy_dqs_o_no_delay3),
	.OQ     (v7ddrphy3),
	.TQ     (v7ddrphy_dqs_t3)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_30 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (3'd6),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_30 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[3] & v7ddrphy_wdly_dqs_inc_re)),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[3] & v7ddrphy_wdly_dqs_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dqs_o_delayed3),
	.ODATAIN  (v7ddrphy_dqs_o_no_delay3)
);

//------------------------------------------------------------------------------
// Instance IOBUFDS_3 of IOBUFDS Module.
//------------------------------------------------------------------------------
IOBUFDS IOBUFDS_3(
	// Inputs.
	.I   (v7ddrphy_dqs_o_delayed3),
	.T   (v7ddrphy_dqs_t3),

	// InOuts.
	.IO  (ddram_dqs_p[3]),
	.IOB (ddram_dqs_n[3])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_31 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_31 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_bitslip01[0]),
	.D2     (v7ddrphy_bitslip01[1]),
	.D3     (v7ddrphy_bitslip01[2]),
	.D4     (v7ddrphy_bitslip01[3]),
	.D5     (v7ddrphy_bitslip01[4]),
	.D6     (v7ddrphy_bitslip01[5]),
	.D7     (v7ddrphy_bitslip01[6]),
	.D8     (v7ddrphy_bitslip01[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (v7ddrphy_dm_o_nodelay0)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_31 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_31 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[0] & v7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[0] & v7ddrphy_wdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_dm[0]),
	.ODATAIN  (v7ddrphy_dm_o_nodelay0)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_32 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_32 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_bitslip11[0]),
	.D2     (v7ddrphy_bitslip11[1]),
	.D3     (v7ddrphy_bitslip11[2]),
	.D4     (v7ddrphy_bitslip11[3]),
	.D5     (v7ddrphy_bitslip11[4]),
	.D6     (v7ddrphy_bitslip11[5]),
	.D7     (v7ddrphy_bitslip11[6]),
	.D8     (v7ddrphy_bitslip11[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (v7ddrphy_dm_o_nodelay1)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_32 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_32 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[1] & v7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[1] & v7ddrphy_wdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_dm[1]),
	.ODATAIN  (v7ddrphy_dm_o_nodelay1)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_33 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_33 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_bitslip21[0]),
	.D2     (v7ddrphy_bitslip21[1]),
	.D3     (v7ddrphy_bitslip21[2]),
	.D4     (v7ddrphy_bitslip21[3]),
	.D5     (v7ddrphy_bitslip21[4]),
	.D6     (v7ddrphy_bitslip21[5]),
	.D7     (v7ddrphy_bitslip21[6]),
	.D8     (v7ddrphy_bitslip21[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (v7ddrphy_dm_o_nodelay2)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_33 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_33 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[2] & v7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[2] & v7ddrphy_wdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_dm[2]),
	.ODATAIN  (v7ddrphy_dm_o_nodelay2)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_34 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_34 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_bitslip31[0]),
	.D2     (v7ddrphy_bitslip31[1]),
	.D3     (v7ddrphy_bitslip31[2]),
	.D4     (v7ddrphy_bitslip31[3]),
	.D5     (v7ddrphy_bitslip31[4]),
	.D6     (v7ddrphy_bitslip31[5]),
	.D7     (v7ddrphy_bitslip31[6]),
	.D8     (v7ddrphy_bitslip31[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.OQ     (v7ddrphy_dm_o_nodelay3)
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_34 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_34 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[3] & v7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[3] & v7ddrphy_wdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (ddram_dm[3]),
	.ODATAIN  (v7ddrphy_dm_o_nodelay3)
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_35 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_35 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_bitslip02[0]),
	.D2     (v7ddrphy_bitslip02[1]),
	.D3     (v7ddrphy_bitslip02[2]),
	.D4     (v7ddrphy_bitslip02[3]),
	.D5     (v7ddrphy_bitslip02[4]),
	.D6     (v7ddrphy_bitslip02[5]),
	.D7     (v7ddrphy_bitslip02[6]),
	.D8     (v7ddrphy_bitslip02[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),
	.T1     ((~v7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (v7ddrphy_dq_o_nodelay0),
	.TQ     (v7ddrphy_dq_t0)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (v7ddrphy_dq_i_delayed0),
	.RST     ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (v7ddrphy_bitslip03[7]),
	.Q2      (v7ddrphy_bitslip03[6]),
	.Q3      (v7ddrphy_bitslip03[5]),
	.Q4      (v7ddrphy_bitslip03[4]),
	.Q5      (v7ddrphy_bitslip03[3]),
	.Q6      (v7ddrphy_bitslip03[2]),
	.Q7      (v7ddrphy_bitslip03[1]),
	.Q8      (v7ddrphy_bitslip03[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_35 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_35 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[0] & v7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[0] & v7ddrphy_wdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_o_delayed0),
	.ODATAIN  (v7ddrphy_dq_o_nodelay0)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[0] & v7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (v7ddrphy_dq_i_nodelay0),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[0] & v7ddrphy_rdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_i_delayed0)
);

//------------------------------------------------------------------------------
// Instance IOBUF of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF(
	// Inputs.
	.I  (v7ddrphy_dq_o_delayed0),
	.T  (v7ddrphy_dq_t0),

	// Outputs.
	.O  (v7ddrphy_dq_i_nodelay0),

	// InOuts.
	.IO (ddram_dq[0])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_36 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_36 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_bitslip12[0]),
	.D2     (v7ddrphy_bitslip12[1]),
	.D3     (v7ddrphy_bitslip12[2]),
	.D4     (v7ddrphy_bitslip12[3]),
	.D5     (v7ddrphy_bitslip12[4]),
	.D6     (v7ddrphy_bitslip12[5]),
	.D7     (v7ddrphy_bitslip12[6]),
	.D8     (v7ddrphy_bitslip12[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),
	.T1     ((~v7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (v7ddrphy_dq_o_nodelay1),
	.TQ     (v7ddrphy_dq_t1)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_1 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_1 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (v7ddrphy_dq_i_delayed1),
	.RST     ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (v7ddrphy_bitslip13[7]),
	.Q2      (v7ddrphy_bitslip13[6]),
	.Q3      (v7ddrphy_bitslip13[5]),
	.Q4      (v7ddrphy_bitslip13[4]),
	.Q5      (v7ddrphy_bitslip13[3]),
	.Q6      (v7ddrphy_bitslip13[2]),
	.Q7      (v7ddrphy_bitslip13[1]),
	.Q8      (v7ddrphy_bitslip13[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_36 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_36 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[0] & v7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[0] & v7ddrphy_wdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_o_delayed1),
	.ODATAIN  (v7ddrphy_dq_o_nodelay1)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_1 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_1 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[0] & v7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (v7ddrphy_dq_i_nodelay1),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[0] & v7ddrphy_rdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_i_delayed1)
);

//------------------------------------------------------------------------------
// Instance IOBUF_1 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_1(
	// Inputs.
	.I  (v7ddrphy_dq_o_delayed1),
	.T  (v7ddrphy_dq_t1),

	// Outputs.
	.O  (v7ddrphy_dq_i_nodelay1),

	// InOuts.
	.IO (ddram_dq[1])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_37 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_37 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_bitslip22[0]),
	.D2     (v7ddrphy_bitslip22[1]),
	.D3     (v7ddrphy_bitslip22[2]),
	.D4     (v7ddrphy_bitslip22[3]),
	.D5     (v7ddrphy_bitslip22[4]),
	.D6     (v7ddrphy_bitslip22[5]),
	.D7     (v7ddrphy_bitslip22[6]),
	.D8     (v7ddrphy_bitslip22[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),
	.T1     ((~v7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (v7ddrphy_dq_o_nodelay2),
	.TQ     (v7ddrphy_dq_t2)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_2 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_2 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (v7ddrphy_dq_i_delayed2),
	.RST     ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (v7ddrphy_bitslip23[7]),
	.Q2      (v7ddrphy_bitslip23[6]),
	.Q3      (v7ddrphy_bitslip23[5]),
	.Q4      (v7ddrphy_bitslip23[4]),
	.Q5      (v7ddrphy_bitslip23[3]),
	.Q6      (v7ddrphy_bitslip23[2]),
	.Q7      (v7ddrphy_bitslip23[1]),
	.Q8      (v7ddrphy_bitslip23[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_37 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_37 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[0] & v7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[0] & v7ddrphy_wdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_o_delayed2),
	.ODATAIN  (v7ddrphy_dq_o_nodelay2)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_2 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_2 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[0] & v7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (v7ddrphy_dq_i_nodelay2),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[0] & v7ddrphy_rdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_i_delayed2)
);

//------------------------------------------------------------------------------
// Instance IOBUF_2 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_2(
	// Inputs.
	.I  (v7ddrphy_dq_o_delayed2),
	.T  (v7ddrphy_dq_t2),

	// Outputs.
	.O  (v7ddrphy_dq_i_nodelay2),

	// InOuts.
	.IO (ddram_dq[2])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_38 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_38 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_bitslip32[0]),
	.D2     (v7ddrphy_bitslip32[1]),
	.D3     (v7ddrphy_bitslip32[2]),
	.D4     (v7ddrphy_bitslip32[3]),
	.D5     (v7ddrphy_bitslip32[4]),
	.D6     (v7ddrphy_bitslip32[5]),
	.D7     (v7ddrphy_bitslip32[6]),
	.D8     (v7ddrphy_bitslip32[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),
	.T1     ((~v7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (v7ddrphy_dq_o_nodelay3),
	.TQ     (v7ddrphy_dq_t3)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_3 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_3 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (v7ddrphy_dq_i_delayed3),
	.RST     ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (v7ddrphy_bitslip33[7]),
	.Q2      (v7ddrphy_bitslip33[6]),
	.Q3      (v7ddrphy_bitslip33[5]),
	.Q4      (v7ddrphy_bitslip33[4]),
	.Q5      (v7ddrphy_bitslip33[3]),
	.Q6      (v7ddrphy_bitslip33[2]),
	.Q7      (v7ddrphy_bitslip33[1]),
	.Q8      (v7ddrphy_bitslip33[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_38 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_38 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[0] & v7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[0] & v7ddrphy_wdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_o_delayed3),
	.ODATAIN  (v7ddrphy_dq_o_nodelay3)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_3 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_3 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[0] & v7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (v7ddrphy_dq_i_nodelay3),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[0] & v7ddrphy_rdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_i_delayed3)
);

//------------------------------------------------------------------------------
// Instance IOBUF_3 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_3(
	// Inputs.
	.I  (v7ddrphy_dq_o_delayed3),
	.T  (v7ddrphy_dq_t3),

	// Outputs.
	.O  (v7ddrphy_dq_i_nodelay3),

	// InOuts.
	.IO (ddram_dq[3])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_39 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_39 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_bitslip40[0]),
	.D2     (v7ddrphy_bitslip40[1]),
	.D3     (v7ddrphy_bitslip40[2]),
	.D4     (v7ddrphy_bitslip40[3]),
	.D5     (v7ddrphy_bitslip40[4]),
	.D6     (v7ddrphy_bitslip40[5]),
	.D7     (v7ddrphy_bitslip40[6]),
	.D8     (v7ddrphy_bitslip40[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),
	.T1     ((~v7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (v7ddrphy_dq_o_nodelay4),
	.TQ     (v7ddrphy_dq_t4)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_4 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_4 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (v7ddrphy_dq_i_delayed4),
	.RST     ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (v7ddrphy_bitslip41[7]),
	.Q2      (v7ddrphy_bitslip41[6]),
	.Q3      (v7ddrphy_bitslip41[5]),
	.Q4      (v7ddrphy_bitslip41[4]),
	.Q5      (v7ddrphy_bitslip41[3]),
	.Q6      (v7ddrphy_bitslip41[2]),
	.Q7      (v7ddrphy_bitslip41[1]),
	.Q8      (v7ddrphy_bitslip41[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_39 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_39 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[0] & v7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[0] & v7ddrphy_wdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_o_delayed4),
	.ODATAIN  (v7ddrphy_dq_o_nodelay4)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_4 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_4 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[0] & v7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (v7ddrphy_dq_i_nodelay4),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[0] & v7ddrphy_rdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_i_delayed4)
);

//------------------------------------------------------------------------------
// Instance IOBUF_4 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_4(
	// Inputs.
	.I  (v7ddrphy_dq_o_delayed4),
	.T  (v7ddrphy_dq_t4),

	// Outputs.
	.O  (v7ddrphy_dq_i_nodelay4),

	// InOuts.
	.IO (ddram_dq[4])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_40 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_40 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_bitslip50[0]),
	.D2     (v7ddrphy_bitslip50[1]),
	.D3     (v7ddrphy_bitslip50[2]),
	.D4     (v7ddrphy_bitslip50[3]),
	.D5     (v7ddrphy_bitslip50[4]),
	.D6     (v7ddrphy_bitslip50[5]),
	.D7     (v7ddrphy_bitslip50[6]),
	.D8     (v7ddrphy_bitslip50[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),
	.T1     ((~v7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (v7ddrphy_dq_o_nodelay5),
	.TQ     (v7ddrphy_dq_t5)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_5 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_5 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (v7ddrphy_dq_i_delayed5),
	.RST     ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (v7ddrphy_bitslip51[7]),
	.Q2      (v7ddrphy_bitslip51[6]),
	.Q3      (v7ddrphy_bitslip51[5]),
	.Q4      (v7ddrphy_bitslip51[4]),
	.Q5      (v7ddrphy_bitslip51[3]),
	.Q6      (v7ddrphy_bitslip51[2]),
	.Q7      (v7ddrphy_bitslip51[1]),
	.Q8      (v7ddrphy_bitslip51[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_40 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_40 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[0] & v7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[0] & v7ddrphy_wdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_o_delayed5),
	.ODATAIN  (v7ddrphy_dq_o_nodelay5)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_5 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_5 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[0] & v7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (v7ddrphy_dq_i_nodelay5),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[0] & v7ddrphy_rdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_i_delayed5)
);

//------------------------------------------------------------------------------
// Instance IOBUF_5 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_5(
	// Inputs.
	.I  (v7ddrphy_dq_o_delayed5),
	.T  (v7ddrphy_dq_t5),

	// Outputs.
	.O  (v7ddrphy_dq_i_nodelay5),

	// InOuts.
	.IO (ddram_dq[5])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_41 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_41 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_bitslip60[0]),
	.D2     (v7ddrphy_bitslip60[1]),
	.D3     (v7ddrphy_bitslip60[2]),
	.D4     (v7ddrphy_bitslip60[3]),
	.D5     (v7ddrphy_bitslip60[4]),
	.D6     (v7ddrphy_bitslip60[5]),
	.D7     (v7ddrphy_bitslip60[6]),
	.D8     (v7ddrphy_bitslip60[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),
	.T1     ((~v7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (v7ddrphy_dq_o_nodelay6),
	.TQ     (v7ddrphy_dq_t6)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_6 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_6 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (v7ddrphy_dq_i_delayed6),
	.RST     ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (v7ddrphy_bitslip61[7]),
	.Q2      (v7ddrphy_bitslip61[6]),
	.Q3      (v7ddrphy_bitslip61[5]),
	.Q4      (v7ddrphy_bitslip61[4]),
	.Q5      (v7ddrphy_bitslip61[3]),
	.Q6      (v7ddrphy_bitslip61[2]),
	.Q7      (v7ddrphy_bitslip61[1]),
	.Q8      (v7ddrphy_bitslip61[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_41 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_41 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[0] & v7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[0] & v7ddrphy_wdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_o_delayed6),
	.ODATAIN  (v7ddrphy_dq_o_nodelay6)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_6 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_6 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[0] & v7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (v7ddrphy_dq_i_nodelay6),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[0] & v7ddrphy_rdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_i_delayed6)
);

//------------------------------------------------------------------------------
// Instance IOBUF_6 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_6(
	// Inputs.
	.I  (v7ddrphy_dq_o_delayed6),
	.T  (v7ddrphy_dq_t6),

	// Outputs.
	.O  (v7ddrphy_dq_i_nodelay6),

	// InOuts.
	.IO (ddram_dq[6])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_42 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_42 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_bitslip70[0]),
	.D2     (v7ddrphy_bitslip70[1]),
	.D3     (v7ddrphy_bitslip70[2]),
	.D4     (v7ddrphy_bitslip70[3]),
	.D5     (v7ddrphy_bitslip70[4]),
	.D6     (v7ddrphy_bitslip70[5]),
	.D7     (v7ddrphy_bitslip70[6]),
	.D8     (v7ddrphy_bitslip70[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),
	.T1     ((~v7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (v7ddrphy_dq_o_nodelay7),
	.TQ     (v7ddrphy_dq_t7)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_7 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_7 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (v7ddrphy_dq_i_delayed7),
	.RST     ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (v7ddrphy_bitslip71[7]),
	.Q2      (v7ddrphy_bitslip71[6]),
	.Q3      (v7ddrphy_bitslip71[5]),
	.Q4      (v7ddrphy_bitslip71[4]),
	.Q5      (v7ddrphy_bitslip71[3]),
	.Q6      (v7ddrphy_bitslip71[2]),
	.Q7      (v7ddrphy_bitslip71[1]),
	.Q8      (v7ddrphy_bitslip71[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_42 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_42 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[0] & v7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[0] & v7ddrphy_wdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_o_delayed7),
	.ODATAIN  (v7ddrphy_dq_o_nodelay7)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_7 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_7 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[0] & v7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (v7ddrphy_dq_i_nodelay7),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[0] & v7ddrphy_rdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_i_delayed7)
);

//------------------------------------------------------------------------------
// Instance IOBUF_7 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_7(
	// Inputs.
	.I  (v7ddrphy_dq_o_delayed7),
	.T  (v7ddrphy_dq_t7),

	// Outputs.
	.O  (v7ddrphy_dq_i_nodelay7),

	// InOuts.
	.IO (ddram_dq[7])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_43 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_43 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_bitslip80[0]),
	.D2     (v7ddrphy_bitslip80[1]),
	.D3     (v7ddrphy_bitslip80[2]),
	.D4     (v7ddrphy_bitslip80[3]),
	.D5     (v7ddrphy_bitslip80[4]),
	.D6     (v7ddrphy_bitslip80[5]),
	.D7     (v7ddrphy_bitslip80[6]),
	.D8     (v7ddrphy_bitslip80[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),
	.T1     ((~v7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (v7ddrphy_dq_o_nodelay8),
	.TQ     (v7ddrphy_dq_t8)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_8 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_8 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (v7ddrphy_dq_i_delayed8),
	.RST     ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (v7ddrphy_bitslip81[7]),
	.Q2      (v7ddrphy_bitslip81[6]),
	.Q3      (v7ddrphy_bitslip81[5]),
	.Q4      (v7ddrphy_bitslip81[4]),
	.Q5      (v7ddrphy_bitslip81[3]),
	.Q6      (v7ddrphy_bitslip81[2]),
	.Q7      (v7ddrphy_bitslip81[1]),
	.Q8      (v7ddrphy_bitslip81[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_43 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_43 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[1] & v7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[1] & v7ddrphy_wdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_o_delayed8),
	.ODATAIN  (v7ddrphy_dq_o_nodelay8)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_8 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_8 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[1] & v7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (v7ddrphy_dq_i_nodelay8),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[1] & v7ddrphy_rdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_i_delayed8)
);

//------------------------------------------------------------------------------
// Instance IOBUF_8 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_8(
	// Inputs.
	.I  (v7ddrphy_dq_o_delayed8),
	.T  (v7ddrphy_dq_t8),

	// Outputs.
	.O  (v7ddrphy_dq_i_nodelay8),

	// InOuts.
	.IO (ddram_dq[8])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_44 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_44 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_bitslip90[0]),
	.D2     (v7ddrphy_bitslip90[1]),
	.D3     (v7ddrphy_bitslip90[2]),
	.D4     (v7ddrphy_bitslip90[3]),
	.D5     (v7ddrphy_bitslip90[4]),
	.D6     (v7ddrphy_bitslip90[5]),
	.D7     (v7ddrphy_bitslip90[6]),
	.D8     (v7ddrphy_bitslip90[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),
	.T1     ((~v7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (v7ddrphy_dq_o_nodelay9),
	.TQ     (v7ddrphy_dq_t9)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_9 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_9 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (v7ddrphy_dq_i_delayed9),
	.RST     ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (v7ddrphy_bitslip91[7]),
	.Q2      (v7ddrphy_bitslip91[6]),
	.Q3      (v7ddrphy_bitslip91[5]),
	.Q4      (v7ddrphy_bitslip91[4]),
	.Q5      (v7ddrphy_bitslip91[3]),
	.Q6      (v7ddrphy_bitslip91[2]),
	.Q7      (v7ddrphy_bitslip91[1]),
	.Q8      (v7ddrphy_bitslip91[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_44 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_44 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[1] & v7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[1] & v7ddrphy_wdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_o_delayed9),
	.ODATAIN  (v7ddrphy_dq_o_nodelay9)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_9 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_9 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[1] & v7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (v7ddrphy_dq_i_nodelay9),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[1] & v7ddrphy_rdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_i_delayed9)
);

//------------------------------------------------------------------------------
// Instance IOBUF_9 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_9(
	// Inputs.
	.I  (v7ddrphy_dq_o_delayed9),
	.T  (v7ddrphy_dq_t9),

	// Outputs.
	.O  (v7ddrphy_dq_i_nodelay9),

	// InOuts.
	.IO (ddram_dq[9])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_45 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_45 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_bitslip100[0]),
	.D2     (v7ddrphy_bitslip100[1]),
	.D3     (v7ddrphy_bitslip100[2]),
	.D4     (v7ddrphy_bitslip100[3]),
	.D5     (v7ddrphy_bitslip100[4]),
	.D6     (v7ddrphy_bitslip100[5]),
	.D7     (v7ddrphy_bitslip100[6]),
	.D8     (v7ddrphy_bitslip100[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),
	.T1     ((~v7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (v7ddrphy_dq_o_nodelay10),
	.TQ     (v7ddrphy_dq_t10)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_10 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_10 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (v7ddrphy_dq_i_delayed10),
	.RST     ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (v7ddrphy_bitslip101[7]),
	.Q2      (v7ddrphy_bitslip101[6]),
	.Q3      (v7ddrphy_bitslip101[5]),
	.Q4      (v7ddrphy_bitslip101[4]),
	.Q5      (v7ddrphy_bitslip101[3]),
	.Q6      (v7ddrphy_bitslip101[2]),
	.Q7      (v7ddrphy_bitslip101[1]),
	.Q8      (v7ddrphy_bitslip101[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_45 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_45 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[1] & v7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[1] & v7ddrphy_wdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_o_delayed10),
	.ODATAIN  (v7ddrphy_dq_o_nodelay10)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_10 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_10 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[1] & v7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (v7ddrphy_dq_i_nodelay10),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[1] & v7ddrphy_rdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_i_delayed10)
);

//------------------------------------------------------------------------------
// Instance IOBUF_10 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_10(
	// Inputs.
	.I  (v7ddrphy_dq_o_delayed10),
	.T  (v7ddrphy_dq_t10),

	// Outputs.
	.O  (v7ddrphy_dq_i_nodelay10),

	// InOuts.
	.IO (ddram_dq[10])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_46 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_46 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_bitslip110[0]),
	.D2     (v7ddrphy_bitslip110[1]),
	.D3     (v7ddrphy_bitslip110[2]),
	.D4     (v7ddrphy_bitslip110[3]),
	.D5     (v7ddrphy_bitslip110[4]),
	.D6     (v7ddrphy_bitslip110[5]),
	.D7     (v7ddrphy_bitslip110[6]),
	.D8     (v7ddrphy_bitslip110[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),
	.T1     ((~v7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (v7ddrphy_dq_o_nodelay11),
	.TQ     (v7ddrphy_dq_t11)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_11 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_11 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (v7ddrphy_dq_i_delayed11),
	.RST     ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (v7ddrphy_bitslip111[7]),
	.Q2      (v7ddrphy_bitslip111[6]),
	.Q3      (v7ddrphy_bitslip111[5]),
	.Q4      (v7ddrphy_bitslip111[4]),
	.Q5      (v7ddrphy_bitslip111[3]),
	.Q6      (v7ddrphy_bitslip111[2]),
	.Q7      (v7ddrphy_bitslip111[1]),
	.Q8      (v7ddrphy_bitslip111[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_46 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_46 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[1] & v7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[1] & v7ddrphy_wdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_o_delayed11),
	.ODATAIN  (v7ddrphy_dq_o_nodelay11)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_11 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_11 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[1] & v7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (v7ddrphy_dq_i_nodelay11),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[1] & v7ddrphy_rdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_i_delayed11)
);

//------------------------------------------------------------------------------
// Instance IOBUF_11 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_11(
	// Inputs.
	.I  (v7ddrphy_dq_o_delayed11),
	.T  (v7ddrphy_dq_t11),

	// Outputs.
	.O  (v7ddrphy_dq_i_nodelay11),

	// InOuts.
	.IO (ddram_dq[11])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_47 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_47 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_bitslip120[0]),
	.D2     (v7ddrphy_bitslip120[1]),
	.D3     (v7ddrphy_bitslip120[2]),
	.D4     (v7ddrphy_bitslip120[3]),
	.D5     (v7ddrphy_bitslip120[4]),
	.D6     (v7ddrphy_bitslip120[5]),
	.D7     (v7ddrphy_bitslip120[6]),
	.D8     (v7ddrphy_bitslip120[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),
	.T1     ((~v7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (v7ddrphy_dq_o_nodelay12),
	.TQ     (v7ddrphy_dq_t12)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_12 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_12 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (v7ddrphy_dq_i_delayed12),
	.RST     ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (v7ddrphy_bitslip121[7]),
	.Q2      (v7ddrphy_bitslip121[6]),
	.Q3      (v7ddrphy_bitslip121[5]),
	.Q4      (v7ddrphy_bitslip121[4]),
	.Q5      (v7ddrphy_bitslip121[3]),
	.Q6      (v7ddrphy_bitslip121[2]),
	.Q7      (v7ddrphy_bitslip121[1]),
	.Q8      (v7ddrphy_bitslip121[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_47 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_47 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[1] & v7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[1] & v7ddrphy_wdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_o_delayed12),
	.ODATAIN  (v7ddrphy_dq_o_nodelay12)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_12 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_12 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[1] & v7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (v7ddrphy_dq_i_nodelay12),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[1] & v7ddrphy_rdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_i_delayed12)
);

//------------------------------------------------------------------------------
// Instance IOBUF_12 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_12(
	// Inputs.
	.I  (v7ddrphy_dq_o_delayed12),
	.T  (v7ddrphy_dq_t12),

	// Outputs.
	.O  (v7ddrphy_dq_i_nodelay12),

	// InOuts.
	.IO (ddram_dq[12])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_48 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_48 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_bitslip130[0]),
	.D2     (v7ddrphy_bitslip130[1]),
	.D3     (v7ddrphy_bitslip130[2]),
	.D4     (v7ddrphy_bitslip130[3]),
	.D5     (v7ddrphy_bitslip130[4]),
	.D6     (v7ddrphy_bitslip130[5]),
	.D7     (v7ddrphy_bitslip130[6]),
	.D8     (v7ddrphy_bitslip130[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),
	.T1     ((~v7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (v7ddrphy_dq_o_nodelay13),
	.TQ     (v7ddrphy_dq_t13)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_13 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_13 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (v7ddrphy_dq_i_delayed13),
	.RST     ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (v7ddrphy_bitslip131[7]),
	.Q2      (v7ddrphy_bitslip131[6]),
	.Q3      (v7ddrphy_bitslip131[5]),
	.Q4      (v7ddrphy_bitslip131[4]),
	.Q5      (v7ddrphy_bitslip131[3]),
	.Q6      (v7ddrphy_bitslip131[2]),
	.Q7      (v7ddrphy_bitslip131[1]),
	.Q8      (v7ddrphy_bitslip131[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_48 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_48 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[1] & v7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[1] & v7ddrphy_wdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_o_delayed13),
	.ODATAIN  (v7ddrphy_dq_o_nodelay13)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_13 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_13 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[1] & v7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (v7ddrphy_dq_i_nodelay13),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[1] & v7ddrphy_rdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_i_delayed13)
);

//------------------------------------------------------------------------------
// Instance IOBUF_13 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_13(
	// Inputs.
	.I  (v7ddrphy_dq_o_delayed13),
	.T  (v7ddrphy_dq_t13),

	// Outputs.
	.O  (v7ddrphy_dq_i_nodelay13),

	// InOuts.
	.IO (ddram_dq[13])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_49 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_49 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_bitslip140[0]),
	.D2     (v7ddrphy_bitslip140[1]),
	.D3     (v7ddrphy_bitslip140[2]),
	.D4     (v7ddrphy_bitslip140[3]),
	.D5     (v7ddrphy_bitslip140[4]),
	.D6     (v7ddrphy_bitslip140[5]),
	.D7     (v7ddrphy_bitslip140[6]),
	.D8     (v7ddrphy_bitslip140[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),
	.T1     ((~v7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (v7ddrphy_dq_o_nodelay14),
	.TQ     (v7ddrphy_dq_t14)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_14 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_14 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (v7ddrphy_dq_i_delayed14),
	.RST     ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (v7ddrphy_bitslip141[7]),
	.Q2      (v7ddrphy_bitslip141[6]),
	.Q3      (v7ddrphy_bitslip141[5]),
	.Q4      (v7ddrphy_bitslip141[4]),
	.Q5      (v7ddrphy_bitslip141[3]),
	.Q6      (v7ddrphy_bitslip141[2]),
	.Q7      (v7ddrphy_bitslip141[1]),
	.Q8      (v7ddrphy_bitslip141[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_49 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_49 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[1] & v7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[1] & v7ddrphy_wdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_o_delayed14),
	.ODATAIN  (v7ddrphy_dq_o_nodelay14)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_14 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_14 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[1] & v7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (v7ddrphy_dq_i_nodelay14),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[1] & v7ddrphy_rdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_i_delayed14)
);

//------------------------------------------------------------------------------
// Instance IOBUF_14 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_14(
	// Inputs.
	.I  (v7ddrphy_dq_o_delayed14),
	.T  (v7ddrphy_dq_t14),

	// Outputs.
	.O  (v7ddrphy_dq_i_nodelay14),

	// InOuts.
	.IO (ddram_dq[14])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_50 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_50 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_bitslip150[0]),
	.D2     (v7ddrphy_bitslip150[1]),
	.D3     (v7ddrphy_bitslip150[2]),
	.D4     (v7ddrphy_bitslip150[3]),
	.D5     (v7ddrphy_bitslip150[4]),
	.D6     (v7ddrphy_bitslip150[5]),
	.D7     (v7ddrphy_bitslip150[6]),
	.D8     (v7ddrphy_bitslip150[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),
	.T1     ((~v7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (v7ddrphy_dq_o_nodelay15),
	.TQ     (v7ddrphy_dq_t15)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_15 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_15 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (v7ddrphy_dq_i_delayed15),
	.RST     ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (v7ddrphy_bitslip151[7]),
	.Q2      (v7ddrphy_bitslip151[6]),
	.Q3      (v7ddrphy_bitslip151[5]),
	.Q4      (v7ddrphy_bitslip151[4]),
	.Q5      (v7ddrphy_bitslip151[3]),
	.Q6      (v7ddrphy_bitslip151[2]),
	.Q7      (v7ddrphy_bitslip151[1]),
	.Q8      (v7ddrphy_bitslip151[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_50 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_50 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[1] & v7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[1] & v7ddrphy_wdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_o_delayed15),
	.ODATAIN  (v7ddrphy_dq_o_nodelay15)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_15 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_15 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[1] & v7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (v7ddrphy_dq_i_nodelay15),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[1] & v7ddrphy_rdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_i_delayed15)
);

//------------------------------------------------------------------------------
// Instance IOBUF_15 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_15(
	// Inputs.
	.I  (v7ddrphy_dq_o_delayed15),
	.T  (v7ddrphy_dq_t15),

	// Outputs.
	.O  (v7ddrphy_dq_i_nodelay15),

	// InOuts.
	.IO (ddram_dq[15])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_51 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_51 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_bitslip160[0]),
	.D2     (v7ddrphy_bitslip160[1]),
	.D3     (v7ddrphy_bitslip160[2]),
	.D4     (v7ddrphy_bitslip160[3]),
	.D5     (v7ddrphy_bitslip160[4]),
	.D6     (v7ddrphy_bitslip160[5]),
	.D7     (v7ddrphy_bitslip160[6]),
	.D8     (v7ddrphy_bitslip160[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),
	.T1     ((~v7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (v7ddrphy_dq_o_nodelay16),
	.TQ     (v7ddrphy_dq_t16)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_16 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_16 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (v7ddrphy_dq_i_delayed16),
	.RST     ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (v7ddrphy_bitslip161[7]),
	.Q2      (v7ddrphy_bitslip161[6]),
	.Q3      (v7ddrphy_bitslip161[5]),
	.Q4      (v7ddrphy_bitslip161[4]),
	.Q5      (v7ddrphy_bitslip161[3]),
	.Q6      (v7ddrphy_bitslip161[2]),
	.Q7      (v7ddrphy_bitslip161[1]),
	.Q8      (v7ddrphy_bitslip161[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_51 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_51 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[2] & v7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[2] & v7ddrphy_wdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_o_delayed16),
	.ODATAIN  (v7ddrphy_dq_o_nodelay16)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_16 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_16 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[2] & v7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (v7ddrphy_dq_i_nodelay16),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[2] & v7ddrphy_rdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_i_delayed16)
);

//------------------------------------------------------------------------------
// Instance IOBUF_16 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_16(
	// Inputs.
	.I  (v7ddrphy_dq_o_delayed16),
	.T  (v7ddrphy_dq_t16),

	// Outputs.
	.O  (v7ddrphy_dq_i_nodelay16),

	// InOuts.
	.IO (ddram_dq[16])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_52 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_52 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_bitslip170[0]),
	.D2     (v7ddrphy_bitslip170[1]),
	.D3     (v7ddrphy_bitslip170[2]),
	.D4     (v7ddrphy_bitslip170[3]),
	.D5     (v7ddrphy_bitslip170[4]),
	.D6     (v7ddrphy_bitslip170[5]),
	.D7     (v7ddrphy_bitslip170[6]),
	.D8     (v7ddrphy_bitslip170[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),
	.T1     ((~v7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (v7ddrphy_dq_o_nodelay17),
	.TQ     (v7ddrphy_dq_t17)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_17 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_17 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (v7ddrphy_dq_i_delayed17),
	.RST     ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (v7ddrphy_bitslip171[7]),
	.Q2      (v7ddrphy_bitslip171[6]),
	.Q3      (v7ddrphy_bitslip171[5]),
	.Q4      (v7ddrphy_bitslip171[4]),
	.Q5      (v7ddrphy_bitslip171[3]),
	.Q6      (v7ddrphy_bitslip171[2]),
	.Q7      (v7ddrphy_bitslip171[1]),
	.Q8      (v7ddrphy_bitslip171[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_52 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_52 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[2] & v7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[2] & v7ddrphy_wdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_o_delayed17),
	.ODATAIN  (v7ddrphy_dq_o_nodelay17)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_17 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_17 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[2] & v7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (v7ddrphy_dq_i_nodelay17),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[2] & v7ddrphy_rdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_i_delayed17)
);

//------------------------------------------------------------------------------
// Instance IOBUF_17 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_17(
	// Inputs.
	.I  (v7ddrphy_dq_o_delayed17),
	.T  (v7ddrphy_dq_t17),

	// Outputs.
	.O  (v7ddrphy_dq_i_nodelay17),

	// InOuts.
	.IO (ddram_dq[17])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_53 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_53 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_bitslip180[0]),
	.D2     (v7ddrphy_bitslip180[1]),
	.D3     (v7ddrphy_bitslip180[2]),
	.D4     (v7ddrphy_bitslip180[3]),
	.D5     (v7ddrphy_bitslip180[4]),
	.D6     (v7ddrphy_bitslip180[5]),
	.D7     (v7ddrphy_bitslip180[6]),
	.D8     (v7ddrphy_bitslip180[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),
	.T1     ((~v7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (v7ddrphy_dq_o_nodelay18),
	.TQ     (v7ddrphy_dq_t18)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_18 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_18 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (v7ddrphy_dq_i_delayed18),
	.RST     ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (v7ddrphy_bitslip181[7]),
	.Q2      (v7ddrphy_bitslip181[6]),
	.Q3      (v7ddrphy_bitslip181[5]),
	.Q4      (v7ddrphy_bitslip181[4]),
	.Q5      (v7ddrphy_bitslip181[3]),
	.Q6      (v7ddrphy_bitslip181[2]),
	.Q7      (v7ddrphy_bitslip181[1]),
	.Q8      (v7ddrphy_bitslip181[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_53 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_53 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[2] & v7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[2] & v7ddrphy_wdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_o_delayed18),
	.ODATAIN  (v7ddrphy_dq_o_nodelay18)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_18 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_18 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[2] & v7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (v7ddrphy_dq_i_nodelay18),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[2] & v7ddrphy_rdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_i_delayed18)
);

//------------------------------------------------------------------------------
// Instance IOBUF_18 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_18(
	// Inputs.
	.I  (v7ddrphy_dq_o_delayed18),
	.T  (v7ddrphy_dq_t18),

	// Outputs.
	.O  (v7ddrphy_dq_i_nodelay18),

	// InOuts.
	.IO (ddram_dq[18])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_54 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_54 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_bitslip190[0]),
	.D2     (v7ddrphy_bitslip190[1]),
	.D3     (v7ddrphy_bitslip190[2]),
	.D4     (v7ddrphy_bitslip190[3]),
	.D5     (v7ddrphy_bitslip190[4]),
	.D6     (v7ddrphy_bitslip190[5]),
	.D7     (v7ddrphy_bitslip190[6]),
	.D8     (v7ddrphy_bitslip190[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),
	.T1     ((~v7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (v7ddrphy_dq_o_nodelay19),
	.TQ     (v7ddrphy_dq_t19)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_19 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_19 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (v7ddrphy_dq_i_delayed19),
	.RST     ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (v7ddrphy_bitslip191[7]),
	.Q2      (v7ddrphy_bitslip191[6]),
	.Q3      (v7ddrphy_bitslip191[5]),
	.Q4      (v7ddrphy_bitslip191[4]),
	.Q5      (v7ddrphy_bitslip191[3]),
	.Q6      (v7ddrphy_bitslip191[2]),
	.Q7      (v7ddrphy_bitslip191[1]),
	.Q8      (v7ddrphy_bitslip191[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_54 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_54 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[2] & v7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[2] & v7ddrphy_wdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_o_delayed19),
	.ODATAIN  (v7ddrphy_dq_o_nodelay19)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_19 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_19 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[2] & v7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (v7ddrphy_dq_i_nodelay19),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[2] & v7ddrphy_rdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_i_delayed19)
);

//------------------------------------------------------------------------------
// Instance IOBUF_19 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_19(
	// Inputs.
	.I  (v7ddrphy_dq_o_delayed19),
	.T  (v7ddrphy_dq_t19),

	// Outputs.
	.O  (v7ddrphy_dq_i_nodelay19),

	// InOuts.
	.IO (ddram_dq[19])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_55 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_55 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_bitslip200[0]),
	.D2     (v7ddrphy_bitslip200[1]),
	.D3     (v7ddrphy_bitslip200[2]),
	.D4     (v7ddrphy_bitslip200[3]),
	.D5     (v7ddrphy_bitslip200[4]),
	.D6     (v7ddrphy_bitslip200[5]),
	.D7     (v7ddrphy_bitslip200[6]),
	.D8     (v7ddrphy_bitslip200[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),
	.T1     ((~v7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (v7ddrphy_dq_o_nodelay20),
	.TQ     (v7ddrphy_dq_t20)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_20 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_20 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (v7ddrphy_dq_i_delayed20),
	.RST     ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (v7ddrphy_bitslip201[7]),
	.Q2      (v7ddrphy_bitslip201[6]),
	.Q3      (v7ddrphy_bitslip201[5]),
	.Q4      (v7ddrphy_bitslip201[4]),
	.Q5      (v7ddrphy_bitslip201[3]),
	.Q6      (v7ddrphy_bitslip201[2]),
	.Q7      (v7ddrphy_bitslip201[1]),
	.Q8      (v7ddrphy_bitslip201[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_55 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_55 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[2] & v7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[2] & v7ddrphy_wdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_o_delayed20),
	.ODATAIN  (v7ddrphy_dq_o_nodelay20)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_20 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_20 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[2] & v7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (v7ddrphy_dq_i_nodelay20),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[2] & v7ddrphy_rdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_i_delayed20)
);

//------------------------------------------------------------------------------
// Instance IOBUF_20 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_20(
	// Inputs.
	.I  (v7ddrphy_dq_o_delayed20),
	.T  (v7ddrphy_dq_t20),

	// Outputs.
	.O  (v7ddrphy_dq_i_nodelay20),

	// InOuts.
	.IO (ddram_dq[20])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_56 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_56 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_bitslip210[0]),
	.D2     (v7ddrphy_bitslip210[1]),
	.D3     (v7ddrphy_bitslip210[2]),
	.D4     (v7ddrphy_bitslip210[3]),
	.D5     (v7ddrphy_bitslip210[4]),
	.D6     (v7ddrphy_bitslip210[5]),
	.D7     (v7ddrphy_bitslip210[6]),
	.D8     (v7ddrphy_bitslip210[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),
	.T1     ((~v7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (v7ddrphy_dq_o_nodelay21),
	.TQ     (v7ddrphy_dq_t21)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_21 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_21 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (v7ddrphy_dq_i_delayed21),
	.RST     ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (v7ddrphy_bitslip211[7]),
	.Q2      (v7ddrphy_bitslip211[6]),
	.Q3      (v7ddrphy_bitslip211[5]),
	.Q4      (v7ddrphy_bitslip211[4]),
	.Q5      (v7ddrphy_bitslip211[3]),
	.Q6      (v7ddrphy_bitslip211[2]),
	.Q7      (v7ddrphy_bitslip211[1]),
	.Q8      (v7ddrphy_bitslip211[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_56 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_56 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[2] & v7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[2] & v7ddrphy_wdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_o_delayed21),
	.ODATAIN  (v7ddrphy_dq_o_nodelay21)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_21 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_21 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[2] & v7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (v7ddrphy_dq_i_nodelay21),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[2] & v7ddrphy_rdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_i_delayed21)
);

//------------------------------------------------------------------------------
// Instance IOBUF_21 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_21(
	// Inputs.
	.I  (v7ddrphy_dq_o_delayed21),
	.T  (v7ddrphy_dq_t21),

	// Outputs.
	.O  (v7ddrphy_dq_i_nodelay21),

	// InOuts.
	.IO (ddram_dq[21])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_57 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_57 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_bitslip220[0]),
	.D2     (v7ddrphy_bitslip220[1]),
	.D3     (v7ddrphy_bitslip220[2]),
	.D4     (v7ddrphy_bitslip220[3]),
	.D5     (v7ddrphy_bitslip220[4]),
	.D6     (v7ddrphy_bitslip220[5]),
	.D7     (v7ddrphy_bitslip220[6]),
	.D8     (v7ddrphy_bitslip220[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),
	.T1     ((~v7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (v7ddrphy_dq_o_nodelay22),
	.TQ     (v7ddrphy_dq_t22)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_22 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_22 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (v7ddrphy_dq_i_delayed22),
	.RST     ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (v7ddrphy_bitslip221[7]),
	.Q2      (v7ddrphy_bitslip221[6]),
	.Q3      (v7ddrphy_bitslip221[5]),
	.Q4      (v7ddrphy_bitslip221[4]),
	.Q5      (v7ddrphy_bitslip221[3]),
	.Q6      (v7ddrphy_bitslip221[2]),
	.Q7      (v7ddrphy_bitslip221[1]),
	.Q8      (v7ddrphy_bitslip221[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_57 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_57 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[2] & v7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[2] & v7ddrphy_wdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_o_delayed22),
	.ODATAIN  (v7ddrphy_dq_o_nodelay22)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_22 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_22 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[2] & v7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (v7ddrphy_dq_i_nodelay22),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[2] & v7ddrphy_rdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_i_delayed22)
);

//------------------------------------------------------------------------------
// Instance IOBUF_22 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_22(
	// Inputs.
	.I  (v7ddrphy_dq_o_delayed22),
	.T  (v7ddrphy_dq_t22),

	// Outputs.
	.O  (v7ddrphy_dq_i_nodelay22),

	// InOuts.
	.IO (ddram_dq[22])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_58 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_58 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_bitslip230[0]),
	.D2     (v7ddrphy_bitslip230[1]),
	.D3     (v7ddrphy_bitslip230[2]),
	.D4     (v7ddrphy_bitslip230[3]),
	.D5     (v7ddrphy_bitslip230[4]),
	.D6     (v7ddrphy_bitslip230[5]),
	.D7     (v7ddrphy_bitslip230[6]),
	.D8     (v7ddrphy_bitslip230[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),
	.T1     ((~v7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (v7ddrphy_dq_o_nodelay23),
	.TQ     (v7ddrphy_dq_t23)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_23 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_23 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (v7ddrphy_dq_i_delayed23),
	.RST     ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (v7ddrphy_bitslip231[7]),
	.Q2      (v7ddrphy_bitslip231[6]),
	.Q3      (v7ddrphy_bitslip231[5]),
	.Q4      (v7ddrphy_bitslip231[4]),
	.Q5      (v7ddrphy_bitslip231[3]),
	.Q6      (v7ddrphy_bitslip231[2]),
	.Q7      (v7ddrphy_bitslip231[1]),
	.Q8      (v7ddrphy_bitslip231[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_58 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_58 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[2] & v7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[2] & v7ddrphy_wdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_o_delayed23),
	.ODATAIN  (v7ddrphy_dq_o_nodelay23)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_23 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_23 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[2] & v7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (v7ddrphy_dq_i_nodelay23),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[2] & v7ddrphy_rdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_i_delayed23)
);

//------------------------------------------------------------------------------
// Instance IOBUF_23 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_23(
	// Inputs.
	.I  (v7ddrphy_dq_o_delayed23),
	.T  (v7ddrphy_dq_t23),

	// Outputs.
	.O  (v7ddrphy_dq_i_nodelay23),

	// InOuts.
	.IO (ddram_dq[23])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_59 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_59 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_bitslip240[0]),
	.D2     (v7ddrphy_bitslip240[1]),
	.D3     (v7ddrphy_bitslip240[2]),
	.D4     (v7ddrphy_bitslip240[3]),
	.D5     (v7ddrphy_bitslip240[4]),
	.D6     (v7ddrphy_bitslip240[5]),
	.D7     (v7ddrphy_bitslip240[6]),
	.D8     (v7ddrphy_bitslip240[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),
	.T1     ((~v7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (v7ddrphy_dq_o_nodelay24),
	.TQ     (v7ddrphy_dq_t24)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_24 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_24 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (v7ddrphy_dq_i_delayed24),
	.RST     ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (v7ddrphy_bitslip241[7]),
	.Q2      (v7ddrphy_bitslip241[6]),
	.Q3      (v7ddrphy_bitslip241[5]),
	.Q4      (v7ddrphy_bitslip241[4]),
	.Q5      (v7ddrphy_bitslip241[3]),
	.Q6      (v7ddrphy_bitslip241[2]),
	.Q7      (v7ddrphy_bitslip241[1]),
	.Q8      (v7ddrphy_bitslip241[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_59 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_59 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[3] & v7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[3] & v7ddrphy_wdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_o_delayed24),
	.ODATAIN  (v7ddrphy_dq_o_nodelay24)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_24 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_24 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[3] & v7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (v7ddrphy_dq_i_nodelay24),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[3] & v7ddrphy_rdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_i_delayed24)
);

//------------------------------------------------------------------------------
// Instance IOBUF_24 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_24(
	// Inputs.
	.I  (v7ddrphy_dq_o_delayed24),
	.T  (v7ddrphy_dq_t24),

	// Outputs.
	.O  (v7ddrphy_dq_i_nodelay24),

	// InOuts.
	.IO (ddram_dq[24])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_60 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_60 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_bitslip250[0]),
	.D2     (v7ddrphy_bitslip250[1]),
	.D3     (v7ddrphy_bitslip250[2]),
	.D4     (v7ddrphy_bitslip250[3]),
	.D5     (v7ddrphy_bitslip250[4]),
	.D6     (v7ddrphy_bitslip250[5]),
	.D7     (v7ddrphy_bitslip250[6]),
	.D8     (v7ddrphy_bitslip250[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),
	.T1     ((~v7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (v7ddrphy_dq_o_nodelay25),
	.TQ     (v7ddrphy_dq_t25)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_25 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_25 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (v7ddrphy_dq_i_delayed25),
	.RST     ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (v7ddrphy_bitslip251[7]),
	.Q2      (v7ddrphy_bitslip251[6]),
	.Q3      (v7ddrphy_bitslip251[5]),
	.Q4      (v7ddrphy_bitslip251[4]),
	.Q5      (v7ddrphy_bitslip251[3]),
	.Q6      (v7ddrphy_bitslip251[2]),
	.Q7      (v7ddrphy_bitslip251[1]),
	.Q8      (v7ddrphy_bitslip251[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_60 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_60 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[3] & v7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[3] & v7ddrphy_wdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_o_delayed25),
	.ODATAIN  (v7ddrphy_dq_o_nodelay25)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_25 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_25 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[3] & v7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (v7ddrphy_dq_i_nodelay25),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[3] & v7ddrphy_rdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_i_delayed25)
);

//------------------------------------------------------------------------------
// Instance IOBUF_25 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_25(
	// Inputs.
	.I  (v7ddrphy_dq_o_delayed25),
	.T  (v7ddrphy_dq_t25),

	// Outputs.
	.O  (v7ddrphy_dq_i_nodelay25),

	// InOuts.
	.IO (ddram_dq[25])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_61 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_61 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_bitslip260[0]),
	.D2     (v7ddrphy_bitslip260[1]),
	.D3     (v7ddrphy_bitslip260[2]),
	.D4     (v7ddrphy_bitslip260[3]),
	.D5     (v7ddrphy_bitslip260[4]),
	.D6     (v7ddrphy_bitslip260[5]),
	.D7     (v7ddrphy_bitslip260[6]),
	.D8     (v7ddrphy_bitslip260[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),
	.T1     ((~v7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (v7ddrphy_dq_o_nodelay26),
	.TQ     (v7ddrphy_dq_t26)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_26 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_26 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (v7ddrphy_dq_i_delayed26),
	.RST     ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (v7ddrphy_bitslip261[7]),
	.Q2      (v7ddrphy_bitslip261[6]),
	.Q3      (v7ddrphy_bitslip261[5]),
	.Q4      (v7ddrphy_bitslip261[4]),
	.Q5      (v7ddrphy_bitslip261[3]),
	.Q6      (v7ddrphy_bitslip261[2]),
	.Q7      (v7ddrphy_bitslip261[1]),
	.Q8      (v7ddrphy_bitslip261[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_61 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_61 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[3] & v7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[3] & v7ddrphy_wdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_o_delayed26),
	.ODATAIN  (v7ddrphy_dq_o_nodelay26)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_26 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_26 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[3] & v7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (v7ddrphy_dq_i_nodelay26),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[3] & v7ddrphy_rdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_i_delayed26)
);

//------------------------------------------------------------------------------
// Instance IOBUF_26 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_26(
	// Inputs.
	.I  (v7ddrphy_dq_o_delayed26),
	.T  (v7ddrphy_dq_t26),

	// Outputs.
	.O  (v7ddrphy_dq_i_nodelay26),

	// InOuts.
	.IO (ddram_dq[26])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_62 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_62 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_bitslip270[0]),
	.D2     (v7ddrphy_bitslip270[1]),
	.D3     (v7ddrphy_bitslip270[2]),
	.D4     (v7ddrphy_bitslip270[3]),
	.D5     (v7ddrphy_bitslip270[4]),
	.D6     (v7ddrphy_bitslip270[5]),
	.D7     (v7ddrphy_bitslip270[6]),
	.D8     (v7ddrphy_bitslip270[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),
	.T1     ((~v7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (v7ddrphy_dq_o_nodelay27),
	.TQ     (v7ddrphy_dq_t27)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_27 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_27 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (v7ddrphy_dq_i_delayed27),
	.RST     ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (v7ddrphy_bitslip271[7]),
	.Q2      (v7ddrphy_bitslip271[6]),
	.Q3      (v7ddrphy_bitslip271[5]),
	.Q4      (v7ddrphy_bitslip271[4]),
	.Q5      (v7ddrphy_bitslip271[3]),
	.Q6      (v7ddrphy_bitslip271[2]),
	.Q7      (v7ddrphy_bitslip271[1]),
	.Q8      (v7ddrphy_bitslip271[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_62 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_62 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[3] & v7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[3] & v7ddrphy_wdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_o_delayed27),
	.ODATAIN  (v7ddrphy_dq_o_nodelay27)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_27 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_27 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[3] & v7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (v7ddrphy_dq_i_nodelay27),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[3] & v7ddrphy_rdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_i_delayed27)
);

//------------------------------------------------------------------------------
// Instance IOBUF_27 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_27(
	// Inputs.
	.I  (v7ddrphy_dq_o_delayed27),
	.T  (v7ddrphy_dq_t27),

	// Outputs.
	.O  (v7ddrphy_dq_i_nodelay27),

	// InOuts.
	.IO (ddram_dq[27])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_63 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_63 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_bitslip280[0]),
	.D2     (v7ddrphy_bitslip280[1]),
	.D3     (v7ddrphy_bitslip280[2]),
	.D4     (v7ddrphy_bitslip280[3]),
	.D5     (v7ddrphy_bitslip280[4]),
	.D6     (v7ddrphy_bitslip280[5]),
	.D7     (v7ddrphy_bitslip280[6]),
	.D8     (v7ddrphy_bitslip280[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),
	.T1     ((~v7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (v7ddrphy_dq_o_nodelay28),
	.TQ     (v7ddrphy_dq_t28)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_28 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_28 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (v7ddrphy_dq_i_delayed28),
	.RST     ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (v7ddrphy_bitslip281[7]),
	.Q2      (v7ddrphy_bitslip281[6]),
	.Q3      (v7ddrphy_bitslip281[5]),
	.Q4      (v7ddrphy_bitslip281[4]),
	.Q5      (v7ddrphy_bitslip281[3]),
	.Q6      (v7ddrphy_bitslip281[2]),
	.Q7      (v7ddrphy_bitslip281[1]),
	.Q8      (v7ddrphy_bitslip281[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_63 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_63 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[3] & v7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[3] & v7ddrphy_wdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_o_delayed28),
	.ODATAIN  (v7ddrphy_dq_o_nodelay28)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_28 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_28 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[3] & v7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (v7ddrphy_dq_i_nodelay28),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[3] & v7ddrphy_rdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_i_delayed28)
);

//------------------------------------------------------------------------------
// Instance IOBUF_28 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_28(
	// Inputs.
	.I  (v7ddrphy_dq_o_delayed28),
	.T  (v7ddrphy_dq_t28),

	// Outputs.
	.O  (v7ddrphy_dq_i_nodelay28),

	// InOuts.
	.IO (ddram_dq[28])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_64 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_64 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_bitslip290[0]),
	.D2     (v7ddrphy_bitslip290[1]),
	.D3     (v7ddrphy_bitslip290[2]),
	.D4     (v7ddrphy_bitslip290[3]),
	.D5     (v7ddrphy_bitslip290[4]),
	.D6     (v7ddrphy_bitslip290[5]),
	.D7     (v7ddrphy_bitslip290[6]),
	.D8     (v7ddrphy_bitslip290[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),
	.T1     ((~v7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (v7ddrphy_dq_o_nodelay29),
	.TQ     (v7ddrphy_dq_t29)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_29 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_29 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (v7ddrphy_dq_i_delayed29),
	.RST     ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (v7ddrphy_bitslip291[7]),
	.Q2      (v7ddrphy_bitslip291[6]),
	.Q3      (v7ddrphy_bitslip291[5]),
	.Q4      (v7ddrphy_bitslip291[4]),
	.Q5      (v7ddrphy_bitslip291[3]),
	.Q6      (v7ddrphy_bitslip291[2]),
	.Q7      (v7ddrphy_bitslip291[1]),
	.Q8      (v7ddrphy_bitslip291[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_64 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_64 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[3] & v7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[3] & v7ddrphy_wdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_o_delayed29),
	.ODATAIN  (v7ddrphy_dq_o_nodelay29)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_29 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_29 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[3] & v7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (v7ddrphy_dq_i_nodelay29),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[3] & v7ddrphy_rdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_i_delayed29)
);

//------------------------------------------------------------------------------
// Instance IOBUF_29 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_29(
	// Inputs.
	.I  (v7ddrphy_dq_o_delayed29),
	.T  (v7ddrphy_dq_t29),

	// Outputs.
	.O  (v7ddrphy_dq_i_nodelay29),

	// InOuts.
	.IO (ddram_dq[29])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_65 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_65 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_bitslip300[0]),
	.D2     (v7ddrphy_bitslip300[1]),
	.D3     (v7ddrphy_bitslip300[2]),
	.D4     (v7ddrphy_bitslip300[3]),
	.D5     (v7ddrphy_bitslip300[4]),
	.D6     (v7ddrphy_bitslip300[5]),
	.D7     (v7ddrphy_bitslip300[6]),
	.D8     (v7ddrphy_bitslip300[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),
	.T1     ((~v7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (v7ddrphy_dq_o_nodelay30),
	.TQ     (v7ddrphy_dq_t30)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_30 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_30 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (v7ddrphy_dq_i_delayed30),
	.RST     ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (v7ddrphy_bitslip301[7]),
	.Q2      (v7ddrphy_bitslip301[6]),
	.Q3      (v7ddrphy_bitslip301[5]),
	.Q4      (v7ddrphy_bitslip301[4]),
	.Q5      (v7ddrphy_bitslip301[3]),
	.Q6      (v7ddrphy_bitslip301[2]),
	.Q7      (v7ddrphy_bitslip301[1]),
	.Q8      (v7ddrphy_bitslip301[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_65 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_65 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[3] & v7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[3] & v7ddrphy_wdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_o_delayed30),
	.ODATAIN  (v7ddrphy_dq_o_nodelay30)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_30 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_30 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[3] & v7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (v7ddrphy_dq_i_nodelay30),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[3] & v7ddrphy_rdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_i_delayed30)
);

//------------------------------------------------------------------------------
// Instance IOBUF_30 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_30(
	// Inputs.
	.I  (v7ddrphy_dq_o_delayed30),
	.T  (v7ddrphy_dq_t30),

	// Outputs.
	.O  (v7ddrphy_dq_i_nodelay30),

	// InOuts.
	.IO (ddram_dq[30])
);

//------------------------------------------------------------------------------
// Instance OSERDESE2_66 of OSERDESE2 Module.
//------------------------------------------------------------------------------
OSERDESE2 #(
	// Parameters.
	.DATA_RATE_OQ   ("DDR"),
	.DATA_RATE_TQ   ("BUF"),
	.DATA_WIDTH     (4'd8),
	.SERDES_MODE    ("MASTER"),
	.TRISTATE_WIDTH (1'd1)
) OSERDESE2_66 (
	// Inputs.
	.CLK    (sys4x_clk),
	.CLKDIV (sys_clk),
	.D1     (v7ddrphy_bitslip310[0]),
	.D2     (v7ddrphy_bitslip310[1]),
	.D3     (v7ddrphy_bitslip310[2]),
	.D4     (v7ddrphy_bitslip310[3]),
	.D5     (v7ddrphy_bitslip310[4]),
	.D6     (v7ddrphy_bitslip310[5]),
	.D7     (v7ddrphy_bitslip310[6]),
	.D8     (v7ddrphy_bitslip310[7]),
	.OCE    (1'd1),
	.RST    ((sys_rst | v7ddrphy_rst_storage)),
	.T1     ((~v7ddrphy_dq_oe_delay_tappeddelayline_tappeddelayline1)),
	.TCE    (1'd1),

	// Outputs.
	.OQ     (v7ddrphy_dq_o_nodelay31),
	.TQ     (v7ddrphy_dq_t31)
);

//------------------------------------------------------------------------------
// Instance ISERDESE2_31 of ISERDESE2 Module.
//------------------------------------------------------------------------------
ISERDESE2 #(
	// Parameters.
	.DATA_RATE      ("DDR"),
	.DATA_WIDTH     (4'd8),
	.INTERFACE_TYPE ("NETWORKING"),
	.IOBDELAY       ("IFD"),
	.NUM_CE         (1'd1),
	.SERDES_MODE    ("MASTER")
) ISERDESE2_31 (
	// Inputs.
	.BITSLIP (1'd0),
	.CE1     (1'd1),
	.CLK     (sys4x_clk),
	.CLKB    ((~sys4x_clk)),
	.CLKDIV  (sys_clk),
	.DDLY    (v7ddrphy_dq_i_delayed31),
	.RST     ((sys_rst | v7ddrphy_rst_storage)),

	// Outputs.
	.Q1      (v7ddrphy_bitslip311[7]),
	.Q2      (v7ddrphy_bitslip311[6]),
	.Q3      (v7ddrphy_bitslip311[5]),
	.Q4      (v7ddrphy_bitslip311[4]),
	.Q5      (v7ddrphy_bitslip311[3]),
	.Q6      (v7ddrphy_bitslip311[2]),
	.Q7      (v7ddrphy_bitslip311[1]),
	.Q8      (v7ddrphy_bitslip311[0])
);

//------------------------------------------------------------------------------
// Instance ODELAYE2_66 of ODELAYE2 Module.
//------------------------------------------------------------------------------
ODELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("ODATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.ODELAY_TYPE           ("VARIABLE"),
	.ODELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) ODELAYE2_66 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[3] & v7ddrphy_wdly_dq_inc_re)),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[3] & v7ddrphy_wdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_o_delayed31),
	.ODATAIN  (v7ddrphy_dq_o_nodelay31)
);

//------------------------------------------------------------------------------
// Instance IDELAYE2_31 of IDELAYE2 Module.
//------------------------------------------------------------------------------
IDELAYE2 #(
	// Parameters.
	.CINVCTRL_SEL          ("FALSE"),
	.DELAY_SRC             ("IDATAIN"),
	.HIGH_PERFORMANCE_MODE ("TRUE"),
	.IDELAY_TYPE           ("VARIABLE"),
	.IDELAY_VALUE          (1'd0),
	.PIPE_SEL              ("FALSE"),
	.REFCLK_FREQUENCY      (200.0),
	.SIGNAL_PATTERN        ("DATA")
) IDELAYE2_31 (
	// Inputs.
	.C        (sys_clk),
	.CE       ((v7ddrphy_dly_sel_storage[3] & v7ddrphy_rdly_dq_inc_re)),
	.IDATAIN  (v7ddrphy_dq_i_nodelay31),
	.INC      (1'd1),
	.LD       (((v7ddrphy_dly_sel_storage[3] & v7ddrphy_rdly_dq_rst_re) | v7ddrphy_rst_storage)),
	.LDPIPEEN (1'd0),

	// Outputs.
	.DATAOUT  (v7ddrphy_dq_i_delayed31)
);

//------------------------------------------------------------------------------
// Instance IOBUF_31 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_31(
	// Inputs.
	.I  (v7ddrphy_dq_o_delayed31),
	.T  (v7ddrphy_dq_t31),

	// Outputs.
	.O  (v7ddrphy_dq_i_nodelay31),

	// InOuts.
	.IO (ddram_dq[31])
);

//------------------------------------------------------------------------------
// Memory storage_2: 8-words x 24-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 24 
// Port 1 | Read: Async | Write: ---- | 
reg [23:0] storage_2[0:7];
reg [23:0] storage_2_dat0;
always @(posedge sys_clk) begin
	if (soclinux_bankmachine0_wrport_we)
		storage_2[soclinux_bankmachine0_wrport_adr] <= soclinux_bankmachine0_wrport_dat_w;
	storage_2_dat0 <= storage_2[soclinux_bankmachine0_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign soclinux_bankmachine0_wrport_dat_r = storage_2_dat0;
assign soclinux_bankmachine0_rdport_dat_r = storage_2[soclinux_bankmachine0_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_3: 8-words x 24-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 24 
// Port 1 | Read: Async | Write: ---- | 
reg [23:0] storage_3[0:7];
reg [23:0] storage_3_dat0;
always @(posedge sys_clk) begin
	if (soclinux_bankmachine1_wrport_we)
		storage_3[soclinux_bankmachine1_wrport_adr] <= soclinux_bankmachine1_wrport_dat_w;
	storage_3_dat0 <= storage_3[soclinux_bankmachine1_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign soclinux_bankmachine1_wrport_dat_r = storage_3_dat0;
assign soclinux_bankmachine1_rdport_dat_r = storage_3[soclinux_bankmachine1_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_4: 8-words x 24-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 24 
// Port 1 | Read: Async | Write: ---- | 
reg [23:0] storage_4[0:7];
reg [23:0] storage_4_dat0;
always @(posedge sys_clk) begin
	if (soclinux_bankmachine2_wrport_we)
		storage_4[soclinux_bankmachine2_wrport_adr] <= soclinux_bankmachine2_wrport_dat_w;
	storage_4_dat0 <= storage_4[soclinux_bankmachine2_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign soclinux_bankmachine2_wrport_dat_r = storage_4_dat0;
assign soclinux_bankmachine2_rdport_dat_r = storage_4[soclinux_bankmachine2_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_5: 8-words x 24-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 24 
// Port 1 | Read: Async | Write: ---- | 
reg [23:0] storage_5[0:7];
reg [23:0] storage_5_dat0;
always @(posedge sys_clk) begin
	if (soclinux_bankmachine3_wrport_we)
		storage_5[soclinux_bankmachine3_wrport_adr] <= soclinux_bankmachine3_wrport_dat_w;
	storage_5_dat0 <= storage_5[soclinux_bankmachine3_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign soclinux_bankmachine3_wrport_dat_r = storage_5_dat0;
assign soclinux_bankmachine3_rdport_dat_r = storage_5[soclinux_bankmachine3_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_6: 8-words x 24-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 24 
// Port 1 | Read: Async | Write: ---- | 
reg [23:0] storage_6[0:7];
reg [23:0] storage_6_dat0;
always @(posedge sys_clk) begin
	if (soclinux_bankmachine4_wrport_we)
		storage_6[soclinux_bankmachine4_wrport_adr] <= soclinux_bankmachine4_wrport_dat_w;
	storage_6_dat0 <= storage_6[soclinux_bankmachine4_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign soclinux_bankmachine4_wrport_dat_r = storage_6_dat0;
assign soclinux_bankmachine4_rdport_dat_r = storage_6[soclinux_bankmachine4_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_7: 8-words x 24-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 24 
// Port 1 | Read: Async | Write: ---- | 
reg [23:0] storage_7[0:7];
reg [23:0] storage_7_dat0;
always @(posedge sys_clk) begin
	if (soclinux_bankmachine5_wrport_we)
		storage_7[soclinux_bankmachine5_wrport_adr] <= soclinux_bankmachine5_wrport_dat_w;
	storage_7_dat0 <= storage_7[soclinux_bankmachine5_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign soclinux_bankmachine5_wrport_dat_r = storage_7_dat0;
assign soclinux_bankmachine5_rdport_dat_r = storage_7[soclinux_bankmachine5_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_8: 8-words x 24-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 24 
// Port 1 | Read: Async | Write: ---- | 
reg [23:0] storage_8[0:7];
reg [23:0] storage_8_dat0;
always @(posedge sys_clk) begin
	if (soclinux_bankmachine6_wrport_we)
		storage_8[soclinux_bankmachine6_wrport_adr] <= soclinux_bankmachine6_wrport_dat_w;
	storage_8_dat0 <= storage_8[soclinux_bankmachine6_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign soclinux_bankmachine6_wrport_dat_r = storage_8_dat0;
assign soclinux_bankmachine6_rdport_dat_r = storage_8[soclinux_bankmachine6_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_9: 8-words x 24-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 24 
// Port 1 | Read: Async | Write: ---- | 
reg [23:0] storage_9[0:7];
reg [23:0] storage_9_dat0;
always @(posedge sys_clk) begin
	if (soclinux_bankmachine7_wrport_we)
		storage_9[soclinux_bankmachine7_wrport_adr] <= soclinux_bankmachine7_wrport_dat_w;
	storage_9_dat0 <= storage_9[soclinux_bankmachine7_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign soclinux_bankmachine7_wrport_dat_r = storage_9_dat0;
assign soclinux_bankmachine7_rdport_dat_r = storage_9[soclinux_bankmachine7_rdport_adr];


//------------------------------------------------------------------------------
// Instance adder of adder Module.
//------------------------------------------------------------------------------
adder adder(
	// Inputs.
	.in1    (in1_storage),
	.in2    (in2_storage),

	// Outputs.
	.result (result_status)
);

//------------------------------------------------------------------------------
// Memory storage_10: 8-words x 10-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 10 
// Port 1 | Read: Async | Write: ---- | 
reg [9:0] storage_10[0:7];
reg [9:0] storage_10_dat0;
always @(posedge sys_clk) begin
	if (sdcard_core_fifo_wrport_we)
		storage_10[sdcard_core_fifo_wrport_adr] <= sdcard_core_fifo_wrport_dat_w;
	storage_10_dat0 <= storage_10[sdcard_core_fifo_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign sdcard_core_fifo_wrport_dat_r = storage_10_dat0;
assign sdcard_core_fifo_rdport_dat_r = storage_10[sdcard_core_fifo_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_11: 512-words x 10-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 10 
// Port 1 | Read: Sync  | Write: ---- | 
reg [9:0] storage_11[0:511];
reg [9:0] storage_11_dat0;
reg [9:0] storage_11_dat1;
always @(posedge sys_clk) begin
	if (sdcard_block2mem_fifo_wrport_we)
		storage_11[sdcard_block2mem_fifo_wrport_adr] <= sdcard_block2mem_fifo_wrport_dat_w;
	storage_11_dat0 <= storage_11[sdcard_block2mem_fifo_wrport_adr];
end
always @(posedge sys_clk) begin
	if (sdcard_block2mem_fifo_rdport_re)
		storage_11_dat1 <= storage_11[sdcard_block2mem_fifo_rdport_adr];
end
assign sdcard_block2mem_fifo_wrport_dat_r = storage_11_dat0;
assign sdcard_block2mem_fifo_rdport_dat_r = storage_11_dat1;


//------------------------------------------------------------------------------
// Memory storage_12: 16-words x 34-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 34 
// Port 1 | Read: Async | Write: ---- | 
reg [33:0] storage_12[0:15];
reg [33:0] storage_12_dat0;
always @(posedge sys_clk) begin
	if (sdcard_mem2block_dma_fifo_wrport_we)
		storage_12[sdcard_mem2block_dma_fifo_wrport_adr] <= sdcard_mem2block_dma_fifo_wrport_dat_w;
	storage_12_dat0 <= storage_12[sdcard_mem2block_dma_fifo_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign sdcard_mem2block_dma_fifo_wrport_dat_r = storage_12_dat0;
assign sdcard_mem2block_dma_fifo_rdport_dat_r = storage_12[sdcard_mem2block_dma_fifo_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_13: 512-words x 10-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 10 
// Port 1 | Read: Sync  | Write: ---- | 
reg [9:0] storage_13[0:511];
reg [9:0] storage_13_dat0;
reg [9:0] storage_13_dat1;
always @(posedge sys_clk) begin
	if (sdcard_mem2block_fifo_wrport_we)
		storage_13[sdcard_mem2block_fifo_wrport_adr] <= sdcard_mem2block_fifo_wrport_dat_w;
	storage_13_dat0 <= storage_13[sdcard_mem2block_fifo_wrport_adr];
end
always @(posedge sys_clk) begin
	if (sdcard_mem2block_fifo_rdport_re)
		storage_13_dat1 <= storage_13[sdcard_mem2block_fifo_rdport_adr];
end
assign sdcard_mem2block_fifo_wrport_dat_r = storage_13_dat0;
assign sdcard_mem2block_fifo_rdport_dat_r = storage_13_dat1;


//------------------------------------------------------------------------------
// Instance FDCE of FDCE Module.
//------------------------------------------------------------------------------
FDCE FDCE(
	// Inputs.
	.C   (crg_clkin),
	.CE  (1'd1),
	.CLR (1'd0),
	.D   (crg_reset),

	// Outputs.
	.Q   (reset0)
);

//------------------------------------------------------------------------------
// Instance FDCE_1 of FDCE Module.
//------------------------------------------------------------------------------
FDCE FDCE_1(
	// Inputs.
	.C   (crg_clkin),
	.CE  (1'd1),
	.CLR (1'd0),
	.D   (reset0),

	// Outputs.
	.Q   (reset1)
);

//------------------------------------------------------------------------------
// Instance FDCE_2 of FDCE Module.
//------------------------------------------------------------------------------
FDCE FDCE_2(
	// Inputs.
	.C   (crg_clkin),
	.CE  (1'd1),
	.CLR (1'd0),
	.D   (reset1),

	// Outputs.
	.Q   (reset2)
);

//------------------------------------------------------------------------------
// Instance FDCE_3 of FDCE Module.
//------------------------------------------------------------------------------
FDCE FDCE_3(
	// Inputs.
	.C   (crg_clkin),
	.CE  (1'd1),
	.CLR (1'd0),
	.D   (reset2),

	// Outputs.
	.Q   (reset3)
);

//------------------------------------------------------------------------------
// Instance FDCE_4 of FDCE Module.
//------------------------------------------------------------------------------
FDCE FDCE_4(
	// Inputs.
	.C   (crg_clkin),
	.CE  (1'd1),
	.CLR (1'd0),
	.D   (reset3),

	// Outputs.
	.Q   (reset4)
);

//------------------------------------------------------------------------------
// Instance FDCE_5 of FDCE Module.
//------------------------------------------------------------------------------
FDCE FDCE_5(
	// Inputs.
	.C   (crg_clkin),
	.CE  (1'd1),
	.CLR (1'd0),
	.D   (reset4),

	// Outputs.
	.Q   (reset5)
);

//------------------------------------------------------------------------------
// Instance FDCE_6 of FDCE Module.
//------------------------------------------------------------------------------
FDCE FDCE_6(
	// Inputs.
	.C   (crg_clkin),
	.CE  (1'd1),
	.CLR (1'd0),
	.D   (reset5),

	// Outputs.
	.Q   (reset6)
);

//------------------------------------------------------------------------------
// Instance FDCE_7 of FDCE Module.
//------------------------------------------------------------------------------
FDCE FDCE_7(
	// Inputs.
	.C   (crg_clkin),
	.CE  (1'd1),
	.CLR (1'd0),
	.D   (reset6),

	// Outputs.
	.Q   (reset7)
);

//------------------------------------------------------------------------------
// Instance MMCME2_ADV of MMCME2_ADV Module.
//------------------------------------------------------------------------------
MMCME2_ADV #(
	// Parameters.
	.BANDWIDTH        ("OPTIMIZED"),
	.CLKFBOUT_MULT_F  (3'd5),
	.CLKIN1_PERIOD    (5.0),
	.CLKOUT0_DIVIDE_F (4'd8),
	.CLKOUT0_PHASE    (1'd0),
	.CLKOUT1_DIVIDE   (2'd2),
	.CLKOUT1_PHASE    (1'd0),
	.CLKOUT2_DIVIDE   (3'd5),
	.CLKOUT2_PHASE    (1'd0),
	.DIVCLK_DIVIDE    (1'd1),
	.REF_JITTER1      (0.01)
) MMCME2_ADV (
	// Inputs.
	.CLKFBIN  (mmcm_fb),
	.CLKIN1   (crg_clkin),
	.PWRDWN   (crg_power_down),
	.RST      (reset7),

	// Outputs.
	.CLKFBOUT (mmcm_fb),
	.CLKOUT0  (crg_clkout0),
	.CLKOUT1  (crg_clkout1),
	.CLKOUT2  (crg_clkout2),
	.LOCKED   (crg_locked)
);

//------------------------------------------------------------------------------
// Instance VexRiscvLitexSmpCluster_Cc1_Iw32Is4096Iy1_Dw32Ds4096Dy1_ITs4DTs4_Ldw256_Ood_Hb1 of VexRiscvLitexSmpCluster_Cc1_Iw32Is4096Iy1_Dw32Ds4096Dy1_ITs4DTs4_Ldw256_Ood_Hb1 Module.
//------------------------------------------------------------------------------
VexRiscvLitexSmpCluster_Cc1_Iw32Is4096Iy1_Dw32Ds4096Dy1_ITs4DTs4_Ldw256_Ood_Hb1 VexRiscvLitexSmpCluster_Cc1_Iw32Is4096Iy1_Dw32Ds4096Dy1_ITs4DTs4_Ldw256_Ood_Hb1(
	// Inputs.
	.clintWishbone_ADR               (soclinux_clintbus_adr),
	.clintWishbone_CYC               (soclinux_clintbus_cyc),
	.clintWishbone_DAT_MOSI          (soclinux_clintbus_dat_w),
	.clintWishbone_STB               (soclinux_clintbus_stb),
	.clintWishbone_WE                (soclinux_clintbus_we),
	.dBridge_dram_cmd_ready          (soclinux_dbus_cmd_ready),
	.dBridge_dram_rdata_payload_data (soclinux_dbus_rdata_payload_data),
	.dBridge_dram_rdata_valid        (soclinux_dbus_rdata_valid),
	.dBridge_dram_wdata_ready        (soclinux_dbus_wdata_ready),
	.debugCd_external_clk            (sys_clk),
	.debugCd_external_reset          ((sys_rst | soclinux_reset)),
	.debugPort_capture               (soclinux_jtag_capture),
	.debugPort_enable                (soclinux_jtag_enable),
	.debugPort_reset                 (soclinux_jtag_reset),
	.debugPort_shift                 (soclinux_jtag_shift),
	.debugPort_tdi                   (soclinux_jtag_tdi),
	.debugPort_update                (soclinux_jtag_update),
	.iBridge_dram_cmd_ready          (soclinux_ibus_cmd_ready),
	.iBridge_dram_rdata_payload_data (soclinux_ibus_rdata_payload_data),
	.iBridge_dram_rdata_valid        (soclinux_ibus_rdata_valid),
	.iBridge_dram_wdata_ready        (soclinux_ibus_wdata_ready),
	.interrupts                      (soclinux_interrupt),
	.jtag_clk                        (soclinux_jtag_clk),
	.peripheral_ACK                  (soclinux_pbus_ack),
	.peripheral_DAT_MISO             (soclinux_pbus_dat_r),
	.peripheral_ERR                  (soclinux_pbus_err),
	.plicWishbone_ADR                (soclinux_plicbus_adr),
	.plicWishbone_CYC                (soclinux_plicbus_cyc),
	.plicWishbone_DAT_MOSI           (soclinux_plicbus_dat_w),
	.plicWishbone_STB                (soclinux_plicbus_stb),
	.plicWishbone_WE                 (soclinux_plicbus_we),

	// Outputs.
	.clintWishbone_ACK               (soclinux_clintbus_ack),
	.clintWishbone_DAT_MISO          (soclinux_clintbus_dat_r),
	.dBridge_dram_cmd_payload_addr   (soclinux_dbus_cmd_payload_addr),
	.dBridge_dram_cmd_payload_we     (soclinux_dbus_cmd_payload_we),
	.dBridge_dram_cmd_valid          (soclinux_dbus_cmd_valid),
	.dBridge_dram_rdata_ready        (soclinux_dbus_rdata_ready),
	.dBridge_dram_wdata_payload_data (soclinux_dbus_wdata_payload_data),
	.dBridge_dram_wdata_payload_we   (soclinux_dbus_wdata_payload_we),
	.dBridge_dram_wdata_valid        (soclinux_dbus_wdata_valid),
	.debugPort_tdo                   (soclinux_jtag_tdo),
	.iBridge_dram_cmd_payload_addr   (soclinux_ibus_cmd_payload_addr),
	.iBridge_dram_cmd_payload_we     (soclinux_ibus_cmd_payload_we),
	.iBridge_dram_cmd_valid          (soclinux_ibus_cmd_valid),
	.iBridge_dram_rdata_ready        (soclinux_ibus_rdata_ready),
	.iBridge_dram_wdata_payload_data (soclinux_ibus_wdata_payload_data),
	.iBridge_dram_wdata_payload_we   (soclinux_ibus_wdata_payload_we),
	.iBridge_dram_wdata_valid        (soclinux_ibus_wdata_valid),
	.peripheral_ADR                  (soclinux_pbus_adr),
	.peripheral_BTE                  (soclinux_pbus_bte),
	.peripheral_CTI                  (soclinux_pbus_cti),
	.peripheral_CYC                  (soclinux_pbus_cyc),
	.peripheral_DAT_MOSI             (soclinux_pbus_dat_w),
	.peripheral_SEL                  (soclinux_pbus_sel),
	.peripheral_STB                  (soclinux_pbus_stb),
	.peripheral_WE                   (soclinux_pbus_we),
	.plicWishbone_ACK                (soclinux_plicbus_ack),
	.plicWishbone_DAT_MISO           (soclinux_plicbus_dat_r)
);

//------------------------------------------------------------------------------
// Instance IBUFDS of IBUFDS Module.
//------------------------------------------------------------------------------
IBUFDS IBUFDS(
	// Inputs.
	.I  (clk200_p),
	.IB (clk200_n),

	// Outputs.
	.O  (crg_clkin)
);

(* ars_ff1 = "true", async_reg = "true" *)
//------------------------------------------------------------------------------
// Instance FDPE of FDPE Module.
//------------------------------------------------------------------------------
FDPE #(
	// Parameters.
	.INIT (1'd1)
) FDPE (
	// Inputs.
	.C   (sys_clk),
	.CE  (1'd1),
	.D   (1'd0),
	.PRE (impl_xilinxasyncresetsynchronizerimpl0),

	// Outputs.
	.Q   (impl_xilinxasyncresetsynchronizerimpl0_rst_meta)
);

(* ars_ff2 = "true", async_reg = "true" *)
//------------------------------------------------------------------------------
// Instance FDPE_1 of FDPE Module.
//------------------------------------------------------------------------------
FDPE #(
	// Parameters.
	.INIT (1'd1)
) FDPE_1 (
	// Inputs.
	.C   (sys_clk),
	.CE  (1'd1),
	.D   (impl_xilinxasyncresetsynchronizerimpl0_rst_meta),
	.PRE (impl_xilinxasyncresetsynchronizerimpl0),

	// Outputs.
	.Q   (sys_rst)
);

(* ars_ff1 = "true", async_reg = "true" *)
//------------------------------------------------------------------------------
// Instance FDPE_2 of FDPE Module.
//------------------------------------------------------------------------------
FDPE #(
	// Parameters.
	.INIT (1'd1)
) FDPE_2 (
	// Inputs.
	.C   (sys4x_clk),
	.CE  (1'd1),
	.D   (1'd0),
	.PRE (impl_xilinxasyncresetsynchronizerimpl1),

	// Outputs.
	.Q   (impl_xilinxasyncresetsynchronizerimpl1_rst_meta)
);

(* ars_ff2 = "true", async_reg = "true" *)
//------------------------------------------------------------------------------
// Instance FDPE_3 of FDPE Module.
//------------------------------------------------------------------------------
FDPE #(
	// Parameters.
	.INIT (1'd1)
) FDPE_3 (
	// Inputs.
	.C   (sys4x_clk),
	.CE  (1'd1),
	.D   (impl_xilinxasyncresetsynchronizerimpl1_rst_meta),
	.PRE (impl_xilinxasyncresetsynchronizerimpl1),

	// Outputs.
	.Q   (sys4x_rst)
);

(* ars_ff1 = "true", async_reg = "true" *)
//------------------------------------------------------------------------------
// Instance FDPE_4 of FDPE Module.
//------------------------------------------------------------------------------
FDPE #(
	// Parameters.
	.INIT (1'd1)
) FDPE_4 (
	// Inputs.
	.C   (idelay_clk),
	.CE  (1'd1),
	.D   (1'd0),
	.PRE (impl_xilinxasyncresetsynchronizerimpl2),

	// Outputs.
	.Q   (impl_xilinxasyncresetsynchronizerimpl2_rst_meta)
);

(* ars_ff2 = "true", async_reg = "true" *)
//------------------------------------------------------------------------------
// Instance FDPE_5 of FDPE Module.
//------------------------------------------------------------------------------
FDPE #(
	// Parameters.
	.INIT (1'd1)
) FDPE_5 (
	// Inputs.
	.C   (idelay_clk),
	.CE  (1'd1),
	.D   (impl_xilinxasyncresetsynchronizerimpl2_rst_meta),
	.PRE (impl_xilinxasyncresetsynchronizerimpl2),

	// Outputs.
	.Q   (idelay_rst)
);

//------------------------------------------------------------------------------
// Instance ODDR of ODDR Module.
//------------------------------------------------------------------------------
ODDR #(
	// Parameters.
	.DDR_CLK_EDGE ("SAME_EDGE")
) ODDR (
	// Inputs.
	.C  (sys_clk),
	.CE (1'd1),
	.D1 ((~clocker_clk0)),
	.D2 ((~clocker_clk0)),
	.R  (1'd0),
	.S  (1'd0),

	// Outputs.
	.Q  (sdcard_clk)
);

//------------------------------------------------------------------------------
// Instance IOBUF_32 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_32(
	// Inputs.
	.I  (impl_xilinxsdrtristateimpl0__o),
	.T  (impl_xilinxsdrtristateimpl0_oe_n),

	// Outputs.
	.O  (impl_xilinxsdrtristateimpl0__i),

	// InOuts.
	.IO (sdcard_cmd)
);

//------------------------------------------------------------------------------
// Instance IOBUF_33 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_33(
	// Inputs.
	.I  (impl_xilinxsdrtristateimpl1__o),
	.T  (impl_xilinxsdrtristateimpl1_oe_n),

	// Outputs.
	.O  (impl_xilinxsdrtristateimpl1__i),

	// InOuts.
	.IO (sdcard_data[0])
);

//------------------------------------------------------------------------------
// Instance IOBUF_34 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_34(
	// Inputs.
	.I  (impl_xilinxsdrtristateimpl2__o),
	.T  (impl_xilinxsdrtristateimpl2_oe_n),

	// Outputs.
	.O  (impl_xilinxsdrtristateimpl2__i),

	// InOuts.
	.IO (sdcard_data[1])
);

//------------------------------------------------------------------------------
// Instance IOBUF_35 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_35(
	// Inputs.
	.I  (impl_xilinxsdrtristateimpl3__o),
	.T  (impl_xilinxsdrtristateimpl3_oe_n),

	// Outputs.
	.O  (impl_xilinxsdrtristateimpl3__i),

	// InOuts.
	.IO (sdcard_data[2])
);

//------------------------------------------------------------------------------
// Instance IOBUF_36 of IOBUF Module.
//------------------------------------------------------------------------------
IOBUF IOBUF_36(
	// Inputs.
	.I  (impl_xilinxsdrtristateimpl4__o),
	.T  (impl_xilinxsdrtristateimpl4_oe_n),

	// Outputs.
	.O  (impl_xilinxsdrtristateimpl4__i),

	// InOuts.
	.IO (sdcard_data[3])
);

//------------------------------------------------------------------------------
// Instance ODDR_1 of ODDR Module.
//------------------------------------------------------------------------------
ODDR #(
	// Parameters.
	.DDR_CLK_EDGE ("SAME_EDGE")
) ODDR_1 (
	// Inputs.
	.C  (sys_clk),
	.CE (1'd1),
	.D1 (sdpads_cmd_o),
	.D2 (sdpads_cmd_o),
	.R  (1'd0),
	.S  (1'd0),

	// Outputs.
	.Q  (impl_xilinxsdrtristateimpl0__o)
);

//------------------------------------------------------------------------------
// Instance ODDR_2 of ODDR Module.
//------------------------------------------------------------------------------
ODDR #(
	// Parameters.
	.DDR_CLK_EDGE ("SAME_EDGE")
) ODDR_2 (
	// Inputs.
	.C  (sys_clk),
	.CE (1'd1),
	.D1 ((~sdpads_cmd_oe)),
	.D2 ((~sdpads_cmd_oe)),
	.R  (1'd0),
	.S  (1'd0),

	// Outputs.
	.Q  (impl_xilinxsdrtristateimpl0_oe_n)
);

//------------------------------------------------------------------------------
// Instance IDDR of IDDR Module.
//------------------------------------------------------------------------------
IDDR #(
	// Parameters.
	.DDR_CLK_EDGE ("SAME_EDGE")
) IDDR (
	// Inputs.
	.C  (sys_clk),
	.CE (1'd1),
	.D  (impl_xilinxsdrtristateimpl0__i),
	.R  (1'd0),
	.S  (1'd0),

	// Outputs.
	.Q1 (sdpads_cmd_i),
	.Q2 (impl0)
);

//------------------------------------------------------------------------------
// Instance ODDR_3 of ODDR Module.
//------------------------------------------------------------------------------
ODDR #(
	// Parameters.
	.DDR_CLK_EDGE ("SAME_EDGE")
) ODDR_3 (
	// Inputs.
	.C  (sys_clk),
	.CE (1'd1),
	.D1 (sdpads_data_o[0]),
	.D2 (sdpads_data_o[0]),
	.R  (1'd0),
	.S  (1'd0),

	// Outputs.
	.Q  (impl_xilinxsdrtristateimpl1__o)
);

//------------------------------------------------------------------------------
// Instance ODDR_4 of ODDR Module.
//------------------------------------------------------------------------------
ODDR #(
	// Parameters.
	.DDR_CLK_EDGE ("SAME_EDGE")
) ODDR_4 (
	// Inputs.
	.C  (sys_clk),
	.CE (1'd1),
	.D1 ((~sdpads_data_oe)),
	.D2 ((~sdpads_data_oe)),
	.R  (1'd0),
	.S  (1'd0),

	// Outputs.
	.Q  (impl_xilinxsdrtristateimpl1_oe_n)
);

//------------------------------------------------------------------------------
// Instance IDDR_1 of IDDR Module.
//------------------------------------------------------------------------------
IDDR #(
	// Parameters.
	.DDR_CLK_EDGE ("SAME_EDGE")
) IDDR_1 (
	// Inputs.
	.C  (sys_clk),
	.CE (1'd1),
	.D  (impl_xilinxsdrtristateimpl1__i),
	.R  (1'd0),
	.S  (1'd0),

	// Outputs.
	.Q1 (sdpads_data_i[0]),
	.Q2 (impl1)
);

//------------------------------------------------------------------------------
// Instance ODDR_5 of ODDR Module.
//------------------------------------------------------------------------------
ODDR #(
	// Parameters.
	.DDR_CLK_EDGE ("SAME_EDGE")
) ODDR_5 (
	// Inputs.
	.C  (sys_clk),
	.CE (1'd1),
	.D1 (sdpads_data_o[1]),
	.D2 (sdpads_data_o[1]),
	.R  (1'd0),
	.S  (1'd0),

	// Outputs.
	.Q  (impl_xilinxsdrtristateimpl2__o)
);

//------------------------------------------------------------------------------
// Instance ODDR_6 of ODDR Module.
//------------------------------------------------------------------------------
ODDR #(
	// Parameters.
	.DDR_CLK_EDGE ("SAME_EDGE")
) ODDR_6 (
	// Inputs.
	.C  (sys_clk),
	.CE (1'd1),
	.D1 ((~sdpads_data_oe)),
	.D2 ((~sdpads_data_oe)),
	.R  (1'd0),
	.S  (1'd0),

	// Outputs.
	.Q  (impl_xilinxsdrtristateimpl2_oe_n)
);

//------------------------------------------------------------------------------
// Instance IDDR_2 of IDDR Module.
//------------------------------------------------------------------------------
IDDR #(
	// Parameters.
	.DDR_CLK_EDGE ("SAME_EDGE")
) IDDR_2 (
	// Inputs.
	.C  (sys_clk),
	.CE (1'd1),
	.D  (impl_xilinxsdrtristateimpl2__i),
	.R  (1'd0),
	.S  (1'd0),

	// Outputs.
	.Q1 (sdpads_data_i[1]),
	.Q2 (impl2)
);

//------------------------------------------------------------------------------
// Instance ODDR_7 of ODDR Module.
//------------------------------------------------------------------------------
ODDR #(
	// Parameters.
	.DDR_CLK_EDGE ("SAME_EDGE")
) ODDR_7 (
	// Inputs.
	.C  (sys_clk),
	.CE (1'd1),
	.D1 (sdpads_data_o[2]),
	.D2 (sdpads_data_o[2]),
	.R  (1'd0),
	.S  (1'd0),

	// Outputs.
	.Q  (impl_xilinxsdrtristateimpl3__o)
);

//------------------------------------------------------------------------------
// Instance ODDR_8 of ODDR Module.
//------------------------------------------------------------------------------
ODDR #(
	// Parameters.
	.DDR_CLK_EDGE ("SAME_EDGE")
) ODDR_8 (
	// Inputs.
	.C  (sys_clk),
	.CE (1'd1),
	.D1 ((~sdpads_data_oe)),
	.D2 ((~sdpads_data_oe)),
	.R  (1'd0),
	.S  (1'd0),

	// Outputs.
	.Q  (impl_xilinxsdrtristateimpl3_oe_n)
);

//------------------------------------------------------------------------------
// Instance IDDR_3 of IDDR Module.
//------------------------------------------------------------------------------
IDDR #(
	// Parameters.
	.DDR_CLK_EDGE ("SAME_EDGE")
) IDDR_3 (
	// Inputs.
	.C  (sys_clk),
	.CE (1'd1),
	.D  (impl_xilinxsdrtristateimpl3__i),
	.R  (1'd0),
	.S  (1'd0),

	// Outputs.
	.Q1 (sdpads_data_i[2]),
	.Q2 (impl3)
);

//------------------------------------------------------------------------------
// Instance ODDR_9 of ODDR Module.
//------------------------------------------------------------------------------
ODDR #(
	// Parameters.
	.DDR_CLK_EDGE ("SAME_EDGE")
) ODDR_9 (
	// Inputs.
	.C  (sys_clk),
	.CE (1'd1),
	.D1 (sdpads_data_o[3]),
	.D2 (sdpads_data_o[3]),
	.R  (1'd0),
	.S  (1'd0),

	// Outputs.
	.Q  (impl_xilinxsdrtristateimpl4__o)
);

//------------------------------------------------------------------------------
// Instance ODDR_10 of ODDR Module.
//------------------------------------------------------------------------------
ODDR #(
	// Parameters.
	.DDR_CLK_EDGE ("SAME_EDGE")
) ODDR_10 (
	// Inputs.
	.C  (sys_clk),
	.CE (1'd1),
	.D1 ((~sdpads_data_oe)),
	.D2 ((~sdpads_data_oe)),
	.R  (1'd0),
	.S  (1'd0),

	// Outputs.
	.Q  (impl_xilinxsdrtristateimpl4_oe_n)
);

//------------------------------------------------------------------------------
// Instance IDDR_4 of IDDR Module.
//------------------------------------------------------------------------------
IDDR #(
	// Parameters.
	.DDR_CLK_EDGE ("SAME_EDGE")
) IDDR_4 (
	// Inputs.
	.C  (sys_clk),
	.CE (1'd1),
	.D  (impl_xilinxsdrtristateimpl4__i),
	.R  (1'd0),
	.S  (1'd0),

	// Outputs.
	.Q1 (sdpads_data_i[3]),
	.Q2 (impl4)
);

endmodule

// -----------------------------------------------------------------------------
//  Auto-Generated by LiteX on 2025-01-14 16:53:07.
//------------------------------------------------------------------------------
